{"Q_ID": "1111210010", "S_NAME": "Input & Ouput", "Q_NAME": "Maria Restaurant", "Q_DESC": "Marian has his own restaurant in the city. There are N waiters there. Each waiter has his own salary.The salary of the i-th waiter equals to Wi (i = 1, 2, ..., N). Once, Marian decided to equalize all waiters, that is, he wants to make salaries of all waiters to be equal. But for this goal he can use only one operation: choose some waiter and increase by 1 salary of each waiter, except the salary of the chosen waiter. In other words, the chosen waiter is the loser, who will be the only waiter, whose salary will be not increased during this particular operation. But loser-waiter can be different for different operations, of course. Marian can use this operation as many times as he wants. But he is a busy man. That s why he wants to minimize the total number of operations needed to equalize all waiters. Your task is to find this number.\nInput\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the number of waiters. The second line contains N space-separated integers W1, W2, ..., WN denoting the salaries of the waiters.\nOutput\n\nFor each test case, output a single line containing the minimum number of operations needed to equalize all waiters.\nConstraints\n\n    1<=T<=100\n    1<=N<=100\n    0<=Wi<=10000 (104)\n\nExplanation\n\nExample Case 1. Mariacan equalize all salaries in 3 turns:\n\nTurn ID\tIDs of involved waiters\tSalaries after the move\n1\t1 2\t2 3 3\n2\t1 2\t3 4 3\n3\t1 3\t4 4 4\nExample Case 2. All salaries are already equal. He doesnt need to do anything.\n", "TESTCASE_1": "2\n3\n1 2 3\n2\n42 42\n###---###SEPERATOR---###---\n3\n0", "TESTCASE_2": "1\n2\n7 8\n###---###SEPERATOR---###---\n1", "TESTCASE_3": "\n10\n1\n3\n2\n1 3 \n3\n99 99 99\n4 \n9999 9999 9999 9999\n5\n1000 1000 1000 1000 1000\n6\n1 3 3 4 5 3\n7\n1 1 1 1 1 1 1\n8\n9 9 9 9 9 9 9 9\n9\n2 2 2 2 2 2 2 2 2\n10\n1 3 4 5 5 3 3 4 3 3\n###---###SEPERATOR---###---\n0\n2\n0\n0\n0\n13\n0\n0\n0\n24", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}