{"Q_ID": "1111210016", "S_NAME": "Input & Ouput", "Q_NAME": "Shara in Byteland", "Q_DESC": "Shara is a little girl form Bytenicut, a small and cozy village located in the country of Byteland.\n\n As the village is located on a somewhat hidden and isolated area, little Shara is a bit lonely and she needs to invent new games that she can play for herself.\n\nHowever, Shara is also very clever, so, she already invented a new game.\n\nShe has many stones with her, which she will display on groups of three stones on the ground on a triangle like shape and then, she will select two triangles, one with the smallest area and one with the largest area as the most beautiful ones.\n\nWhile its easy for Shara to \"estimate\" the areas of the triangles by their relative sizes, its harder for her to actually calculate these areas.\n\nBut, it turns out, that Shara is also friends with YOU, an exceptional Mathematics student, and she knew that you would know exactly how to do such verification.\n\nShara also numbered the triangles from 1 to N, and now she wants to know the indices of the triangles with the smallest and largest area respectively.\n\nIt is now up to you, to help Shara and calculate the areas of the triangles and output their numbers.\n\nInput\n\nThe first line of the input file contains an integer, N, denoting the number of triangles on the given input file.\n\nThen N lines follow, each line containing six space-separated integers, denoting the coordinates x1, y1, x2, y2, x3, y3\n\nOutput\n\nYou should output two space separated integers, the indexes of the triangles with the smallest and largest area, respectively.\n\nIf there are multiple triangles with the same area, then the last index should be printed.\n\nConstraints\n\n2 <= N <= 100\n-1000 <= xi, yi <= 1000\n ", "TESTCASE_1": "2\n0 0 0 100 100 0\n1 1 1 5 5 1\n###---###SEPERATOR---###---\n2 1", "TESTCASE_2": "3\n1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n###---###SEPERATOR---###---\n3 3", "TESTCASE_3": "25\n-1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 -1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 -1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 -1000 1000 1000\n999 999 999 999 999 999 999\n1000 1000 1000 1000 1000 1000\n###---###SEPERATOR---###---\n24 25", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}