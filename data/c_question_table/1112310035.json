{"Q_ID": "1112310035", "S_NAME": "Data types", "Q_NAME": "PEAKS", "Q_DESC": "reena has many friends. Out of all his friends, Akshit and Aditi are the two biggest foodies. reena knows that their weakness is food. she wants them to strengthen their programming skills. But they are too lazy to do stuff without motivation. So reena promises that she would get them special european chocolates if they solved the problem that she gives them. reena also knows that her friends are fiercely competitive. So to make sure they like the problem, this is what she gives them:\n\nThey are given a sequence S of N distinct integers (sequence is 1-indexed). These arent random integers. These integers are the marks that their friend Aayan has received in the N tests that he has taken in college this term. So S[i] denotes the marks in ith test. Furthermore, reena gives them two more non-negative integers, A and B, and asks them to perform an interesting analysis of Aayans performance in order to determine whether Aayan is underperforming or not.\n\nTheir task is to count the number of subsequences in S that have exactly A local minima and B local maxima. The answer could be extremely huge; therefore it should be calculated modulo 109 + 9.\n\nNow, we define what local minimum and local maximum mean.\n\nLets consider some subsequence of S formed by indices i1, i2, ..., iK(1  K; 1  i1 < i2 < ... < iK  N).\n\nIndex ij(1 < ij < K) is said to be a local minimum if the S[ij - 1] > S[ij] < S[ij + 1] condition holds.\n\nIn a similar way, index ij(1 < ij < K) is said to be a local maximum if the S[ij - 1] < S[ij] > S[ij + 1] condition holds.\nInput\n\nThe first line of the input contains an integer T denoting the number of test cases (they want to analyse Aayans performance over several months). The description of T test cases follows.\n\nThe first line of each test case contains three integers N, A and B. The next line contains N integers denoting the given sequence S.\n\nIts guaranteed that all the integers in the sequence are distinct.\nOutput\n\nFor each test case, output a single line containing the number of described subsequences modulo 109 + 9.\nConstraints\n\n    1  T  10\n    |S[i]|  109", "TESTCASE_1": "3\n5 2 1\n2 1 4 3 5\n10 0 0\n1 2 3 4 5 6 7 8 9 10\n6 0 1\n-1 -11 9 10 -10 -2\n###---###SEPERATOR---###---\n1\n1023\n14", "TESTCASE_2": "1\n5 2 1\n3 2 5 3 4\n###---###SEPERATOR---###---\n1", "TESTCASE_3": "2\n10 0 0\n1 2 3 4 5 6 7 8 9 10\n6 0 1\n-2 -5 -4 10 -10 -3\n###---###SEPERATOR---###---\n1023\n9", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}