{"Q_ID": "1112310038", "S_NAME": "Data types", "Q_NAME": "Transform the Expression", "Q_DESC": "Reverse Polish Notation (RPN) is a mathematical notation where every operator follows all of its operands. For instance, to add three and four, one would write \"3 4 +\" rather than \"3 + 4\". If there are multiple operations, the operator is given immediately after its second operand; so the expression written \"3  4 + 5\" would be written \"3 4  5 +\" first subtract 4 from 3, then add 5 to that.\n\nTransform the algebraic expression with brackets into RPN form.\n\nYou can assume that for the test cases below only single letters will be used, brackets [] will not be used and each expression has only one RPN form (no expressions like a*b*c)\nInput\n\nThe first line contains t, the number of test cases (less then 100).\n\nFollowed by t lines, containing an expression to be translated to RPN form, where the length of the expression is less then 400.\nOutput\n\nThe expressions in RPN form, one per line.", "TESTCASE_1": "3\n(a+(b*c))\n((a+b)*(z+x))\n((a+t)*((b+(a+c))^(c+d)))\n###---###SEPERATOR---###---\nabc*+\nab+zx+*\nat+bac++cd+^*", "TESTCASE_2": "2\n(a/b)-c\n((a*b)/(a+b))\n###---###SEPERATOR---###---\nab/c-\nab*ab+/", "TESTCASE_3": "4\n(a+b)\n((a/b)/(a(b*c))+(a/b))\nb+c/a\n(a*b)*(b*c)+((a/b)*(b/c))\n###---###SEPERATOR---###---\nab+\nab/abc*/ab/+\nbca/+\nab*bc**ab/bc/*+", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}