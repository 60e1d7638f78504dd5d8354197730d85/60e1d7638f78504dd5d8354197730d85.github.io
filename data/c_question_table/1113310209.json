{"Q_ID": "1113310209", "S_NAME": "Operators", "Q_NAME": "Typing Case", "Q_DESC": "\"Weve all seen that ask for conversion from snake-case to camel-case, from camel-case to snake-case, or from camel-case to kebab-case  the possibilities are endless.\nBut if we dont know the case our inputs are in, these are not very helpful.\nTask:\nSo the task here is to implement a function (called id in Ruby/Crystal/JavaScript/CoffeeScript and case_id in Python/C) that takes a string, c_str, and returns a string with the case the input is in. The possible case types are kebab, camel, and snake. If none of the cases match with the input, or if there are no 'spaces' in the input (for example in snake case, spaces would be '_'s), return none. Inputs will only have letters (no numbers or special characters).\nSome definitions\nKebab case: lowercase-words-separated-by-hyphens\nCamel case: lowercaseFirstWordFollowedByCapitalizedWords\nSnake case: lowercase_words_separated_by_underscores\nExamples:\ncase_id(hello-world) #=> kebab\ncase_id(hello-to-the-world) #=> kebab\ncase_id(helloWorld) #=> camel\ncase_id(helloToTheWorld) #=> camel\ncase_id(hello_world) #=> snake\ncase_id(hello_to_the_world) #=> snake\ncase_id(hello__world) #=> none\ncase_id(hello_World) #=> none\ncase_id(helloworld) #=> none\ncase_id(hello-World) #=> none\n\"", "TESTCASE_1": "hello_to_the_world\n###---###SEPERATOR---###---\nsnake", "TESTCASE_2": "hello-world\n###---###SEPERATOR---###---\nkebab", "TESTCASE_3": "goodNight\n###---###SEPERATOR---###---\ncamel", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}