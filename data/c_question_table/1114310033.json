{"Q_ID": "1114310033", "S_NAME": "Control and Looping", "Q_NAME": "Careful Calculation", "Q_DESC": "You are given a single integer N. Its very large, so its given as a product of several prime powers: N = p1k1 p2k2 ... pmkm.\n\nLets define (N) as Eulers totient function -- the number of positive integers less than or equal to N that are relatively prime to N.\n\nLet N1 = (N). Let N2 = (N1). Further, let NX = (NX-1) for X  2.\n\nYour task is to find the smallest positive integer X such that NX = 1. Only careful calculation might help... or will it be enough?\nInput\n\nThe first line of the input file contains one integer T -- the number of test cases (no more than 10). Each test case is described by a line containing one positive integer m followed by m lines, each containing two integers pi and ki (1  pi  100000, 1  ki  109) separated by a single space. Its guaranteed that all pi are pairwise distinct prime numbers in each test case (note that the upper limit on m can be determined from this constraint).\nOutput\n\nFor each test case output just one line containing the required smallest positive integer X. ", "TESTCASE_1": "1\n2\n2 2\n3 1\n###---###SEPERATOR---###---\n3", "TESTCASE_2": "1\n2\n2 4\n3 5\n###---###SEPERATOR---###---\n9", "TESTCASE_3": "1\n2\n8 2\n3 6\n###---###SEPERATOR---###---\n11", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}