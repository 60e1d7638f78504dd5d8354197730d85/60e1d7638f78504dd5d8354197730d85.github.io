{"Q_ID": "1115210018", "S_NAME": "Arrays", "Q_NAME": "Roy and Trending Topics-CARA010", "Q_DESC": "Roy is trying to develop a widget that shows Trending Topics (similar to Facebook) on the home page ofHackerEarth Academy. \nHe has gathered a list of N Topics (their IDs) and their popularity score (say z-score) from the database. Now z-score change everyday according to the following rules:\n\nWhen a topic is mentioned in a Post, its z-score is increased by 50.\nA Like on such a Post, increases the z-score by 5.\nA Comment increases z-score by 10.\nA Share causes an increment of 20.\nNow the Trending Topics are decided according to the change in z-score. One with the highest increment comes on top and list follows.\nRoy seeks your help to write an algorithm to find the top 5 Trending Topics.\nIf change in z-score for any two topics is same, then rank them according to their ID (one with higher ID gets priority). It is guaranteed that IDs will be unique.\n\nInput format:\nFirst line contains integer N\nN lines follow\nEach contains 6 space separated numbers representing Topic ID, current z-score - Z, Posts - P, Likes - L, Comments - C, Shares - S\n\nOutput format:\nPrint top 5 Topics each in a new line.\nEach line should contain two space separated integers, Topic ID and new z-score of the topic.\n\nConstraints:\n1=N=106 \n1=ID=109 \n0=Z, P, L, C, S=109", "TESTCASE_1": "8\n1003 100 4 0 0 0\n1002 200 6 0 0 0\n1001 300 8 0 0 0\n1004 100 3 0 0 0\n1005 200 3 0 0 0\n1006 300 5 0 0 0\n1007 100 3 0 0 0\n999 100 4 0 0 0\n###---###SEPERATOR---###---\n1003 200\n1002 300\n1001 400\n999 200\n1007 150", "TESTCASE_2": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_3": "6\n123 12 1 2 3 4\n223 11 14 15 21 27\n500 123 134 100 100 100 \n234 2 0 0 0 0\n212 1 1 1 1 1\n229 23 24 34 12 11\n###---###SEPERATOR---###---\n500 10200\n229 1710\n223 1525\n123 170\n212 85", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}