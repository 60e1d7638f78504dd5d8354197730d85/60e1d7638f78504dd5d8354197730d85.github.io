{"Q_ID": "1115210038", "S_NAME": "Arrays", "Q_NAME": "Akash and too many assignments -CARA030", "Q_DESC": "Akash is an assignment-o-holic kind of a person, hes crazy about solving assignments. So, to test his skills, his professor has given him an assignment to solve.\nIn this assignment, Akash is given a String S of length N consisting of lowercase letters (a - z) only. And he has to take Carried of 2 types of operations.\nOperation type #1: [ 0 index c ] - 0 denotes the operation type #1. This operation expects you to change the character at index index to character c i.e., String[index] = c.\nOperation type #2: [ 1 LeftLimit RightLimit K ] - 1 denotes the operation type #2. It expects you to print thelexicographically Kth smallest character in the sub-string of String S starting from LeftLimit to RightLimit, inclusively.\nHelp Akash out in solving this tricky assignment!\nNote: The lexicographic order means that the words are arranged in a similar fashion as they are presumed to appear in a dictionary. For example: The words a1a2.....ak will be appearing before the words d1d2....dk in the dictionary.\nInput format:\nThe first line contains 2 space separated integers N and Q, denoting the length of the string and the number of operations respectively.\nThe next line has a string S of length N.\nThe next Q lines denote the update/print operations, where 0 and 1 denote the type of operation which has to happen.\nOutput format:\nFor each print operation, output the lexicographically Kth smallest character in the substring of S starting fromLeftLimit to RightLimit if possible, else print Out of range. (Without quotes)\nConstraints:\n1 = Size of the string = 106\n1 = Number of queries = 105\n1 = LeftLimit, RightLimit, index = N\nc is a lowercase Latin letter only\n1 = K = N\nS contains only lowercase latin letters (a to z).\nNote: Operations are iterative in nature i.e., after each update operation string S gets updated and subsequent operations will performed on the updated string.", "TESTCASE_1": "5 3\naabbc\n1 2 5 3\n0 3 a\n1 3 3 1\n###---###SEPERATOR---###---\nb\na", "TESTCASE_2": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}