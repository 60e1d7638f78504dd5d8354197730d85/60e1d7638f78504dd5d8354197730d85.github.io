{"Q_ID": "1115210078", "S_NAME": "Arrays", "Q_NAME": "Cook", "Q_DESC": "Chef is on a vacation these days, so his friend Chefza is trying to solve Chefs everyday tasks.\n\nTodays task is to make a sweet roll. Rolls are made by a newly invented cooking machine. The machine is pretty universal - it can make lots of dishes and Chefza is thrilled about this.\n\nTo make a roll, Chefza has to set all the settings to specified integer values. There are lots of settings, each of them set to some initial value. The machine is pretty complex and there is a lot of cooking to be done today, so Chefza has decided to use only two quick ways to change the settings. In a unit of time, he can pick one setting (lets say its current value is v) and change it in one of the following ways.\n\nIf v is even, change this setting to v/2. If v is odd, change it to (v  1)/2.\nChange setting to 2  v\nThe receipt is given as a list of integer values the settings should be set to. It is guaranteed that each destination setting can be represented as an integer power of 2.\n\nSince Chefza has just changed his profession, he has a lot of other things to do. Please help him find the minimum number of operations needed to set up a particular setting of the machine. You can prove that it can be done in finite time.\n\nInput\n\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\n\nThe only line of each test case contains two integers A and B denoting the initial and desired values of the setting, respectively.\n\nOutput\n\nFor each test case, output a single line containing minimum number of operations Chefza has to perform in order to set up the machine.\n\nConstraints\n\n1 = T = 200\n1 = A = 107\n1 = B = 107, and B is an integer power of 2\nSubtasks\n\nSubtask #1 [40 points]: A = 100 and B = 100\nSubtask #2 [60 points]: No additional constraints", "TESTCASE_1": "6\n1 1\n2 4\n3 8\n4 16\n4 1\n1 4\n###---###SEPERATOR---###---\n0\n1\n4\n2\n2\n2", "TESTCASE_2": "3\n5 8\n3 4\n5 6\n###---###SEPERATOR---###---\n3\n3\n4", "TESTCASE_3": "3\n1 1\n2 4\n3 8\n###---###SEPERATOR---###---\n0\n1\n4", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}