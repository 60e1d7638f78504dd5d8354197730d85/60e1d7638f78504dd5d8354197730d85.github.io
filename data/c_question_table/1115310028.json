{"Q_ID": "1115310028", "S_NAME": "Arrays", "Q_NAME": "Domination", "Q_DESC": "Chef likes problems with arrays. Lets call an array V dominating if there exists a number x (the dominator) whose number of occurrences is strictly greater than half the size of the array (that is, floor(|V|/2)).\n\nFor example, the arrays {1, 2, 1} is dominating, with the number 1 being the dominator, since half the size of the array is 1, while the number 1 occurs twice. Similarly, the array {1, 1, 1, 2} is dominating. On the other hand, the arrays {1, 2, 3} and {1, 2, 2, 1} are not dominating.\n\nGiven an array A consisting of N positive integers, you need to help Chef find the number of subarrays of A which are dominating.\n\nInput\n\nThe first line of input contains one integer N denoting the number of elements in the array A. The second line of input contains N space-separated integers denoting the array A.\n\nOutput\n\nOutput the answer to the query in a single line.\n\nConstraints\n\n1  N  5  105\n1  Ai  10", "TESTCASE_1": "5\n1 2 1 2 1\n###---###SEPERATOR---###---\n9", "TESTCASE_2": "7\n1 2 3 3 2 1 3\n###---###SEPERATOR---###---\n11", "TESTCASE_3": "4\n3 5 2 7\n###---###SEPERATOR---###---\n4", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}