{"Q_ID": "1116210065", "S_NAME": "String", "Q_NAME": "Rotate the string", "Q_DESC": "\"Did you know that a cluster of bananas can also be called a hand of bananas ? No points for guessing what the individual bananas are called. ya.. fingers :). The monkey from the valley of food is all set to fight for the title Dragon Chef after having a hand of bananas for breakfast. As you know that the judge, master Oogway is always late for the show, the monkey and Po decided to play a game. They took a string of characters and started rotating it.\n\nA k-rotation on a string takes the trailing k characters of the string and attaches it to the beginning of the string in the same order. For eg. 3-rotation on the string \"\"noodles\"\" results in the string \"\"lesnood\"\". On the given string S, the monkey performs a M-rotation and gives it to Po. Po performs a P-rotation on it and gives back to the monkey. The monkey again performs a M-rotation on it and so on... Though Shifu is getting angry watching the monkey play with Po, he is wondering after how many minimum (non-zero) number of rotations we can get back to the original string S. This can happen after a rotation performed by the monkey or Po. Please find it for him.\nInput\n\nFirst line contains T ( number of test cases, around 10 ). T cases follow. Each case consists of two lines. First line has the string S of length n ( 1 <= n <= 500,000 ), having (a-z , A-Z). Second line contains two integers M P separated by a space ( 1 <= M, P <= n ). Comparisons are case sensitive i.e., a is not equal to A.\nOutput\n\nFor each test case, output the answer in a new line. If its impossible to get back to the original string by performing the rotations as mentioned above, print -1 \"\n", "TESTCASE_1": "2\nAbcDef\n1 2\nabcabc\n1 1\n###---###SEPERATOR---###---\n4\n3", "TESTCASE_2": "1\nAbcDefGhi\n1 2\n###---###SEPERATOR---###---\n6\n", "TESTCASE_3": "1\nDefGhi\n1 1\n###---###SEPERATOR---###---\n6", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}