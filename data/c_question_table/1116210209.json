{"Q_ID": "1116210209", "S_NAME": "String", "Q_NAME": "Lucky palin", "Q_DESC": "Chef Palin, as his name suggests, is always very interested in palindromic strings. Recently, he made a pretty interesting discovery on palindromes and that made him feel really Lucky. He came across something known as Lucky Palindromes. He defines a string as being a lucky palindrome if it is a palindrome containing the string lucky as a substring. As always, now he wants to turn every string he comes across into a lucky palindrome. Being a chef, he is a man of patience and creativity, so he knows the operation of replacing any character of the string with any other character very well and he can perform this action infinitely many times. He wants you to write a program that can help him convert a given string to a lucky palindrome using the minimum number of operations and if several such lucky palindromes are possible, then output the lexicographically smallest one. \n", "TESTCASE_1": "3\nlaubcdkey\nluckycodechef\naaaaaaaa\n###---###SEPERATOR---###---\nluckykcul 8\nluckycocykcul 6\nunlucky", "TESTCASE_2": "3\nlabbcudkey\nluckychef\naaabcaaaaa\n###---###SEPERATOR---###---\nluckyykcul 9\nluckykcul 4\nluckyykcul 10", "TESTCASE_3": "3\nlabbbbbbbb\nluckycode\naaabcccccc\n###---###SEPERATOR---###---\nluckyykcul 9\nluckykcul 4\nluckyykcul 9", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}