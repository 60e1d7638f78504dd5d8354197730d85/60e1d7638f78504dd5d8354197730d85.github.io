{"Q_ID": "1116310008", "S_NAME": "String", "Q_NAME": "Dream", "Q_DESC": "The Chef is sleeping now. He tries to cook new kind of meals in his dream.\n\nThese meals are arranged in a row and numbered from 1 to N consecutively. For each meal i (1<=i<=N) there is given one integer f(i) which denotes the time needed to cook it. Initially, all meals are uncooked. Each assistant of The Chef (there are infinite number of them) can help him with cooking.\n\nThe abilities of all assistants are same. There can be at most one assistant cooking at each moment. He must choose some continuous subsequence of meals with length K(any such subsequence can be chosen). And if there are uncooked meals in it, he will cook all uncooked meals which has the minimum cooking time among uncooked meals in the chosen subsequence. Nothing done to another meals. \n\nThe dream was so interesting that he tried to solve such a problem: What is the minimum number of assistants which can cook all the meals assuming that each of them will cook at most once? But since the bell rings and Chefs friends has come to visit him, he will wake up after 2 seconds. Your program should calculate the answer before The Chef will come to himself.\n\nInput\nFirst line of input file contains two integers N (1<=N<=105) and K (1<=K<=N), followed by a line containingN integers. The ith integer denotes f(i)-the cooking time of meal number i (1<=f(i)<=109)\n\nOutput\nPrint minimum number of assistans which can cook all the meals in one line.\n\nExplanation: \n3 assistants are enough to cook all the meals. They can work in following schedule: \n1st assistant chooses interval [2,4] and cooks meals 2 and 4. \n2nd assistant chooses interval [1,3] and cooks meals 1 and 3. \n3rd assistant chooses interval [3,5] and cooks meal 5. \nOther schedules can also be possible.", "TESTCASE_1": "5 3\n40 30 40 30 40\n###---###SEPERATOR---###---\n3", "TESTCASE_2": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}