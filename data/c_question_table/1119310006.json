{"Q_ID": "1119310006", "S_NAME": "Pointers", "Q_NAME": "Queries on a Binary Tree", "Q_DESC": "Lets consider a rooted binary tree with the following properties:\nThe number of nodes and edges in the tree is infinite\nThe tree root is labeled by 1\nA node labeled by v has two children: 2 ? v (the left son of v) and 2 ? v + 1 (the right son of v)\nHere is an image of the first several tree layers of such a tree:\nLets consider four operations, that are allowed to apply during the tree traversal:\nmove to the left son - move from v to 2 ? v\nmove to the right son - move from v to 2 ? v + 1\nmove to the parent as a left son - move from v to v / 2 if v is an even integer\nmove to the parent as a right son - move from v to (v - 1) / 2 if v is an odd integer\nIt can be proven, that for any pair of two nodes u and v, there is only one sequence of such commands, that moves from u to v and visits each node of the tree at most once. Lets call such a sequence of commands a path configuration for a pair of nodes (u, v).\nYou are asked to process a series of the following queries:\nYou are given three integers n, u and v (1 <=u, v <= n). Count the pairs of nodes (w, t) (1 <= w, t <= n) such that the path configuration for (w, t) is the same with the path configuration for (u, v).\nInput\nThe first line of input contains an integer Q denoting the number of queries to process.\nEach of the next Q lines contains three space-separated integers n, u and v denoting a query.\nOutput\nFor each query, print the answer on a separate line.", "TESTCASE_1": "3\n11 9 11\n10 2 2\n8 1 8\n###---###SEPERATOR---###---\n2\n10\n1", "TESTCASE_2": "1\n2 1 1\n###---###SEPERATOR---###---\n2", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}