{"Q_ID": "1119310037", "S_NAME": "Pointers", "Q_NAME": "Lucky Array ", "Q_DESC": "Chef loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nChef likes sequences of n positive integers, each of which does not exceed m. The total number of such sequences is equal to m^n.\n\nChef has an array C of n-1 integers. Let F(x) be equal to the number of lucky digits in decimal representation of integer x. Let there be a sequence A of n integers (1-based numeration). Chef calls it lucky when the following hold: if for each i (1 = i  n) if C[i] equals to 1, then F(A[i]) must be equal to F(A[i+1]) and if C[i] equals to 0, then F(A[i]) must not be equal to F(A[i+1]).\n\nChef has integers n, m, k and an array C. He wants to find out the k-th lucky sequence for a given array C. Help him. If the k-th lucky sequence does not exist, print the only integer -1.\n\nThe k-th lucky sequence is the k-th (1-based numeration) sequence in lexicographically sorted list of all lucky sequences for given integers n, m and an array C. The sequence A is lexicographic less than the sequence B if there exits integer x (1 = x = n) that A[x]  B[x] and A[y] = B[y] for all y (1 = y  x).\nInput\n\nFirst line contains one number T - the number of test cases. Each test is formed as following: first line contains 3 integers n, m, and k. Next line contains n-1 integers - array C for corresponding test.\nOutput\n\nFor each T test cases print sequence of integers - answer for corresponding test.\nConstraints\n\n2 = T = 10\n\n2 = n = 50\n\n1 = m, k = 10^9\n\n0 = C[i] = 1 ", "TESTCASE_1": "2\n2 4 7\n0\n3 7 4\n0 1\n###---###SEPERATOR---###---\n-1\n1 7 7", "TESTCASE_2": "2\n2 4 7\n0\n3 7 4\n0 1\n###---###SEPERATOR---###---\n-1\n1 7 7", "TESTCASE_3": "2\n2 4 7\n0\n3 7 4\n0 1\n###---###SEPERATOR---###---\n-1\n1 7 7", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0 ###---###SEPERATOR---###--- 0"}