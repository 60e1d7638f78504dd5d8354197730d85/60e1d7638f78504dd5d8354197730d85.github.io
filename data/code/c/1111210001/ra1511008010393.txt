#include <stdio.h>
int a[1000001];
void max_heapify(int n,int i)
{
  int right,left,largest;
  left=2*i;
  right=left+1;
  largest=i;
  if(left<=n&&a[largest]<a[left])
    largest=left;
  if(right<=n&&a[largest]<a[right])
    largest=right;
  if(largest!=i)
  {
    int temp;
    temp=a[i];
    a[i]=a[largest];
    a[largest]=temp;
    max_heapify(n,largest);
    
  }
  return;
}
void build_maxheap(int n)
{
  int i=n/2;
  for(;i>=1;i--)
  {
    max_heapify(n,i);
  }
  return;
}
void heap_sort(int n)
{
  int heap_size=n;
  int i,t;
  build_maxheap(n);
  for(i=n;i>=2;i--)
  {
    t=a[1];
    a[1]=a[i];
    a[i]=t;
    heap_size=heap_size-1;
    max_heapify(heap_size,1);
  }
  return;
}
int main()
{
  int n,i,m;
  long long int sum=0;
  scanf("%d %d",&m,&n);
  for(i=1;i<=m;i++)
  {
    scanf("%d",&a[i]);
  }
  build_maxheap(m);
  for(i=0;i<n;i++)
  {
    sum=sum+a[1];
    a[1]=a[1]-1;
    max_heapify(m,1);
    
  }
  printf("%lld",sum);
	return 0;
}