#include <stdio.h>
typedef long long int LLI;
#define inchar getchar_unlocked
inline int inIntPos() {
	int n,ch;
	while((ch = inchar())<'0');
	n =(ch-'0');
	while((ch = inchar())>='0')
		n=(n<<3)+(n<<1)+(ch-'0');
	return n;
}
inline int min(int a, int b) { return a>b?b:a; }
 
#define MOD 1000000007
#define MAX_N 100004
#define MAX_C 1002
LLI up[MAX_C];
LLI lo[MAX_C];
LLI dp[MAX_C][MAX_C];
int res[MAX_C];
 
int main() {
	int i,j,n,m,c;
	int count;
 
	n=inIntPos();
	m=inIntPos();
	c=inIntPos();
 
	for(i=1; i<=c; ++i) up[i]=0;
	for(i=1; i<=c; ++i) lo[i]=0;
 
	for(i=0; i<n; ++i) ++up[inIntPos()];
	for(i=0; i<m; ++i) ++lo[inIntPos()];
 
	for(i=1; i<=c; ++i) up[i] = up[i]*lo[i];
	
	count=1;
	for(i=1; i<=c; ++i) {
		if(up[i]) {
			lo[count++]=up[i]%MOD;
		}
	}
 
	//for(i=1; i<count; ++i) dp[i][0]=0;
	dp[0][0]=0;
	for(i=1; i<count; ++i) dp[0][i]=(dp[0][i-1]+lo[i])%MOD;
 
	for(i=1; i<count; ++i) {
		dp[i][i]=0;
		for(j=i+1; j<count; ++j) {
			dp[i][j]=(dp[i][j-1]+dp[i-1][j-1]*lo[j])%MOD;
		}
	}
 
	for(i=1; i<=c; ++i) res[i]=0;
	for(i=1; i<count; ++i) res[i]=(int)dp[i][count-1];
 
	printf("%d",res[1]);
	for(i=2; i<=c; ++i) printf(" %d",res[i]);
	printf("\n");
	return 0;
}