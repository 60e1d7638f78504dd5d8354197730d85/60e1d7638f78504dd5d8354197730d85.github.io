#include<stdio.h>
#include<math.h>
#include<assert.h>
typedef long long int ll;
ll M,maaxN;
ll sumfour(ll s)
{
	//s*(1+s)*(1+2*s)*(-1+3*s+3*s^2)/30
	// s= 30t + y
	ll y = s%30 , sM = s%M ,c2=2 , c3=3,c90=90,c6=6;
	ll t = ((s-y)/30)%M;
	ll last = ( c3*sM*sM + c3*sM -1 )%M;
	ll last_two = ((c2*sM + 1) * last )%M;
	return (t*(sM+1)*last_two  + t*y*last_two + c2*t*y*(y+1)*last + y*(y+1)*(c2*y+1)*(c90*t*t + c6*t*y + c3*t) + (y*(y+1)*(c2*y+1)*(c3*y*y+c3*y-1))/30  )%M;
}
void solve()
{
	ll N;
	scanf("%lld%lld",&N,&M);
	assert(M<=100000 && M>=1 );
	ll srt = sqrt(N),answer=0,x,y,z;
  ll i;
	for(i=1;i<=srt;i++){
		//brute force area
		x= i;
		answer = (answer + ((i*i*i)%M)*((i*(N/i))%M))%M;
		//answer = answer + i^4 * N/i;
	}
	for(i=(N/srt);i>1;i--){
		x = N/i;
		y = N/(i-1);
		//y will come for y-x terms
		answer = (answer + (i-1)* (sumfour(y) - sumfour(x)))%M;
	}
	if (answer<0)	answer += M;
	printf("%lld\n",answer);
}
int main()
{
	int T;	
	scanf("%d",&T);
	maaxN = 0 ;int TT = T;
	while(T--)	solve();
	if ( maaxN >1000000 ) assert (TT<=30);
	else assert(TT<=3000);
	return 0;
}