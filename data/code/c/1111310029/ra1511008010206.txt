#include <stdio.h>
void quick_sort(int a[],int l,int u);
int partition(int a[],int l,int u);
 
int main() {
	
	int i,t,n,b[2];
	scanf("%d",&t);
	
	int x=t;
	int ans[t];
	
	while(t--)
	{
	    scanf("%d",&n);
	    int a[n];
	    
	    for(i=0;i<n;i++)
	        scanf("%d",&a[i]);
	    
	    if(n<4)
	        { ans[t]=-1;continue; }
	        
	   //Quick Sort
	   quick_sort(a,0,n-1);
	   
	   //for(i=0;i<n;i++)
	    //printf("%d\t",a[i]);
	   
	   
	   int val=a[n-1];
	   int c=1;
	   int p=0;
	   
	   for(i=n-2;i>=0;i--)
	   {
	       if(val==a[i])
	        c++;
	       else
	        val=a[i];
	       
	       if(c==2)
	       {
	           c=1;
	           b[p]=a[i];
	           i--;
	           p++;
	           val=a[i];
	           
	       }
	       if(p==2)
	       {
	           break;
	           
	       }
	   }
	   
	   if(p!=2)
	    {
	        ans[t]=-1;
	       continue;
	    }
	    
	    ans[t]=b[0]*b[1];
	    
	}
	
	while(x--)
	    printf("%d\n",ans[x]);
	    
	return 0;
}
 
void quick_sort(int a[],int l,int u)
{
    int j;
    if(l<u)
    {
        j=partition(a,l,u);
        quick_sort(a,l,j-1);
        quick_sort(a,j+1,u);
    }
}
 
int partition(int a[],int l,int u)
{
    int v,i,j,temp;
    v=a[l];
    i=l;
    j=u+1;
    
    do
    {
        do
            i++;
            
        while(a[i]<v&&i<=u);
        
        do
            j--;
        while(v<a[j]);
        
        if(i<j)
        {
            temp=a[i];
            a[i]=a[j];
            a[j]=temp;
        }
    }while(i<j);
    
    a[l]=a[j];
    a[j]=v;
    
    return(j);
}
