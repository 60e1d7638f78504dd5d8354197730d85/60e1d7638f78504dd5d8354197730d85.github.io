#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define getw getchar_unlocked
#define iterate(n) for(i=0;i<n;i++)
#define d_iterate(p,q) for(i=p;i<=q;i++)
#define r_iterate(n,z) for(i=n-1;i>=n-z;i--)
#define p(n) printf("%ld\n",n);
#define get(n) n = scan2();
#define sort(k,q) qsort(k,q,sizeof(*k),comp);
#define print_array(k,n) iterate(n){ p(k[i]);}
#define ps(s) printf("%s\n",s);
#define max(a,b) a>b?a:b
#define min(a,b) a>b?b:a
#define clear(a) memset(a,0,sizeof(a));
 
 
typedef long long int lld;
typedef long int ld;
 
 
int comp(const void *e1,const void *e2){ return *((const int *)e1) - *((const int *)e2);}
 
inline int scan2(){
	int n=0,s=1;
	char p=getw();
	if(p=='-') s=-1;
	while((p<'0'||p>'9')&&p!=EOF&&p!='-') p=getw();
	if(p=='-') s=-1,p=getw();
	while(p>='0'&&p<='9') { n = (n<< 3) + (n<< 1) + (p - '0'); p=getw(); }
	return n*s;
}
 
struct ballinfo{
	ld total;
	ld ballsontop;
	ld ballsonbottom;
}balls[100002] = {0,0,0};
 
 
int main(){
	ld i,z,n,j,k,t,h,p,q;
	ld min = 100001;
	ld max = 0;
	get(n);	
 
 
 
	iterate(n){
		get(p);
		balls[p].ballsontop++;
		balls[p].total++;
 
		if(p>max)
			max = p;
 
		get(q);
		if(p != q){
 
			balls[q].ballsonbottom++;
			balls[q].total++;		
			
			if(q>max)
				max = q;
		}	
	}
 
	
 
	z = n - n/2;
 
	for(i=0;i<=max;i++){
		if(balls[i].total >= z ){
			if(balls[i].ballsontop >= z)
				min = 0;
			else if( (z - balls[i].ballsontop) < min){
				min = (z - balls[i].ballsontop);
			}
		}
	}
 
	if(min > 100000)
		printf("Impossible\n");
	else{
		p(min);
	}
	return 0;
}