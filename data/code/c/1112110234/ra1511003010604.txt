#include <stdio.h>
 
int T,N,K;
int i;
double sum,avg;
 
void mergeSort(int arr[],int l,int r);
void merge(int arr[],int l,int m,int r);
 
int main(void) 
{
    scanf("%d",&T);
    
    while(T--)
    {
        scanf("%d %d",&N,&K);
        
        int A[N];
        for(i=0;i<N;i++)
            scanf("%d",&A[i]);
        
        if(K>0)
            mergeSort(A,0,N-1);
        
        sum=0;
        for(i=K;i<N-K;i++)
            sum += A[i];
        avg = sum/(N-2*K);
        
        printf("%f\n",avg);
    }
    
	return 0;
}
 
 
void mergeSort(int arr[],int l,int r)
{
    int m;
    
    if(l<r)
    {
        m = (l+r)/2;
        
        mergeSort(arr,l,m);
        mergeSort(arr,m+1,r);
        
        merge(arr,l,m,r);
    }
}
 
void merge(int arr[],int l,int m,int r)
{
    int i,j,k;
    int n1 = m-l+1;
    int n2 = r-m;
    int L[n1], R[n2];
    
    //copy to temp arrays
    for(i=0;i<n1;i++)
        L[i] = arr[l+i];
        
    for(j=0;j<n2;j++)
        R[j] = arr[m+1+j];
        
    i=0;
    j=0;
    k=l;
    while(i<n1 && j<n2)
    {
        if(L[i]<=R[j])
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
    
    while(i<n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }
    
    while(j<n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}
 
 