#include <stdio.h>
 
void swap(int* a, int* b)
{
    int t = *a;
    *a = *b;
    *b = t;
}
 
 
int partition (int arr[], int low, int high)
{
    int pivot = arr[high]; 
    int i = (low - 1); 
 	
 	int j;
    for (j = low; j <= high- 1; j++)
    {
        
        if (arr[j] <= pivot)
        {
            i++;    
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}
 
 
void quickSort(int arr[], int low, int high)
{
    if (low < high)
    {
        int pi = partition(arr, low, high);
 
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}
 
 
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,k,i;
		int a[10000];
		double s=0.0;
		scanf("%d %d",&n,&k);
		for(i=0;i<n;i++)
			scanf("%d",&a[i]);
		
		quickSort(a,0,n-1);
		
		for(i=k;i<n-k;i++)
		 s=s+a[i];
		
		printf("%lf\n",s/(n-(2*k)));
	}
	return 0;
	
} 