#include <stdio.h>
#include <stdlib.h>
const int MAX=500000;
long long int sf[500001] = {0};
long long int primes[500001]={0};
long long int sum_div[500001];
long long int df[500001]={0};
long long int result[500001]={0};
void seiving()
{
  long long int i,j,k;
  i=2;
  while(i*i<=MAX)
  {
    k=i*i;
    for(j=k;j<=MAX;j+=k)
    {
      sf[j] = -1;
    }
    i++;
  }
  sf[0]=-1;
}
void div_find()
{
  int i=1,j;
  while(i<=MAX)
  {
    for(j=i;j<=MAX;j+=i)
    {
      sum_div[j] +=i;
    }
    i++;
  }
  sum_div[0]=0;
}
void prime()
{
  int i;
  primes[1]=-1;
  primes[0]=-1;
  for(i=4;i<=500000;i+=2)
  {
    primes[i]=-1;
  }
  i=3;
  while(i<=500000)
  {
    int j;
    if(primes[i]!=-1)
    {
      for(j=2*i;j<=500000;j+=i)
      {
        primes[j]=-1;
      }
    }
    i+=2;
  }
}
void prime_seiving()
{
  int i;
  for(i=2;i<=500000;i+=2)
  {
    df[i]+=1;
  }
  i=3;
  while(i<=500000)
  {
    int j;
    if(primes[i]!=-1)
    {
      for(j=i;j<=500000;j+=i)
      {
        df[j]+=1;
      }
    }
    i+=2;
  }
  df[0]=0;
}
int main()
{
  seiving();
  div_find();
  prime();
  prime_seiving();
  // pre_comp();
  int t,n1,n2,i;
  long long int result;
  scanf("%d\n",&t);
  while(t--)
  {
    result=0;
    scanf("%d %d\n",&n1,&n2);
    for(i=n1;i<=n2;i++)
    {
      if(sf[i]!=-1&&primes[df[sum_div[i]]]!=-1)
      {
        result += sum_div[i];
      }
    }
    printf("%lld\n",result);
  }
  return 0;
}