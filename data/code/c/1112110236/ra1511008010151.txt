#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<stdbool.h>
#include<float.h>
#include<math.h>
#include<ctype.h>
#include<limits.h>
#include<time.h>
#define LL long long
#define For(i,n)	for(i=0;i<n;i++)
#define rep(i ,a ,b)	for(i=(a);i<=(b);i++)
#define mset(a ,value)	memset(a ,value ,sizeof(a))
#define s(a)	scanf("%d" ,&a);
#define ls(a)	scanf("%ld" ,&a)
#define reg(i)	register int i
#define infinite INT_MAX
#define MAX 1000001
#define NIL -1
int min(int a,int b){	return (a<b?a:b);	}
int max(int a,int b){	return (a>b?a:b);	}
const int mod=1e9+7;
LL arr[MAX];
LL b[34];
LL calc(){
	LL i,num=0,pow=1;
	for(i=0;i<=29;i++){
		if(b[i]!=0){
			num=num+(pow);
		}
		pow*=2;
	}
	return num;
}
 
void print(){
	LL i;
	for(i=0;i<=32;i++){
		printf("%lld ",b[i]);
	}
	printf("\n");
	calc();
}
 
void binadd(LL num){
	LL t[34]={0},i;
	LL pos=0;
	while(num>0){
		t[pos++]=num%2;
		num/=2;
	}
	for(i=0;i<=pos;i++)	b[i]+=t[i];
	
}
 
void binsub(LL num){
	LL t[34]={0},i;
	LL pos=0;
	while(num>0){
		t[pos++]=num%2;
		num/=2;
	}
	for(i=0;i<=pos;i++)	b[i]-=t[i];
}
int main(){
 LL t,n,i,k,start,end,ans;
 scanf("%lld",&t);
 while(t--){
 ans=0;
  scanf("%lld %lld",&n,&k);
  for(i=0;i<n;i++) scanf("%lld",&arr[i]);
  for(i=0;i<=32;i++)
  	b[i]=0;
  binadd(arr[0]);
  start=0;
  end=0;
  while(end<n-1) {
  	//printf("%lld\n",calc());
  	if(calc()>=k){
  		ans+=n-end;
  		binsub(arr[start]);
  		start++;
  	}
  	else
  	{
  		binadd(arr[end+1]);
  		end++;
  	}
  } 
  if(end==n-1){
  	while(calc()>=k && start<=n-1){
  		ans+=n-end;
  		binsub(arr[start]);
  		start++;
  	}
  } 
  printf("%lld\n",ans);
 }
return 0;
} 

