#include<stdio.h>
 
int PF[1000001][10];
int arr[1000001];
int MAP[1000001];
int num[1000001];
 
void prime_factorize(){
 
 
   int i,j;
   for(i=1;i<=1000000;i++){MAP[i]=0;num[i]=0;}
   for(i=2;i<=1000000;i++){
          if(MAP[i]==1){
            continue;}
          for(j=i;j<=1000000;j+=i){
               PF[j][num[j]++]=i;
               if(j!=i)MAP[j]=1;
          }
   }
 
}
 
 
int main(){
 
    int i,j,n,k,t,s,max,z,r;
    prime_factorize();
    
    scanf("%d",&t);
    while(t--){
    	scanf("%d",&n);
    	for(i=1;i<=n;i++)scanf("%d",&arr[i]);
      for(i=1;i<=1000000;i++)MAP[i]=0;
      if(arr[1]!=1){
      for(i=0;i<num[arr[1]];i++){
            k=PF[arr[1]][i];
            MAP[k]++;
      }
     }
      j=1;
      s=1;max=1;
 
    for(i=2;i<=n;i++){
          k=0;
          if(arr[i]==1){
                  s++;
                  if(max<s)max=s;
                  continue;
          }
 
       for(z=0;z<num[arr[i]];z++){
            r=PF[arr[i]][z];
            if(MAP[r]!=0){
            	k=1;break;
            }
 
            }
       
 
           if(k==1){
           	          if(arr[j]!=1){
                      for(z=0;z<num[arr[j]];z++){
                              r=PF[arr[j]][z];
                              MAP[r]--;
                         }
                     }
                         s--;i--;
                         j++;
 
           }
           else{
 
                for(z=0;z<num[arr[i]];z++){
                      r=PF[arr[i]][z];
                      MAP[r]++;
                     }
                   s++;
           }
              if(max<s)max=s;
 
 
    }
      if(max==1)max=-1;
      printf("%d\n",max);
 }
 return 0;
}