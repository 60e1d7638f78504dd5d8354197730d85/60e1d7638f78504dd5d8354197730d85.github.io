#include<stdio.h>
#include<malloc.h>
#include<math.h>
#define mod 10000000
void func(int *taste, int n, int sum)
{
	int i, j;
	long long int *dp = (long long int *) calloc(sum + 1, sizeof(long long int));
	dp[0] = 1;
	for(i = 0 ;i < n ; i++ )
	{
		for(j = sum; j >= 0 ; j--)
		{
			if(dp[j] > 0)
				dp[j + taste[i]] = (dp[j + taste[i]] + dp[j]) % mod;
		}
	}
	long long int tot = 0;
	for(i = 0; i <= sum; i++)
	{
		long long int res = ((long long int)((((long long int )abs(sum - 2 * i))) * (dp[i])))% mod;
		tot = (tot + res) % mod;
	}
	printf("%lld\n", tot);
	free(dp);
}
int main()
{
	int t, n, sum = 0, i;
	scanf("%d", &t);
	while(t--)
	{
		scanf("%d", &n);
		sum = 0;
		int *taste = (int *)calloc(n, sizeof(int));
		for(i = 0; i < n; i++)
		{
			scanf("%d", &taste[i]);
			sum = sum + taste[i];
		}
		func(taste, n, sum);
		free(taste);
	}
	return 0;
}