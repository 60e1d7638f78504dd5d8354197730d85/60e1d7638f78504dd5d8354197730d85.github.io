#include<stdio.h>
#include<math.h>
 
char a[1000004];
long long b[80000],c[15];
 
void sieve()
{
	long long i,j,y,p=1;
	b[0]=2;
	for(i=1;i<500000;i++)
	{
		if(a[i]==0)
		{
			j=2*i+1;
			b[p++]=j;
			y=i*(j+1);
			while(y<500000)
			{
				a[y]=1;
				y+=j;
			}
		}
	}
	b[p]=10000000;
	//last value of p=78497
	for(i=0;i<15;i++)
		c[i]=b[i]-1;
}
	
int main()
{
	sieve();
	
	long long t,m,n,z,l,i,j,k,ans;
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld %lld",&m,&n);
		if(m==1)
			m=2;
		l=n-m;
		for(z=0;z<l+2;z++)
			a[z]=0;
		
		i=0;		//prime finder
		j=sqrt(n);
		while(b[i]<=j)
		{
			k=((m-1)/b[i]+1);
			if(k<2)
				k=2;
			k=k*b[i]-m;
			while(k<=l)
			{
				a[k]++;
				k+=b[i];
			}
			i++;
		}
		ans=0;
		for(i=0;i<=l;i++)
			if(a[i]==0)
				ans++;
		
		m--;
		for(i=1;i<15;i++)
		{
			double X1,X2,Y1,Y2;
			long long Z1,Z2,I,J;
			
			X1=log10(m)/(c[i]*1.0);
			Y1=pow(10,X1);
			Z1=(long long)Y1;
			
			X2=log10(n)/(c[i]*1.0);
			Y2=pow(10,X2);
			Z2=(long long)Y2;
			
			if(Z2==1)
				break;
			//printf("x=%lld\ty=%lld\n",Z1,Z2);
			
			I=0;
			while(b[I]<=Z1)
				I++;
			J=0;
			while(b[J]<=Z2)
				J++;
			ans+=J-I;
			
		}
			
		
		printf("%lld\n",ans);
	}
	return 0;
}
 