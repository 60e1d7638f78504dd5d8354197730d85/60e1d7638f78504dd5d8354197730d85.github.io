#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<limits.h>
#include<math.h>
 
long long int powers[41]={1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192	, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648, 4294967296, 8589934592, 17179869184, 34359738368, 68719476736, 137438953472, 274877906944, 549755813888, 1099511627776};
 
/*gets(str), puts(str) faster than scanf()*/
/*prefer abs() from math [over mod()]*/
 
/*sort*/
int compare (const void * a, const void * b)
{
	return ( *(int*)a - *(int*)b );
}
 
 
#define REP(i, a, b, c) for(i=a;i<b;i+=c)
#define rep(i,n) REP(i, 0, n, 1)
#define sort(arrr,n) qsort(arrr,n,sizeof(int),compare)
#define mod(n) ((n>0)?n:-n)
#define min(a, b) ((a < b )? a : b)
#define max(a, b) ((a > b )? a : b)
#define Minimum(a, b, c) (min(min(a, b), c))
#define Maximum(a, b, c) (max(max(a, b), c))
 
 
/*gcd*/
int gcd(int a, int b)
{
	if(b>a)
		return gcd(b, a);
	
	else return (b==0)?a:gcd(b,a%b);
}
 
inline void printint(long long int n)
{
	if(n == 0)
	{
		putchar_unlocked('0');
		putchar_unlocked('\n');
	}
	else
	{
		char buf[20];
		buf[19] = '\n';
		int i = 18;
		while(n)
		{
			buf[i--] = n % 10 + '0';
			n /= 10;
		}
		while(buf[i] != '\n')
			putchar_unlocked(buf[++i]);
	}	
}
 
inline void scanint(long long int* x)
{
	register char c = getchar_unlocked();
	*x = 0;
	for(; (c<48)||(c>57);c = getchar_unlocked());
	for(; (c>47)&&(c<58);c = getchar_unlocked())
		*x = (long long int)((((*x)<<1) + ((*x)<<3)) + c - 48);
} 
 
 
 
int main(void) {
	int t;
	scanf("%d", &t);
	int i, j;
	long long int X, K;
	double res;
	while(t--)
	{
		scanint(&X);
		scanint(&K);
		
		res = X;
		
		for(i=0; i<41; i++)
			if(K<powers[i])
				break;
		
		j=i;
		while(j--)
			res/=2;
		//printf("%f\n", res);
		K=K-powers[i-1];
		
		res+=(K*2*res);
		
		printf("%f\n", res);
	}
	return 0;
}