                                             
#include<stdio.h>
int gcd (int p,int q);
int main()
{
	unsigned int ans[100],a[100],b[100],c[100],ni,i,csteps,min=999999999,arem,brem,cc,done=0;
  //int tb,ta;
	scanf("%u",&ni);
	for(i=0;i<ni;i++)
		scanf("%u%u%u",&a[i],&b[i],&c[i]);
	for(i=0;i<ni;i++)
	{
		if(a[i]<b[i])
		{
			a[i]=a[i]+b[i];b[i]=a[i]-b[i];a[i]=a[i]-b[i];
		}
		arem=a[i];brem=b[i];
		if(c[i]>a[i] && c[i]>b[i])
			ans[i]=-1;
		else if(c[i]%gcd(a[i],b[i])!=0)
			ans[i]=-1;
		else
		{
			cc=c[i];
			csteps=0;arem=brem=0;done=1;
		//   ta=a[i]-c[i];
	//tb=b[i]-c[i];
			
			
			
						while(done)
						{
							
							//fill a
							arem=a[i];csteps++;//printf("%d--%d--%d--filling a start1\n",arem,brem,csteps);
							if(arem==cc || brem ==cc)
									{
										done=0;
										break;
									}
							//pour a to b
							arem=a[i]-b[i]+brem;brem=b[i];csteps++;//printf("%d--%d--%d pouring a to b2\n",arem,brem,csteps);
							//
							if(arem == cc )
								{done=0;break;}
							//empty b
							brem=0;csteps++;//printf("%d--%d--%d emptying b 3\n",arem,brem,csteps);
							
							//pour arem to b and keep checking for result until arem=0
							while(arem!=0)
							{	
								if(arem>b[i])
								{
									if(arem)
									arem=arem-b[i]+brem;brem=b[i];csteps++;//printf("%d--%d--%d 4\n",arem,brem,csteps);
									if(arem==cc || brem ==cc)
									{
										done=0;
										break;
									}
									;brem=0;csteps++;//printf("%d--%d--%d 5\n",arem,brem,csteps);//then b will be full so have to empty it
									
								}								
								else 
								{
									brem=arem;arem=0;csteps++;//printf("%d--%d--%d 6\n",arem,brem,csteps);//
									if(arem==cc || brem ==cc)
									{
										done=0;
										break;
									}
								}
								
							}
							
						
							
						}
						//printf("\n%d\ns",csteps);	
				min=csteps;
				csteps=0;arem=brem=0;done=1;
					while(done)
						{
							if(csteps>min)
								break;
							//fill b
							brem=b[i];csteps++;//printf("\n%d--%d--%dfilling",brem,arem,csteps);
							//pour b to a
							if(arem==cc || brem ==cc)
									{
										done=0;
										break;
									}
							while(brem!=0)
							{
								csteps++;
								if(b[i]<(a[i]-arem))
								{
									arem+=b[i];brem=0;//printf("\n%d--%d--%dpouring b to a",brem,arem,csteps);
								}
								else {brem=b[i]-a[i]+arem;arem+=b[i]-brem;}
									if(arem == cc || brem==cc)
								{
									done=0;break;
								}
								if(arem>=a[i])
								{
									csteps+=2;arem=brem;brem=0;
								}
								if(arem == cc || brem==cc)
								{
									done=0;break;
								}
								
							}
							
							
						
						}
						
					
					
						
				
				if(csteps<min)
				min=csteps;
			
			ans[i]=min;
		}
		
	}
		
	for(i=0;i<ni;i++)
	{
		printf("%d\n",ans[i]);
	}
	return 0;
}
int gcd (int p, int q)
{
	if(p<q)
	{
		p=p+q;q=p-q;p=p-q;
	}
	int r;
	while(q!=0)
	{
		r=p%q;
		p=q;q=r;
	}
	return p;
} 