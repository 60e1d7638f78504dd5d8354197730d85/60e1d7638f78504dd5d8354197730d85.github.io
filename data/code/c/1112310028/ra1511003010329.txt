#include<stdio.h>
struct frog
{
    long long int xpos;
    long long int index;
};
void mergeSort(struct frog[],long long int,long long int);
void merge(struct frog[],long long int,long long int,long long int);
int main()
{
    long long int n,x,y,i,sum;
    scanf("%lld %lld %lld",&n,&x,&y);
    long long int a[n+5],b[n+5];
    struct frog d[n+5];
    for(i=0;i<n;i++)
    {
        scanf("%lld ",&a[i]);
    }
     for(i=0;i<n;i++)
    {
        scanf("%lld ",&b[i]);
    }
    sum=0;
    for(i=0;i<n;i++)
    {
        d[i].xpos=b[i]-a[i];
        d[i].index=i;
    }
    mergeSort(d,0,n-1);
    for(i=n-1;i>=0;i--)
    {
        if(d[i].xpos<0 && x>0)
        {
            sum+=a[d[i].index];
            x--;
        }
        else if(d[i].xpos>0 && y>0)
        {
            sum+=b[d[i].index];
            y--;
        }
        else if(d[i].xpos==0)
        {
            sum+=a[d[i].index];
            if(y)
                y--;
            else
                x--;
        }
        else if(y==0 && x>0)
        {
            sum+=a[d[i].index];
            x--;
        }
        else if(x==0 && y>0)
        {
            sum+=b[d[i].index];
            y--;
        }
    }
    printf("%lld\n",sum);
    return 0;
}
void mergeSort(struct frog arr[],long long int l,long long int r)
{
long long int m;
if(l<r)
{
m=l+(r-l)/2;
mergeSort(arr,l,m);
mergeSort(arr,m+1,r);
merge(arr,l,m,r);
}
}
void merge(struct frog arr[],long long int l,long long int m,long long int r)
{
long long int n1,n2,i,j,k;
n1=m-l+1;
n2=r-m;
struct frog left[n1],right[n2];
for(i=0;i<n1;i++)
left[i]=arr[l+i];
for(j=0;j<n2;j++)
right[j]=arr[m+1+j];
i=0;
j=0;
k=l;
while(i<n1 && j<n2)
{
if(left[i].xpos<=right[j].xpos)
{
arr[k]=left[i];
i++;
k++;
}
else
{
arr[k]=right[j];
j++;
k++;
}
}
if(i<n1)
{
while(i<n1)
{
arr[k]=left[i];
i++;
k++;
}
}
if(j<n2)
{
while(j<n2)
{
arr[k]=right[j];
j++;
k++;
}
}
}