#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <unistd.h>
 
int arr[12][12] = {{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 3, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 4, 12, 24, 24, 0, 0, 0, 0, 0, 0, 0}, {1, 5, 20, 60, 120, 120, 0, 0, 0, 0, 0, 0}, {1, 6, 30, 120, 360, 720, 720, 0, 0, 0, 0, 0}, {1, 7, 42, 210, 840, 2520, 5040, 5040, 0, 0, 0, 0}, {1, 8, 56, 336, 1680, 6720, 20160, 40320, 40320, 0, 0, 0}, {1, 9, 72, 504, 3024, 15120, 60480, 181440, 362880, 362880, 0, 0}, {1, 10, 90, 720, 5040, 30240, 151200, 604800, 1814400, 3628800, 3628800, 0}, {1, 11, 110, 990, 7920, 55440, 332640, 1663200, 6652800, 19958400, 39916800, 39916800}};
 
int sarr[12][13] = {{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {0, 1, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5}, {0, 1, 4, 10, 16, 16, 16, 16, 16, 16, 16, 16, 16}, {0, 1, 5, 17, 41, 65, 65, 65, 65, 65, 65, 65, 65}, {0, 1, 6, 26, 86, 206, 326, 326, 326, 326, 326, 326, 326}, {0, 1, 7, 37, 157, 517, 1237, 1957, 1957, 1957, 1957, 1957, 1957}, {0, 1, 8, 50, 260, 1100, 3620, 8660, 13700, 13700, 13700, 13700, 13700}, {0, 1, 9, 65, 401, 2081, 8801, 28961, 69281, 109601, 109601, 109601, 109601}, {0, 1, 10, 82, 586, 3610, 18730, 79210, 260650, 623530, 986410, 986410, 986410}, {0, 1, 11, 101, 821, 5861, 36101, 187301, 792101, 2606501, 6235301, 9864101, 9864101}, {0, 1, 12, 122, 1112, 9032, 64472, 397112, 2060312, 8713112, 28671512, 68588312, 108505112}};
 
inline void fastRead(char *a, int *d) {
	register char c = 0;
	while(c < 33)
		c = getchar_unlocked();
	int n = 0;
	while(c > 33) {
		if(n <= 10) {
		    *a = c;
		    ++a;
		    n++;
		}
    	c = getchar_unlocked();
	}
	*d = n;
}
 
int reste(char *x, int d, int type) {
	int l[11] = {}, dejaVu[10] = {}, r = 0, i, j;
	if(d >= 1)
		l[0] = 1;
	for(i = 0 ; i < d ; i++) {
		for(j = i + 1 ; j < d ; j++)
			if(x[i] < x[j])
				l[j]++;
		r += (x[i] - '0' - l[i]) * arr[9 - i][d - 1 - i];
		if(dejaVu[x[i] - '0'])
			break;
		else if(i == d - 1 && type == 1)
			r++;
		dejaVu[x[i] - '0'] = 1;
	}
	return r;
}
 
int main(void) {
	int N = 0, *dl = calloc(1, sizeof(int)), *dr = calloc(1, sizeof(int));
	char L[12], R[12];
	scanf("%d", &N);
	while(N) {
		fastRead(L, dl);
		fastRead(R, dr);
		printf("%d\n", 9 * (sarr[9][*dr - 1] - sarr[9][*dl - 1]) + reste(R, *dr, 1) - reste(L, *dl, 0));
		N -= 1;
	}
	return 0;
} 