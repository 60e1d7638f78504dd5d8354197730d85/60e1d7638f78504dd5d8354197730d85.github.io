#include <stdio.h>
 
#define MAX_R 50
#define MAX_C 50
 
#define READ_INT(_x)					\
  {							\
    int _tmp = 0;					\
    register int _ch = getchar_unlocked();		\
    while (_ch < 48)					\
      _ch = getchar_unlocked();				\
    while (48 <= _ch)					\
      {							\
	_tmp = (_tmp << 3) + (_tmp << 1) + _ch - 48;	\
	_ch = getchar_unlocked();			\
      }							\
    (_x) = _tmp;					\
  }							\
 
char _str[8];
#define WRITE_INT(_x)				\
  {						\
    register int _i = 0;			\
    int _tmp = (_x);				\
    do						\
      {						\
	*(_str + _i++) = _tmp % 10 + 48;	\
	_tmp /= 10;				\
      } while (_tmp != 0);			\
    for (_i--; _i >= 0; _i--)			\
      putchar_unlocked(*(_str + _i));		\
  }						\
 
int main(void)
{
  char map[MAX_R][MAX_C];
  int c, count, i, j, r, t;
 
  READ_INT(t);
  while (t--)
    {
      READ_INT(r);
      READ_INT(c);
 
      for (i = 0; i < r; i++)
	{
	  while ((j = getchar_unlocked()) <= 32)
	    ;
 
	  **(map + i) = j;
	  for (j = 1; j < c; j++)
	    *(*(map + i) + j) = getchar_unlocked();
	}
 
#ifdef DEBUG
      fprintf(stderr, "map:\n");
      for (i = 0; i < r; i++)
	{
	  for (j = 0; j < c; j++)
	    fprintf(stderr, "%c", *(*(map + i) + j));
	  fprintf(stderr, "\n");
	}
#endif
 
      for (count = 0, r -= 2, c -= 2, i = 2; i < r; i++)
	for (j = 2; j < c; j++)
	  if (*(*(map + i) + j) == '^' && 
	      *(*(map + i) + j - 1) == '^' && *(*(map + i) + j - 2) == '^' &&
	      *(*(map + i) + j + 1) == '^' && *(*(map + i) + j + 2) == '^' &&
	      *(*(map + i - 1) + j) == '^' && *(*(map + i - 2) + j) == '^' &&
	      *(*(map + i + 1) + j) == '^' && *(*(map + i + 2) + j) == '^')
	    {
	      count++;
#ifdef DEBUG
	      fprintf(stderr, "i: %d, j: %d\n", i, j);
#endif
	    }
 
      WRITE_INT(count);
      putchar_unlocked('\n');
    }
 
  return 0;
}