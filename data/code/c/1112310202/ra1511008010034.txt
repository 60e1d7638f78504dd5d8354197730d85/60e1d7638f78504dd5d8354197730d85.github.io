#include<stdio.h>
#include<stdlib.h>
#define X 100000009
int a[2005],b[2005],arr1,arr2,twod[2005][2005],present[8000005];
int main()
{
    int n,i,j,f,y,afterrot1,afterrot2,g,x,c,flag1,flag2,flag3,flag4,ans,same1,same2,flag;
    scanf("%d",&n);
    if(n==0)
    {
            printf("4\n");
            return 0;
    }
    if(n==1)
    {
            scanf("%d%d",&i,&j);
            printf("3\n");
            return 0;
    }
    for(i=0;i<=2000;i++)
    {
        for(j=0;j<=2000;j++)
        twod[i][j]=X;
    }
    for(i=0;i<=6000005;i++)
    present[i]=-1;
    f=0;
    for(i=1;i<=n;i++)
    {
   
        scanf("%d%d",&a[i],&b[i]);
        same1=a[i];
        same2=b[i];
        x=a[i]+3000000;
        if(present[x]==-1)
        {
            present[x]=f;
            twod[f][0]=b[i];
            f++;
        }
        else
        {
          g=present[x];  
          j=0;
          while(twod[g][j]!=X)
          {
            if(twod[g][j]==b[i])
            break;                  
            j++;
          }
          twod[g][j]=b[i];
        }
        
    }
    flag=0;
    for(i=1;i<=n;i++)
    {
       if(a[i]!=same1||b[i]!=same2)
       flag=1;
    }
    if(flag==0)
    {
      printf("3\n");
      return 0;
    }
   
    f=0;
    ans=2;
    
    for(i=1;i<=n;i++)
    {
        for(j=i+1;j<=n;j++)
        {
                         
         
            if(a[i]==a[j]&&b[i]==b[j])
            continue;           
           
            afterrot1=b[i]-b[j];
            afterrot2=a[j]-a[i];
            
            arr1=afterrot1+a[i];
            f++;
            arr2=afterrot2+b[i];
            f++;
            y=arr1+3000000;
            flag1=0;
            if(present[y]!=-1)
            {
                
                x= present[y];
                c=0;    
                                
                while(twod[x][c]!=X)
                {
                    if(twod[x][c]==arr2)
                    {
                        flag1=1;
                        break;
                    }
                    c++;
                }
            }
            arr1=a[i]-afterrot1;
            f++;
            arr2=b[i]-afterrot2;
            f++;
            y=arr1+3000000;
            flag2=0; 
            if(present[y]!=-1)
            {
                                        
                x= present[y];
               
               
                c=0;    
                               
                while(twod[x][c]!=X)
                {
                    if(twod[x][c]==arr2)
                    {
                        flag2=1;
                        break;
                    }
                    c++;
                }
               
            }
        
            
            afterrot1=b[j]-b[i];
            afterrot2=a[i]-a[j];
            
            arr1=a[j]-afterrot1;
            f++;
            arr2=b[j]-afterrot2;
            f++;
            y=arr1+3000000;
            
            flag3=0;
            if(present[y]!=-1)
            {
                x= present[y];
                c=0;    
                                
                while(twod[x][c]!=X)
                {
                    if(twod[x][c]==arr2)
                    {
                        flag3=1;
                        break;
                    }
                    c++;
                }
            }
            arr1=afterrot1+a[j];
            f++;
            arr2=afterrot2+b[j];
            f++;
            y=arr1+3000000;
            flag4=0;
            if(present[y]!=-1)
            {
                x= present[y];
                c=0;    
                                
                while(twod[x][c]!=X)
                {
                    if(twod[x][c]==arr2)
                    {
                        flag4=1;
                        break;
                    }
                    c++;
                }
                
            }
            if((flag1==1&&flag3==1)||(flag2==1&&flag4==1))
            {
                 ans=0;
                 
                 break;
            }
            else if(flag1==1||flag3==1||flag2==1||flag4==1)
            {
                ans=1;
               
            }
        }
        if(ans==0)
        break;
    }
    printf("%d\n",ans);
   
    
    return 0;
} 