#include<stdio.h>
void qsort(long long int a[],int,int);
int main()
{
    
    int test;
    scanf("%d",&test);
    long long int n,k,e,m;
    while(test--)
    { long  long int arr[100000]={0};
        scanf("%lld%lld%lld%lld",&n,&k,&e,&m);
       n--;
      long long int i,j,temp;
        for(i=0;i<n;i++)
        {  long long int sum = 0;
            for(j=0;j<e;j++)
            {
                scanf("%lld",&temp);
                sum+=temp;
            }          
            arr[i]=sum;
        }
        long long int final=0;    
        for(i=0;i<e-1;i++)
        {
        scanf("%lld",&temp);
        final+=temp;
        }
        qsort(arr,0,n-1);
      long long int toQualify = arr[n-k];
       if(toQualify-final>=m)
       printf("Impossible\n");
       else
       {
           if(toQualify-final<0)
             printf("0\n");
           else
           printf("%lld\n",toQualify-final+1);
           
       } 
    }
    return 0;
} 
void qsort(long long int arr[100000], int fst, int last)
{
 long long int i,j,pivot,tmp;
 if(fst<last)
 {
   pivot=fst;
   i=fst;
   j=last;
   while(i<j)
   {
     while(arr[i]<=arr[pivot] && i<last)
        i++;
     while(arr[j]>arr[pivot])
        j--;
     if(i<j)
     {
        tmp=arr[i];
        arr[i]=arr[j];
        arr[j]=tmp; 
     }
   }
   tmp=arr[pivot];
   arr[pivot]=arr[j];
   arr[j]=tmp;
   qsort(arr,fst,j-1);
   qsort(arr,j+1,last);
 }
}