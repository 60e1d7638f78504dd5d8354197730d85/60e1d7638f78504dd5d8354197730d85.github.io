#include <stdio.h>
#include <stdlib.h>
 
 
void quicksort(long long int A[],int first,int last){
   long long int temp;int i,j,pivot;
 
     if(first<last){
         pivot=first;
         i=first;
         j=last;
 
         while(i<j){
             while(A[i]<=A[pivot]&&i<last)
                 i++;
             while(A[j]>A[pivot])
                 j--;
             if(i<j){
                 temp=A[i];
                  A[i]=A[j];
                  A[j]=temp;
             }
         }
 
         temp=A[pivot];
         A[pivot]=A[j];
         A[j]=temp;
         quicksort(A,first,j-1);
         quicksort(A,j+1,last);
 
    }
}
 
 
int main(void) {
	// your code goes here
	int N,K,E,M,T,i=0,j=0,t=0;
	scanf("%d",&T);
	while(T--) {
	    scanf("%d %d %d %d",&N,&K,&E,&M);
	   long long int A[N+1];
	    for(i=0;i<N-1;i++) {
	        A[i]=0;
	        for(j=0;j<E;j++) {
	            scanf("%d",&t);
	            A[i]+=t;
	        }
	    }
	    A[i]=0;
	   
	    for(j=0;j<E-1;j++) {
	        scanf("%d",&t);
	        A[i]+=t;
	    }
	    
	     //qsort(A, N-2, sizeof(int), cmpfunc);
	     quicksort(A,0,N-2);
	   //  for(i=0;i<N;i++) {
	   //    printf("%lld\t",A[i]);  
	   //  }
	     
	     long long  int score_Nk=A[N-K-1];
	   //  printf("%lld\n",score_Nk);
	     long long int diff=score_Nk+1-A[N-1];
	   //  printf("%lld\n",diff);
	      
	     if(diff<=M) {
	         if(diff<=0)
	         printf("%d\n",0);
	         else 
	            printf("%lld\n",diff);
	     }
	     else {
	         printf("Impossible\n");
	     }
 
	}
	return 0;
}