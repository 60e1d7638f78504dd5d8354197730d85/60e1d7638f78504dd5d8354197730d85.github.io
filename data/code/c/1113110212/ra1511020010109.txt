    #include<stdio.h>
    #include <memory.h>
    #include <stdlib.h>
     
    typedef long long int64;
     
    #define Get getchar_unlocked()
    int getInt() { int a=0,s=1; char c=0; while(c<33) c=Get; if(c=='-') {s=-1; c=Get;} while(c>33) {a=(a<<3)+(a<<1)+c-'0'; c=Get;} return a*s; }
     
    int N,M,F[45],P[45];
    int64 subset[45],price[45];
     
    int solve()
    {
    	memset(subset,0,sizeof(subset));
    	memset(price,0,sizeof(price));
    	subset[0]=1; price[0]=0;
    	int i,j,color=0;
    	for(i=0;i<40;i++)
    	if(F[i]) {
    		color++;
    		int64 s=((1LL)<<F[i])-1, p=((1LL)<<(F[i]-1))*P[i];
    		for(j=color;j>=1;j--) {
    			subset[j]+=subset[j-1]*s;
    			price[j]+=subset[j-1]*p+s*price[j-1];
    		}
    	}
    	int64 ts=0,tp=0;
    	for(i=M;i<40;i++) { ts+=subset[i]; tp+=price[i]; }
    	printf("%0.9f\n",(double)(tp)/ts);
    }
     
    int main()
    {
    	int T=getInt();
    	while(T--)
    	{
    		memset(F,0,sizeof(F)); memset(P,0,sizeof(P));
    		scanf("%d%d",&N,&M);
    		int i,c,p;
    		for(i=0;i<N;i++) {
    			scanf("%d%d",&c,&p); c--;
    			F[c]++; P[c]+=p;
    		}
    		solve();
    	}
    	return 0;
    } 

