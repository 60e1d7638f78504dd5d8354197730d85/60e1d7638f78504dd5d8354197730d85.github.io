#include<stdio.h>
#include<math.h>
void binary(int ad[],int bd[],int a,int b,int n)
{
    int i=n-1;
    while(a!=0)
    {
        ad[i]=a%2;
        i--;
        a/=2;
    }
    i=n-1;
    while(b!=0)
    {
        bd[i]=b%2;
        i--;
        b/=2;
    }
}
int decimal(int cd[],int n)
{
    long int i,j=0,s=0;
    for(i=n-1;i!=-1;i--)
    {
        s+=cd[i]*pow(2,j);
        j++;
    }
    return(s);
}
int main()
{
    int t,n,a,b,c,c1,i,j,count,count1;
    long int x;
    for(scanf("%d",&t);t!=0;t--)
    {
        scanf("%d%d%d",&n,&a,&b);
        int ad[n],bd[n],cd[n];
        c=c1=0;
        for(i=0;i<n;i++)
            ad[i]=bd[i]=0;
        binary(ad,bd,a,b,n);
        for(i=0;i<n;i++)
        {
            if(ad[i]==1)
                c++;
            if(bd[i]==1)
                c1++;
        }
        for(i=0;i<n;i++)
            ad[i]=bd[i]=0;
        if((c+c1)<=n)
        {
             for(i=0;i<c;i++)
            {
                ad[i]=1;
                bd[i]=0;
            }
            for(;c1!=0;i++)
            {
                bd[i]=1;
                ad[i]=0;
                c1--;
            }
        }
        else
        {
            count=c;
            count1=c1;
            if(c>c1)
            {
                for(i=n-1;c1!=0;i--)
                {
                    bd[i]=1;
                    c1--;
                }
                for(j=0;(i+1)!=j;j++)
                {
                    ad[j]=1;
                    c--;
                }
                for(i=n-1;c!=0;i--)
                {
                    ad[i]=1;
                    c--;
                }
            }
            else
            {
                for(i=n-1;c!=0;i--)
                {
                    ad[i]=1;
                    c--;
                }
                for(j=0;(i+1)!=j;j++)
                {
                    bd[j]=1;
                    c1--;
                }
                for(i=n-1;c1!=0;i--)
                {
                    bd[i]=1;
                    c1--;
                }
            }
        }
        for(i=0;i<n;i++)
        {
            cd[i]=ad[i]^bd[i];
        }
        x=decimal(cd,n);
        printf("%ld\n",x);
    }
    return(0);
}