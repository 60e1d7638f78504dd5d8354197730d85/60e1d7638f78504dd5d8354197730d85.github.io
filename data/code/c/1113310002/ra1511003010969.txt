#include <stdio.h>
#include<math.h>
    long long power(long int n,long int m,long int MOD)
    {
    if(m==0) return 1;
     
    long long x=power(n,m/2,MOD);
    if(m%2==0)
    return (x*x)%MOD;
    else
    return (((x*x)%MOD)*n)%MOD;
    }
    long int lastk(int n,int k)
    {
    long int mod= pow(10,k);
    long int i,result = 1;
    result = power(n,n,mod);
    return result;
    }
    long int firstk(int n,int k)
    {
    long double x,y;
    x = n*log10l(n);
    y = powl(10,x-(int)x);
    long long z = y*powl(10,k-1);
    return z;
    }
    int main()
    {
    int cases,k,a;
    long int n,m;
    long long i;
    scanf("%d",&cases);
    while(cases--)
    {
    scanf("%ld%d",&n,&k);
    printf("%ld ",firstk(n,k));
    m = lastk(n,k);
    for(i=10;i;i*=10)
    {
    if(m < i)
    {
    break;
    }
    }
    a = pow(10,k)/i;
    for(i=10;i<10*a;i*=10)
    printf("0");
    printf("%ld\n",m);
    }
	return 0;
}