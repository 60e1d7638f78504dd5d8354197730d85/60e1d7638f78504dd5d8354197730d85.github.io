#include <stdio.h>
#include<math.h>
#define N 1000001
int prime[N], v[N];
 
void sieve()
{
  int i, j;
  for (i = 0; i < N; i++)
  prime[i] = 1;
  prime[0] = 0; prime[1] = 0;
  for (i = 2; i*i < N; i++)
  {
    if (prime[i] == 1)
    {
      for (j = i*i; j < N; j += i)
      prime[j] = 0;
    }
  }
  j = 0;
  for (i = 2; i < N; i++)
  {
    if (prime[i] == 1)
    v[j++] = i;
  }
  for (i = 2; i < N; i++)
  prime[i] += prime[i-1];
}
 
int main()
{
  sieve();
  int t;
  scanf("%d", &t);
  while (t--)
  {
    int l, r;
    scanf("%d%d", &l, &r);
    int ans = 0, i;
    for (i= 0; i < N; i++)
    {
      if (v[i] > r || v[i] == 0) break;
      int a = ceil((double)l/(double)v[i]);
      int b = floor((double)r/(double)v[i]);
      if (a >= N) continue;
      if (b >= N) b = N-1;
      ans += (prime[b] - prime[a-1]);
      if (a <= v[i] && v[i] <= b) ans--;
    }
    ans /= 2;
    printf("%d\n", ans);
  }
 
  return 0;
}