#include<stdio.h>
int a[10005];
int g[10005];
int b[10005];
long long cost1,cost2;
 
int gcd(int x,int y)
{
	while(x!=y)
	{
		if(x>y)
			x-=y;
		else
			y-=x;
	}
	return x;
}
 
long adjust(int n)
{
	int i;
	long cost = 0;
	for(i=0;i<n-1;i++)
	{
		if(a[i]>a[i+1])
		{
			cost = cost + (a[i] - a[i+1]);
			a[i+1] = a[i];
		}
	}
	return cost;
}
 
long gff()
{
	long cost = 0;
	g[0] = gcd(a[0],a[1]);
	if(g[0]==1)
	{
		if((gcd(a[0]+1,a[1])!=1)&&(a[0]+1<=a[1]))
		{
			a[0] = a[0] + 1;
			cost++;
			g[0] = gcd(a[0],a[1]);
			return cost;
		}
		
		else if(gcd(a[0],a[1]+1)!=1)
		{
			a[1] = a[1] + 1;
			cost++;
			g[0] = gcd(a[0],a[1]);
			return cost;
		}
		else if(gcd(a[0]+1,a[1]+1)!=1)
		{
			a[0] = a[0] + 1;
			a[1] = a[1] + 1;
			cost = cost + 2;
			g[0] = gcd(a[0],a[1]);
			return cost;
		}
	}
	return 0;
}
 
int main()
{
	int t,n;
	int i,j,k;
	int flag = 0;
	scanf("%d",&t);
	while(t--)
	{
		cost1 = 0;
		cost2 = 0;
		flag = 0;
		scanf("%d",&n);
		for(i=0;i<n;i++)
			scanf("%d",&a[i]);
		if(n==1)
		{
			printf("%d",a[0]);
			continue;
		}
		cost1 = cost1 + adjust(n);
		cost2 = cost1;
		for(i=0;i<n;i++)
			b[i] = a[i];
		cost1 = cost1 + gff();
		cost1 = cost1 + adjust(n);
		for(i=1,j=2;j<n;i++,j++)
		{
			g[i] = gcd(g[i-1],a[j]);
			if(g[i]==1)
			{
				flag = 1;
				for(k=1;k<=a[j];k++)
				{
					if(gcd(g[i-1],a[j]+k)!=1)
					{
						a[j] = a[j] + k;
						cost1 = cost1 + k;
						g[i] = gcd(g[i-1],a[j]);
						break;
					}
				}
				cost1 = cost1 + adjust(n);
			}
		}
		if(flag==1)
		{
			for(i=0;i<n;i++)
			{
				if(b[i]%2!=0)
					cost2++;	
			}
		}
		/*for(i=0;i<n;i++)
			printf("%d\n",a[i]);
		for(i=0;i<n;i++)
			printf("%d\n",b[i]);
		for(i=0;i<n-1;i++)
			printf("%d\n",g[i]);*/
		if(cost1<=cost2)
		{
			printf("%lld\n",cost1);
		}
		else if((cost1>cost2)&&flag==1)
		{
			printf("%lld\n",cost2);
		}
		else if((cost1>cost2)&&flag==0)
		{
			printf("%lld\n",cost1);
		}
	}
	return 0;
} 