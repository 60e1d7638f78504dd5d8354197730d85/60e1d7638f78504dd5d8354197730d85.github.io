//DKBoss
#include <stdio.h>
typedef int bool;
#define true 1
#define false 0

bool prime(int n) {
	int flag = 0, i;
  	for(i=2; i<n/2+1; i++) {
    	if(n%i==0) {
        	flag =1;
          	break;
        }
    }
  	return flag==1 ? false : true;
}
int main()
{
  	int n1,n2,m1,m2;
  	//printf("H1\n");
  	scanf("%d %d", &n1, &n2);
  	m1=n1; m2=n2;
  	//printf("%d %d", n1, n2);
  	if(n1==1) {
    	printf("%d\n", n2);
      	return 0;
    }
  	if(n2==1) {
    	printf("%d\n", n1);
      	return 0;
    }
  	int i;
  	int t1=0, t2=0;
  	int arr1[10], arr2[10];
  	for(i=2; i<=m1; i++) {
    	int a=i;
      	int b=m1/a;
      	if(a*b == m1) {
        	if(prime(a)) {
            	arr1[t1++] = a;
              	i--;
              	m1 = b;
            }
        }
    }
  	for(i=2; i<=m2; i++) {
    	int a=i;
      	int b=m2/a;
      	if(a*b == m2) {
        	if(prime(a)) {
            	arr2[t2++] = a;
              	i--;
              	m2 = b;
            }
        }
    }
  	int arr[10], j, k=0; long lcm = 1;
  	i=0;
  	if(t1 > t2) {
    	for(j=0; j<t1; j++) {
        	if(i!=t2) {
            	if(arr2[i] == arr1[j]) {
                	lcm *= arr2[i++];
                  	arr1[j] = 1;
                }
              	else if(arr2[i] < arr1[i]) {
                	lcm *= arr2[i++];
                  	j--;
                }
              	else {
                
                }
            }
          	else break;
        }
      	while(i != t2) lcm *= arr2[i++];
      	for(j=0; j<t1; j++) lcm *= arr1[j];
      	printf("%ld\n", lcm);
    }
  	else {
    	i=0;
      	for(j=0; j<t2; j++) {
        	if(i!=t1) {
            	if(arr1[i] == arr2[j]) {
                	lcm *= arr1[i++];
                  	arr2[j] = 1;
                }
              	else if(arr1[i] < arr2[j]) {
                	lcm *= arr1[i++];
                  	j--;
                }
              	else {
                
                }
            }
          	else break;
        }
      	while(i!=t1) lcm *= arr1[i++];
      	for(j=0; j<t2; j++) lcm *= arr2[j];
      	printf("%ld\n", lcm);
    }
  	
	return 0;
}