#include <stdio.h>
void swap(long* a, long* b)
{
    int t = *a;
    *a = *b;
    *b = t;
}
int partition (long arr[], long low, long high)
{
    long pivot = arr[high]; 
    long i = (low - 1),j;  
 
    for (j = low; j <= high- 1; j++)
    {
        if (arr[j] <= pivot)
        {
            i++;    
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}
 
void quickSort(long arr[], long low, long high)
{
    if (low < high)
    {
        long pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}
int main()
{
int t,n,i;
  long s[5000];
  scanf("%d",&t);
  for(i=0;i<t;i++)
  {
    long j;
    scanf("%d",&n);
    for(j=0;j<n;j++)
    {
      scanf("%ld",&s[j]);
    }
    quickSort(s,0,n-1);
    
    long min=9999999999;
    for(j=0;j<n-1;j++)
    {
      if(s[j+1]-s[j] < min)
      {
        min=s[j+1]-s[j];
        //printf(s)
      }
    }
    printf("%ld",min);
  }
  
	return 0;
}