#include <stdio.h>	
void merge(int arr[], int l, int m, int r)
{
    int i, j, k;
    int n1 = m - l + 1;
    int n2 =  r - m;
 
    int L[n1], R[n2];
 
    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1+ j];
 
    i = 0; 
    j = 0;
    k = l; 
    while (i < n1 && j < n2)
    {
        if (L[i] <= R[j])
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
 
    
    while (i < n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }
 
    while (j < n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}
 
void mergeSort(int arr[], int l, int r)
{
    if (l < r)
    {
        int m = l+(r-l)/2;
 
        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);
 
        merge(arr, l, m, r);
    }
}

int main() {
    int arr_size,k;
    scanf("%d %d",&arr_size,&k);
    int arr[1000006];
    int i,j;
    for(i=0;i<arr_size;i++) {
        scanf("%d",&arr[i]);
        arr[i] = arr[i] * -1;
    }
    
    mergeSort(arr, 0, arr_size-1);
    int sum = 0;
    for(i=arr_size-1;i>=arr_size-k;i--){
        if(arr[i]<0) {
            break;
        }
        else{
            sum = sum+arr[i];
        }
    }
    
    printf("%d",sum);
    return 0;
}