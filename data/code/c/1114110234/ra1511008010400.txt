#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define MOD 1000000007
#define MAXX 205
 
int N,K,set[MAXX];
long long int noOfPerm[MAXX];
 
int update(int m, int n){
	long long int t = 1,r,i,a,b;
    	for (i = m+1; i<m+n; i++){
        	t = (t * i) % MOD;
        }
        a = (t * n) % MOD;
        b = (t * m) % MOD;
    	for (r = K; r>=0; r--) {
        	noOfPerm[r+1] = (noOfPerm[r+1] + ((noOfPerm[r] * a) % MOD) ) % MOD;
        	noOfPerm[r] = (noOfPerm[r] * b) % MOD; 
    	}
    	m += n;
return m;
}
 
void solve(){
	long long int ans = 0;
	int i,m = 0;
	for(i=200;i>=1;i--){
		if(set[i] > 0){
			m = update(m, set[i]);
		}
	}
	
	for(i=1;i<=K;i++){
		//printf("%lld\n",noOfPerm[i]);
		ans = ans + noOfPerm[i];
		ans = ans % MOD;
	}
	//if (ans < 0) ans = (ans + MOD)%MOD;
	printf("%lld\n",ans);
}
 
int main(){
	int T,i,x;scanf("%d",&T);
	while(T--){
		scanf("%d%d",&N,&K);
		for(i=0;i<=N;i++) noOfPerm[i] = 0;
		for(i=0;i<202;i++) set[i] = 0;
		for(i=0;i<N;i++) scanf("%d",&x), set[x]++;
		noOfPerm[0] = 1;
		solve();
	}
return 0;
}