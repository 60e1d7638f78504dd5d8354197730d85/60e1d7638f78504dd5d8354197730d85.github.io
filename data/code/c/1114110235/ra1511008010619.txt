#include <stdio.h>
int     stack1[ 10 ];
int     next1;
int     stack2[ 10 ];
int     next2;
 
int
main( void )
{
        int     arr[ 5 ];
        int     val[ 4 ] = { 0, 0, 1, 1 };
        int     i, j, k, l, a, b, c, temp, min = 0;
        for( i = 0; i < 5; i++ )
                scanf( "%d", &arr[ i ] );
        for( i = 0; i < 4; i++ ) {
                for( j = 0; j < 4; j++ ) {
                        if( j == i )
                                continue;
                        for( k = 0; k < 4; k++ ) {
                                if( k == j || k == i )
                                        continue;
                                for( l = 0; l < 4; l++ ) {
                                        if( l == k || l == j || l == i )
                                                continue;
                                        //if( i == 3 && j == 2 && k == 0 && l == 1 ) {
                                        next1 = 0;
                                        next2 = 0;
                                        stack1[ next1++ ] = arr[ 0 ];
                                        stack2[ next2++ ] = i;
                                        stack1[ next1++ ] = arr[ 1 ];
                                        for( a = next2 - 1; a >= 0 && val[ stack2[ a ] ] >= val[ j ]; a-- ) {
                                                if( stack2[ a ] == 0 )
                                                        temp = stack1[ next1 - 2 ] - stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 1 )
                                                        temp = stack1[ next1 - 2 ] + stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 2 )
                                                        temp = stack1[ next1 - 2 ] * stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 3 )
                                                        temp = stack1[ next1 - 2 ] / stack1[ next1 - 1 ];
                                                stack1[ next1 - 2 ] = temp;
                                                next1--;
                                                next2--;
                                        }
                                        stack2[ next2++ ] = j;
                                        stack1[ next1++ ] = arr[ 2 ];
                                        for( a = next2 - 1; a >= 0 && val[ stack2[ a ] ] >= val[ k ]; a-- ) {
                                                if( stack2[ a ] == 0 )
                                                        temp = stack1[ next1 - 2 ] - stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 1 )
                                                        temp = stack1[ next1 - 2 ] + stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 2 )
                                                        temp = stack1[ next1 - 2 ] * stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 3 )
                                                        temp = stack1[ next1 - 2 ] / stack1[ next1 - 1 ];
                                                stack1[ next1 - 2 ] = temp;
                                                next1--;
                                                next2--;
                                        }
                                        stack2[ next2++ ] = k;
                                        stack1[ next1++ ] = arr[ 3 ];
                                        for( a = next2 - 1; a >= 0 && val[ stack2[ a ] ] >= val[ l ]; a-- ) {
                                                if( stack2[ a ] == 0 )
                                                        temp = stack1[ next1 - 2 ] - stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 1 )
                                                        temp = stack1[ next1 - 2 ] + stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 2 )
                                                        temp = stack1[ next1 - 2 ] * stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 3 )
                                                        temp = stack1[ next1 - 2 ] / stack1[ next1 - 1 ];
                                                stack1[ next1 - 2 ] = temp;
                                                next1--;
                                                next2--;
                                        }
                                        stack2[ next2++ ] = l;
                                        stack1[ next1++ ] = arr[ 4 ];
                                        for( a = next2 - 1; a >= 0; a-- ) {
                                                if( stack2[ a ] == 0 )
                                                        temp = stack1[ next1 - 2 ] - stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 1 )
                                                        temp = stack1[ next1 - 2 ] + stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 2 )
                                                        temp = stack1[ next1 - 2 ] * stack1[ next1 - 1 ];
                                                else if( stack2[ a ] == 3 )
                                                        temp = stack1[ next1 - 2 ] / stack1[ next1 - 1 ];
                                                stack1[ next1 - 2 ] = temp;
                                                next1--;
                                                next2--;
                                        }
                                        //printf( "%d %d %d %d %d\n", temp, i, j, k, l );
                                        if( temp > 0 ) {
                                                if( min == 0 || min > temp )
                                                        min = temp;
                                        }
                                }
 
                        }
                }
        }
        printf( "%d\n", min );
        return 0;
}
 