#include <stdio.h>
void merged(long long int arr[],long long  int l,long long  int m,long long  int r);
 void mergedSort(long long int arr[],long long  int l, long long int r);

int main() {
	int t;
	scanf("%d",&t);
	while(t--)
	{
	    long long int n,k,e,i,j,x,y,m;
	    scanf("%lld %lld %lld %lld",&n,&k,&e,&m);
	    long long int a[n-1],sum;
	    for(i=0;i<n-1;i++)
	    {
	        sum=0;
	        for(j=0;j<e;j++)
	        {
	            scanf("%lld",&x);
	            sum=sum+x;
	        }
	        a[i]=sum;
	    }
	    sum=0;
	    for(i=0;i<e-1;i++)
	    {
	        scanf("%lld",&x);
	        sum=sum+x;
	    }
	    mergedSort(a,0,n-2);
	    if(a[k-1]-sum<m)
	    {
	        if(a[k-1]-sum<=0)
	        printf("0\n");
	        else
	    printf("%lld\n",a[k-1]-sum+1);
	    }
	    else
	    printf("Impossible\n");
	}
	return 0;
}
void merged(long long int arr[],long long  int l,long long  int m,long long  int r)
{
    long long int i, j, k;
    long long int n1 = m - l + 1;
    long long int n2 =  r - m;
    long long int L[n1], R[n2];
    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1+ j];
    i = 0; 
    j = 0; 
    k = l; 
    while (i < n1 && j < n2)
    {
        if (L[i] >= R[j])
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
    while (i < n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }
    while (j < n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}
void mergedSort(long long int arr[],long long  int l, long long int r)
{
    if (l < r)
    {
        int m = l+(r-l)/2;
        mergedSort(arr, l, m);
        mergedSort(arr, m+1, r);
        merged(arr, l, m, r);
    }
}