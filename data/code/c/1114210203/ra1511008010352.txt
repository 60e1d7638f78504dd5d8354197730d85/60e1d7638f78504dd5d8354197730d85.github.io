#include<stdio.h>
 
 
int a;int ans;        
 int adj[11][11]={ {0,0,0,0,0,0,0,0,0,0,0},
                   {0,1,1,1,1,1,1,1,1,1,1},
                     {0,1,1,1,1,1,1,1,1,1,1},
              {0,1,1,1,1,1,1,1,1,1,1},
                 {0,1,1,1,1,1,1,1,1,1,1},
        {0,1,1,1,1,1,1,1,1,1,1},
             {0,1,1,1,1,1,1,1,1,1,1},
                {0,1,1,1,1,1,1,1,1,1,1},
                   {0,1,1,1,1,1,1,1,1,1,1},
                      {0,1,1,1,1,1,1,1,1,1,1},
                         {0,1,1,1,1,1,1,1,1,1,1},
                         
                     
                  
                 };    
 int visited[11][11]={{0}};
                
 int maze[11][11]={{0}};    
int dfs(int x,int y,int a);
 
int main()
{
    int t,a,b,c,i,j,k,l;ans=0;
    scanf("%d",&a);
     maze[a+1][a+1];
               
      for(i=1;i<=a;i++)
      {
          for(j=1;j<=a;j++)
          {
              scanf("%d",&maze[i][j]);
          
          }
      }
      dfs(1,1,a);
      printf("%d\n",ans);
      return 0;
      
}             
int dfs(int r,int c,int a)
{ 
 
       if((r==a)&&(c==a))
        {ans++;return 0;} visited[r][c]=1;
        if((adj[r+1][c]==1)&&(maze[r+1][c]==0)&&(visited[r+1][c]!=1)&&(r+1<=a))
        {  dfs(r+1,c,a);}
        if((adj[r-1][c]==1)&&(maze[r-1][c]==0)&&(visited[r-1][c]!=1)&&(r-1>=1))
        {dfs(r-1,c,a);}
        if((adj[r][c+1]==1)&&(maze[r][c+1]==0)&&(visited[r][c+1]!=1)&&(c+1<=a))
        {dfs(r,c+1,a);}
        if((adj[r][c-1]==1)&&(maze[r][c-1]==0)&&(visited[r][c-1]!=1)&&(c-1>=1))
       {dfs(r,c-1,a);}
    visited[r][c]=0;
     return 0;
      
        
}    
    