#include<stdio.h>
#define ll unsigned long long
#define MOD 1000000007
void mul(int s,ll (*A)[s], ll (*B)[s]) {
int i,j,k;
ll res[s][s];
for(i=0; i<s; i++)
for(j=0; j<s; j++) res[i][j]=0;
for(i=0; i<s; i++) {
for(j=0; j<s; j++) {
for(k=0; k<s; k++) res[i][j]+=(A[i][k]*B[k][j]);
res[i][j]%=MOD;
}
}
for(i=0; i<s; i++) {
for(j=0; j<s; j++) {
A[i][j]=res[i][j];
}
}
}
void pow1(ll p, int s,ll (*M)[s]) {
ll res[s][s];
int i,j;
for(i=0; i<s; i++) {
for(j=0; j<s; j++) {
res[i][j]=0;
}
res[i][i]=1;
}
while(p>0) {	
if(p%2==1) {
mul(s,res,M);
}
mul(s,M,M);
p/=2;
}
for(i=0; i<s; i++) {
for(j=0; j<s; j++) {
M[i][j]=res[i][j];
}
}
}
int main() {
int t,k;
scanf("%d\n",&t);
ll N;
int i=0;
while (i<t) {
scanf("%llu\n",&N);
scanf("%d ",&k);
int j=0;
int A[16], V[16];
V[0]=1;
for(j=0; j<16; j++) {
A[j]=0;
V[j]=0;
}
int tmp=0;
int max=0;
j=0;
while (j<k) {
scanf("%d",&tmp);
A[tmp]=1;
V[tmp]=1;
if(tmp>max) max=tmp;
j++;
}
ll M[max][max];
int x;
int y;
for(x=0; x<max-1; x++) {
for(y=0; y<max; y++) {
M[x][y]=0;
}
M[x][x+1]=1;
}
for(x=1;x<=max;x++) {
if(A[x]) M[max-1][max-x]=1;
else M[max-1][max-x]=0;
}
for(x=1;x<16;x++) {
for(y=1;y<x;y++) {
if(A[y]) V[x]+=V[x-y];
}
}
int Val[max];
int c1=1;
for(y=0;y<max;y++) {
Val[y]=V[c1];
c1++;
}
if(N>max) {
pow1(N-max,max,M);
ll r1=0;
for(x=max-1; x<max; x++) {
for(y=0; y<max; y++) {
r1+=M[x][y]*Val[y];
}
r1%=MOD;
}
printf("%llu\n",r1);
}
else printf("%d\n",V[N]);
i++;
}
return 0;
}  

