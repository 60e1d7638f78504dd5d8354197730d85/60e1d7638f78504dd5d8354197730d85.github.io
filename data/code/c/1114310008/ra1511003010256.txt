#include<stdio.h>
#include<stdlib.h>
 
void merge(long int arr[],long int l, long int m,long int r)
{
   long int i, j, k;
   long int n1 = m - l + 1;
   long int n2 = r - m;
 
   long  int L[n1], R[n2];
 
    for(i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for(j = 0; j < n2; j++)
        R[j] = arr[m + 1+ j];
 
    i = 0;
    j = 0;
    k = l;
    while (i < n1 && j < n2)
    {
        if (L[i] <= R[j])
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
 
    while (i < n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }
 
    while (j < n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}
 
void mergeSort(long int arr[],long int l,long int r)
{
    if (l < r)
    {
        long int m = l+(r-l)/2; 
        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);
        merge(arr, l, m, r);
    }
}
int main()
{
    long int N,i,Q,arr[100000],cu[100000];
    scanf("%ld",&N);
    for(i=0;i<N;i++)
        scanf("%ld",&arr[i]);
      
        mergeSort(arr,0,N-1);
        cu[0]=arr[0];
 
        for(i=1;i<N;i++)
        {
            cu[i]=cu[i-1]+arr[i];
        }
 
      //for(i=0;i<N;i++)
      //printf("%ld ",cu[i]);
 
     // printf("\n");
    long int j;
    scanf("%ld",&Q);
    for(j=0;j<Q;j++)
    {	
        long int k,price,z,p;
        double y;
        scanf("%ld",&k);
        p=k+1;
        y=(double)N/(double)p;
        //printf("%lf %ld %ld %ld  ",y,N,k,p);
        z=y;
        //printf("%lf %ld",y,z);
        if(y==z) 
        {
        //printf("%ld",y);
        
        price=cu[z-1];
        printf("%ld\n",price);
        }
        else
        {
            price=cu[z];
        printf("%ld\n",price);
        }
    }
    return 0;
}
 
 