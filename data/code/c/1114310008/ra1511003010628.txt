#include<stdio.h>
#include<stdlib.h>
#define MAX 100000
void quicksort(long int[], long int ,  long int );
void quicksort( long int array[], long int firstIndex, long int lastIndex)
{
    //declaaring index variables
    long int pivotIndex, temp, index1, index2;
 
    if(firstIndex < lastIndex)
    {
        //assigninh first element index as pivot element
        pivotIndex = firstIndex;
        index1 = firstIndex;
        index2 = lastIndex;
 
        //Sorting in Ascending order with quick sort
        while(index1 < index2)
        {
            while(array[index1] <= array[pivotIndex] && index1 < lastIndex)
            {
                index1++;
            }
            while(array[index2]>array[pivotIndex])
            {
                index2--;
            }
 
            if(index1<index2)
            {
                //Swapping opertation
                temp = array[index1];
                array[index1] = array[index2];
                array[index2] = temp;
            }
        }
 
        //At the end of first iteration, swap pivot element with index2 element
        temp = array[pivotIndex];
        array[pivotIndex] = array[index2];
        array[index2] = temp;
 
        //Recursive call for quick sort, with partiontioning
        quicksort(array, firstIndex, index2-1);
        quicksort(array, index2+1, lastIndex);
    }
}
 
 
int main()
{
     long int n,a[MAX],k,q[MAX],i,m,r,t,sum;
    scanf("%ld",&n);
    for(i=0;i<n;i++)
    {
        scanf("%ld",&a[i]);
 
    }
    scanf("%ld",&k);
    for(i=0;i<k;i++)
    {
        scanf("%ld",&q[i]);
 
    }
    quicksort(a,0,n-1);
 
    for(t=0;t<k;t++)
    {
        sum=0;
//        x=0;y=n-1;
        m=n/(q[t]+1);
        r=n%(q[t]+1);
        if(r==0)
        {
 
            for(i=0;i<m;i++)
            {
                sum=sum+a[i];
 
            }
        }
        else
        {
            for(i=0;i<=m;i++)
            {
                sum=sum+a[i];
 
            }
        }
       /* while(x<=y)
        {
            sum=sum+a[x];
            y=y-q[t];
            x++;
        }*/
 
        printf("%ld\n",sum);
 
 
    }
 
return 0;
 
}