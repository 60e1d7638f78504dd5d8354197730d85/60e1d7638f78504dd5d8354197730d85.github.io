#include<stdio.h>
int arr[2][1000000]={{0}},final[2][1000000],y,z,temp[2][1000000];
void mergeSort(int arr[][1000000],int low,int mid,int high,int zz){
    int i,m,k,l;
    l=low;
    i=low;
    m=mid+1;
    while((l<=mid)&&(m<=high)){
         if(arr[zz][l]<=arr[zz][m]){
             temp[0][i]=arr[0][l];
             temp[1][i]=arr[1][l];
             l++;
         }
         else{
             temp[0][i]=arr[0][m];
             temp[1][i]=arr[1][m];
             m++;
         }
         i++;
    }
    if(l>mid){
         for(k=m;k<=high;k++){
             temp[0][i]=arr[0][k];
             temp[1][i]=arr[1][k];
             i++;
         }
    }
    else{
         for(k=l;k<=mid;k++){
             temp[0][i]=arr[0][k];
             temp[1][i]=arr[1][k];
             i++;
         }
    }
    for(k=low;k<=high;k++){
         arr[0][k]=temp[0][k];
         arr[1][k]=temp[1][k];
    }
}
void partition(int arr[][1000000],int low,int high,int zz){
    int mid;
    if(low<high){
         mid=(low+high)/2;
         partition(arr,low,mid,zz);
         partition(arr,mid+1,high,zz);
         mergeSort(arr,low,mid,high,zz);
    }
}
void calc(int a,int b){
	if(b<a)
		return;
	else if(a==b)
		arr[1][a]++;
	else{
		int max,index,l,r,i;
		max=arr[0][a];
		index=a;
		for(i=a+1;i<=b;i++){
			if(arr[0][i]>max){
				max=arr[0][i];
				index=i;
			}
		}
		l=index-a+1;
		r=b-index+1;
		arr[1][index]+=(l*r);
		calc(a,index-1);
		calc(index+1,b);
	}
}
void search(int i,int j,int a){
	if(j-i==1){
		if(a==final[0][j]){
			y=j;
			z=j;
		}
		else if(a==final[0][i]){
			y=i;
			z=i;
		}
		else{
			y=i;
			z=j;
		}
	}
	else{
		int mid=(j+i)/2;
		if(final[0][mid]==a){
			y=mid;
			z=mid;
		}
		else if(a<final[0][mid])
			search(i,mid,a);
		else
			search(mid,j,a);
	}
}
int main(){
	int n,m,i,j,b,sum;
	char a,c,str[1000001];
	scanf("%d%d",&n,&m);
	for(i=0;i<n;i++)
		scanf("%d",&arr[0][i]);
	calc(0,n-1);
	partition(arr,0,n-1,0);
	final[0][0]=arr[0][0];
	final[1][0]=arr[1][0];
	for(i=1,j=0;i<n;i++){
		if(arr[0][i]==final[0][j])
			final[1][j]+=arr[1][i];
		else{
			j++;
			final[0][j]=arr[0][i];
			final[1][j]=arr[1][i];
		}
	}
	for(i=1;i<=j;i++)
		final[1][i]+=final[1][i-1];
	for(i=0;i<m;i++){
		scanf("\n%c %d %c",&a,&b,&c);
		sum=0;
		if(b<final[0][0] || b>final[0][j]){
			if(a=='>' && b<final[0][0])
				sum=final[1][j];
			else if(a=='<' && b>final[0][j])
				sum=final[1][j];
		}
		else{
			search(0,j,b);
			if(a=='<'){
				if(b!=final[0][y])
					sum=final[1][y];
				else if(y>0)
					sum=final[1][y-1];
			}	
			else if(a=='>'){
				if(b!=final[0][z])
					sum=final[1][j]-final[1][y];
				else if(z<j)
					sum=final[1][j]-final[1][z];
			}
			else{
				if(b==final[0][y]){
					if(y==0)
						sum=final[1][y];
					else
						sum=final[1][y]-final[1][y-1];
				}
			}
		}
	
		if(c=='D'){
			if(sum%2==0)
				str[i]='C';
			else
				str[i]='D';
		}
		else{
			if(sum%2==0)
				str[i]='D';
			else
				str[i]='C';
		}
	}
	str[i]='\0';
	printf("%s",str);
	return 0;
} 