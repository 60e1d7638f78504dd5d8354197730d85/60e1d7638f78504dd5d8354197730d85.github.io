#include<stdlib.h>
#include<stdio.h>
int count[180]={0};
int primes[180];
int sieve[1001]={0};
int ctr;
int other[10];
    int compare (const void * a, const void * b)
    {
    return ( *(int*)a - *(int*)b );
    }
void genPrimes()
{
    int i,j;
    ctr=0;
    sieve[0]=sieve[1]=1;
    for(i=2;i<1001;i++)
    {
        if(!sieve[i])
        {
            primes[ctr++]=i;
            for(j=2*i;j<1001;j+=i)
                sieve[j]=1;
        }
    }
}
void factorize(long int N,int pos)
{
    if(N<2)
        return;
    int i;
    for(i=0;i<ctr&& primes[i]<=N &&N>1;i++)
    {
        while(N%primes[i]==0)
        {
            count[i]++;
            N=N/primes[i];
        }
    }
    if(N>1)
    {
        other[pos]=N;
    }
}
long long int numberOfFactors()
{
    long long int ans=1;int i=0;
    for(i=0;i<=ctr;i++)
    {
        //printf("%lld %lld\n",primes[i],count[i]);
        ans*=count[i]+1;
        count[i]=0;
    }
    return ans;
}
int main()
{
    int T,N,i;
    long int A;
    scanf("%d",&T);
    genPrimes();
    while(T--)
    {
        N=10;
        scanf("%d",&N);
        for(i=0;i<N;i++)
        {
            other[i]=0;
            scanf("%ld",&A);
            factorize(A,i);
        }
        long long int ans=numberOfFactors();
         qsort(other, N, sizeof(int), compare);
             for(i=0;i<N;i++)
                {
                if(other[i])
                {
                    int c1=1;
                    while(other[i]==other[i+1]){c1++;i++;}
                    ans=ans*(c1+1);
                }
                }
        printf("%lld\n",ans);
    }
    return 0;
}