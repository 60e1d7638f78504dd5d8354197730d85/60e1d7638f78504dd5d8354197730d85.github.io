#include <stdio.h>
#define M 1000000007
#define  L long long
struct X
{
	L mat[50][50];
};
struct X v;
struct X identity;
struct X mul(struct X a,struct X b,int m)
{
	struct X c;
	int i,j,l;
	for(i=0;i<m;i++)
	{
		for(j=0;j<m;j++)
		{
			c.mat[i][j]=0;
			for(l=0;l<m;l++)
			{
				c.mat[i][j]+=a.mat[i][l]*b.mat[l][j];c.mat[i][j]%=M;
			}
		}
	}
	return c;
}
struct X power(struct X a,L exp,int m)
{
	if(exp<=0)
	{
		return identity;
	}
	if(exp==1)return a;
	if(exp%2==0)
	{
		return power(mul(a,a,m),exp/2,m);
	}
	return mul(a,power(a,exp-1,m),m);
}
void adg(int i,int u,int l,int m)
{
   
    
    if(l==2)v.mat[u][i] = v.mat[u][i] + 1;
    
    else
    {
        if(l == 0)
        {
            if(u>0)adg(i,u-1,1,m);
            adg(i, u,1,m);
            if(u < m-1)adg(i,u+1,1,m);
        }
        else
        {
            if(u > 0)adg(i,u-1,2,m);
            if(u < m-1)adg(i,u+1,2,m);
        }
    }
}
L res1[50];
L res[50];
void mod_e(int p,int m)
{
    int i,j;
   struct X R;
   R=power(v,p,m);
   
    for(i=0;i<m;i++)
    {
        res[i]=0;
        for(j=0;j<m;j++)
        {
            res[i]+=R.mat[i][j];
            res[i]%=M;
        }
        
    }
}
 
int main()
{
    
    int t,n,m,i,j;
    
    for(i=0;i<50;i++)identity.mat[i][i]=1;
    
    
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d %d",&n,&m);   
           for(i=0;i<50;i++)
        	for(j=0;j<50;j++)
        	{
        		v.mat[i][j]=0;
        	}
        		
        
    
        for(i=0;i<m;i++)adg(i,i,0,m);
        
        mod_e((n - 1)/2,m);   
        L ans = 0;
        if(n%2 == 0)
        {
            for(i=0;i<m;i++)
            {
                L v[4]={0};
                if(i>0) v[1]= res[i-1];
                if(i<m-1) v[3]= res[i+1];
                res1[i] = v[1]+v[3];res1[i] = res1[i]%M;
                ans+=res1[i];ans%=M;
            }
            
        }
        else
        {
            for(i=0;i<m;i++)
            {
                ans+=res[i];ans%=M;
            }
        }
        printf("%lld\n",ans);
    }
    return 0;
}
 

