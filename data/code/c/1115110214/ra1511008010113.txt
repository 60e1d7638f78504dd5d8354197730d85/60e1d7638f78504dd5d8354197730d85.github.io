#include<stdio.h>

long long  MOD=1000000007;
int i, j, k,m=1;
void mult(long long a[][30],long long b[][30],long long c[][30]){
	for(i=0;i<m;i++){
		for(j=0;j<m;j++){
			c[i][j]=0LL;
			for(k=0;k<m;k++)
				c[i][j]=(c[i][j]+a[i][k]*b[k][j])%MOD;
		}
	}
	return;
}
void fib_fn(int n,long long mat[][30],long long ans[][30])
{
	long long  temp[m][30];
	while(n)
	{
		if(n&1)
		{
			mult(ans,mat,temp);
			for(i=0;i<m;i++)
				for(j=0;j<m;j++)
					ans[i][j]=temp[i][j];
		}
		mult(mat,mat,temp);
		for(i=0;i<m;i++)
			for(j=0;j<m;j++)
				mat[i][j]=temp[i][j];
		n/=2;
 
	}
	return ;
}
 
int main()
{
	int t,n;
	for(scanf("%d",&t);t>0;t--)
	{
		scanf("%d%d",&n,&m);
		if(m==1){
			if(n==1)printf("1\n");
			else printf("0\n");
			continue;
		}
		long long a[m][30],b[m][30],c[m][30],d[m][30];
		for(i=0;i<m;i++){
			for(j=0;j<m;j++){
				if(i==j){
					d[i][j]=1;
					a[i][j]=b[i][j]=0;
				}
				else a[i][j]=b[i][j]=d[i][j]=0;
			}
		}
		for(i=0;i<m;i++){
			if(i!=0)a[i][i-1]=b[i][i-1]=1;
			if(i!=(m-1))a[i][i+1]=b[i][i+1]=1;
			b[i][i]=1;
		}
		mult(a,b,c);
		fib_fn((n-1)/2,c,d);
		if(n%2==0){
			mult(d,a,c);
			for(i=0;i<m;i++)
				for(j=0;j<m;j++)d[i][j]=c[i][j];
		}
		long long ans=0;
		for(i=0;i<m;i++){
			for(j=0;j<m;j++){
				ans=(ans+d[i][j])%MOD;
			}
		}
		printf("%lld\n", ans%MOD);
	}
	return 0;
} 