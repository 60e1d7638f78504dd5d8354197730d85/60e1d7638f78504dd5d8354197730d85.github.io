#include<stdio.h>
#define mod 1000000007

long long even[31][31],odd[31][31],T[31][31],ans[31][31],tmp[31][31];

void matmul(long long  a[31][31],long long  b[31][31], long long c[31][31],int m)
{
	int i,j,k;
	for(i=0;i<m;i++)
	{
		for(j=0;j<m;j++)
		{
			c[i][j]=0;
			for(k=0;k<m;k++)
			{
				c[i][j]+=(a[i][k]*b[k][j]);
				c[i][j]=c[i][j]%mod;
			}
		}
	}
}

void matpow(long long z[31][31], long long n, int m)
{
    int i,j;
    for(i=0;i<m;i++)    ans[i][i]=1;
    while(n)
    {
        if(n&1)
        {
            matmul(ans,z,tmp,m);
            for(i=0;i<m;i++)
                for(j=0;j<m;j++)
                    ans[i][j]=tmp[i][j];
        }
        n>>=1;
        matmul(z,z,tmp,m);
        for(i=0;i<m;i++)
            for(j=0;j<m;j++)
                z[i][j]=tmp[i][j];
    }
}

int main()
{
    int t,m,i,j;
    long long int n,res;
    for(i=0;i<31;i++)
    {
        even[i][i]=1;
        if(i-1>=0)
            even[i][i-1]=odd[i][i-1]=1;
        if(i+1<31)
            even[i][i+1]=odd[i][i+1]=1;
    }
    scanf("%d",&t);
    while(t--)
    {
        scanf("%lld%d",&n,&m);
        for(i=0;i<m;i++)
            for(j=0;j<m;j++)
            {
                T[i][j]=ans[i][j]=0;
            }
        matmul(odd,even,T,m);
        n--;
        matpow(T,n/2,m);
        if(n&1)
        {
            matmul(ans,odd,tmp,m);
            for(i=0;i<m;i++)
                for(j=0;j<m;j++)
                    ans[i][j]=tmp[i][j];
        }
        res=0;
        for(i=0;i<m;i++)
            for(j=0;j<m;j++)
            {
                res+=ans[i][j];
                if(res>=mod)res-=mod;
            }
        if(res < 0) res += mod;
        printf("%lld\n",res);
    }
    return 0;
}
