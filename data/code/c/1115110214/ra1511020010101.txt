#include <stdio.h>
//#include <bits/stdc++.h>
//using namespace std;
typedef long long ll;
ll mat[32][32];
void dfs(int,int,int,int);
ll odd[32],MOD;
ll res[32];
ll a[32][32],c[32][32];
void mulbb(int);
void mulab(int);
void func(int,int);
int main()
{
    MOD = 1000000007;
    int tc,t;
    scanf("%d",&tc);
    for(t = 1 ; t<=tc ; t++)
    {
        int n,m,i,j;
        scanf("%d %d",&n,&m);
        for(i = 0 ; i<32 ; i++)
        for(j = 0 ; j<32 ; j++)
        mat[i][j] = 0,a[i][j] = 0,c[i][j] = 0;
 
        for(i = 1 ; i<=m ; i++)
        {
            a[i][i] = 1;
            dfs(i,i,0,m);
        }
        
        func((n - 1)/2,m);
 
        
        ll ans = 0;
        if(n%2 == 0)
        {
            for(i = 1 ; i<=m ; i++)
            {
                ll v1 = 0,v2 = 0,v3 = 0;
                if(i > 1) v1 = res[i-1];
                //v2 = res[i];
                if(i < m) v3 = res[i+1];
                odd[i] = v1 + v2 + v3;
                odd[i] = odd[i]%MOD;
                //printf("%d ",odd[i]);
                ans = ans + odd[i];
                if(ans >= MOD) ans = ans - MOD;
            }
            //printf("\n");
        }
        else
        {
            for(i = 1 ; i<=m ; i++)
            {
                ans = ans + res[i];
                if(ans >= MOD) ans = ans - MOD;
            }
        }
        printf("%lld\n",ans);
    }
    return 0;
}
void dfs(int i,int u,int l,int m)
{
    if(i < 1 || i > m) return ;
    //printf("%d %d %d %d uttam\n",i,u,l,m);
    if(l == 2)
    {
        mat[u][i] = mat[u][i] + 1;
    }
    else
    {
        if(l == 0)
        {
            if(u>1)dfs(i,u-1,1,m);
            dfs(i, u,1,m);
            if(u < m)dfs(i,u+1,1,m);
        }
        else
        {
            if(u > 1)dfs(i,u-1,2,m);
            if(u < m)dfs(i,u+1,2,m);
        }
    }
}
void func(int p,int m)
{
    int i,j;
    while(p > 0)
    {
        if(p%2 == 1)
        {
            mulab(m);
        }
        p = p/2;
        mulbb(m);
    }
    for(i = 1 ; i<=m ; i++)
    {
        ll sum = 0;
        for(j = 1 ; j<=m ; j++)
        {
            sum = sum + a[i][j];
            if(sum >= MOD) sum = sum - MOD;
        }
        res[i] = sum;
    }
}
void mulbb(int m)
{
    int i,j,k;
    for(i = 1 ; i<=m ; i++)
    {
        for(j = 1 ; j<=m ; j++)
        {
            ll sum = 0;
            for(k = 1 ; k<=m ; k++)
            {
                ll temp = mat[i][k]*mat[k][j]%MOD;
                sum = sum + temp;
                if(sum >= MOD)
                sum = sum - MOD;
            }
            c[i][j] = sum;
        }
    }
    for(i = 1 ; i<=m ; i++)
    {
        for(j = 1 ; j<=m ; j++)
        {
 
            mat[i][j] = c[i][j];
        }
    }
}
void mulab(int m)
{
    int i,j,k;
    for(i = 1 ; i<=m ; i++)
    {
        for(j = 1 ; j<=m ; j++)
        {
            ll sum = 0;
            for(k = 1 ; k<=m ; k++)
            {
                ll temp = a[i][k]*mat[k][j]%MOD;
                sum = sum + temp;
                if(sum >= MOD)
                sum = sum - MOD;
            }
            c[i][j] = sum;
        }
    }
    for(i = 1 ; i<=m ; i++)
    {
        for(j = 1 ; j<=m ; j++)
        {
 
            a[i][j] = c[i][j];
        }
    }
}
 
