#include <stdio.h>
void quickSort( int arr[], int low,  int high);
int partition (int arr[],int low,int high);
void swap(int* a,int* b);
int main(void) {
	int t,i,a[10000],j,count,r,n;
	
	
	    scanf("%d",&n);
	    for(j=0;j<n;j++){
	    scanf("%d",&a[j]);}
	    quickSort(a,0,n-1);
	    r=1;
	    count=0;
	    //for(j=0;j<n;j++)
	    //printf("%d",a[j]);
	    for(j=n-2;j>=0;j--){
	        if(a[j+1]==a[j]){
	            
	        count++;
	        r=r*a[j];
	        j--;
	        }
	        if(count==2)
	        break;
	    }
	    if(count==2)
	    printf("%d\n",r);
	    else 
	    printf("%d\n",-1);
	
	return 0;
}
void swap(int* a,int* b)
{
    int t = *a;
    *a = *b;
    *b = t;
}
 
 
int partition (int arr[],int low,int high)
{
    int pivot = arr[high];    
    int i = (low - 1),j;  
 
    for (j = low; j <= high- 1; j++)
    {
        
        if (arr[j] <= pivot)
        {
            i++;    
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}
 
void quickSort(int arr[],int low,int high)
{
    if (low < high)
    {
        
       int pi = partition(arr, low, high);
 
      
         quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
} 
 