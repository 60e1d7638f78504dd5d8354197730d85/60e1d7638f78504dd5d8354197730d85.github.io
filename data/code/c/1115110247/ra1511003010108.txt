#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<ctype.h>
#define M 1000000007
 
int minVal(int x, int y) { return (x < y)? x: y; }
int maxVal(int x, int y) { return (x > y)? x: y; }
 
int prime[]={2,3,5,7,11,13,17,19,23,29,31, 37, 41, 43, 47, 53, 59, 61, 67, 71 
, 73, 79, 83, 89, 97,101,103,107,109,113 
,127,131,137,139,149,151,157,163,167,173 
,179,181,191,193,197,199,211,223,227,229 
,233,239,241,251,257,263,269,271,277,281 
,283,293,307,311,313,317,331,337,347,349 
,353,359,367,373,379,383,389,397,401,409 
,419,421,431,433,439,443,449,457,461,463 
,467,479,487,491,499,503,509,521,523,541 
,547,557,563,569,571,577,587,593,599,601 
,607,613,617,619,631,641,643,647,653,659 
,661,673,677,683,691,701,709,719,727,733 
,739,743,751,757,761,769,773,787,797,809 
,811,821,823,827,829,839,853,857,859,863 
,877,881,883,887,907,911,919,929,937,941 
,947,953,967,971,977,983,991,997,1009,1013};
 
int gcd(int n1, int n2)
{
    if (n2!=0)
       return gcd(n2, n1%n2);
    else 
       return n1;
}
 
 
int cmpfunc (const void * a, const void * b)
{
   return ( *(int*)a - *(int*)b );
}
 
 
int main()
{
  	int i,n,k,key,count=0;
  	int *item;
  	scanf("%d %d",&n,&k);
  	
  	
  	
  	for(i=0;prime[i]<=n;i++)
  		{
  			key=prime[i]+prime[i+1]+1;
  			item=(int *)bsearch(&key,prime,170,sizeof(int),cmpfunc);
  			if(item!=NULL&&prime[item-prime]<=n)
  				{
  				count++;
  				//printf("%d %d\n",prime[i],prime[i+1]);
  				}
				  
		}
		
		if(count>=k)
			printf("YES\n");
		else
			printf("NO\n");
		
		
		
		
		
		
	
	
	return(0);
}