#include <stdio.h>
typedef long long int LLI;
#define inchar getchar_unlocked
inline LLI inLongPos() {
	int ch;
	LLI n;
	while ((ch = inchar()) < '0');
	n = (ch - '0');
	while ((ch = inchar()) >= '0') n = (n << 3) + (n << 1) + (ch - '0');
	return n;
}
inline int inIntPos() {
	int n, ch;
	while ((ch = inchar()) < '0') ;
	n = (ch - '0');
	while ((ch = inchar()) >= '0') n = (n << 3) + (n << 1) + (ch - '0');
	return n;
}
#define MOD 1000000007
 
int main() {
	int n, i;
	LLI m, k, a, res, diff, minAdds, maxAdds,sum, dmax,dmax2;
 
	n = inIntPos();
	if (n <= 2) {
		printf("1\n");
		return 0;
	}
 
	m = inLongPos();
	k = inLongPos();
	sum=0;
	dmax = dmax2 = 0;
	for (i = 0; i < n; ++i) {
		a = inLongPos();
		diff = (m + 1 - a);
		if (diff % k) diff = diff / k + 1;
			else      diff = diff / k;
		sum+=diff;
		if(diff > dmax) {
			dmax2=dmax;
			dmax=diff;
		}
		else if(diff>dmax2) dmax2=diff;
	}
 
	 minAdds=sum-dmax;
	 if(minAdds<(dmax2+dmax2)) minAdds = dmax2;
	 else {
		 if(minAdds&1) ++minAdds;
		 minAdds >>=1;
	 }
 
	maxAdds = sum-dmax;
	if(maxAdds >= dmax) maxAdds = sum>>1;
 
	res = (maxAdds - minAdds) + 1;
	if (res >= MOD) res = res % MOD;
 
	printf("%lld\n", res);
	return 0;
}
   
