#include <stdio.h>
     
    long long int lrg=1000000000000000000;
     
    long long int bin(long long int n,long long int arr[],long long int s);
    long long int subset(long long int n,long long int fg,long long int prod,long long int pos,long long int s,long long int arr[]);
    long long int valu(long long int n,long long int arr[],long long int s);
     
    int main()
    {
        long long int k,primes[45],i,j;
        scanf("%lld",&k);
        while(k>0)
        {
        	long long int c,t,ans=0,a,b,n,min=0;
        	char str[50];
        	scanf("%s",str);
        	scanf("%lld",&n);
        	j=0;
    		for(i=0;i<45;i++)
        	{
        		primes[i]=0;
        	}
        	for(i=0;i<40;i++)
        	{
        		if(str[i]=='1')
        			{
        				primes[j]=i+1;
        				j++;
        			}
        	}
        	b=bin(n,primes,j);
        	int fg=1;
        	while(fg)
        	{
        		for(i=0;i<j;i++)
        		{
        			if(b%primes[i]==0)
        			{
        				fg=0;
                              				break;
        			}
        		}
        		b--;
        	}
     		printf("%lld\n",b+1);
        	k--;
        }
        return 0;
    }
     
    long long int bin(long long int n,long long int arr[],long long int s)
    {
    	long long int l=0,r=lrg,i,j,m;
    	while(l<r)
    	{
    		m=((l+r)/2);
    		j=m-valu(m,arr,s);
    		//printf("%lld %lld\n",m,j);
    		if(j<n)
    		{
    			l=m+1;
    		}
    		else if(j>n)
    		{
    			r=m-1;
    		}
    		else
    		{
    			return m;
    		}
        }
      	m=((l+r)/2);
    	return m;
    }
     
    long long int valu(long long int n,long long int arr[],long long int s)
    {
    	long long int i,j,t,ans=0;
    	ans=subset(n,1,1,0,s,arr);
    	return ans;
    }
     
    long long int subset(long long int n,long long int fg,long long int prod,long long int pos,long long int s,long long int arr[])
    {
    	if(pos==s)
    	{
    		return (n*fg)/prod;
    	}
    	else
    	{
    		long long int i,j,t;
    		t=subset(n,fg,prod,pos+1,s,arr);
    		t+=subset(n,(fg*(-1)),(prod*arr[pos]),pos+1,s,arr);
    		return t;
    	}
    }
                      
                