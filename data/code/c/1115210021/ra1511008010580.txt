#include <stdio.h>
#include <stdlib.h>
#include <stdio.h>
 
#define MAX_N 30+1
 
int dpArr[MAX_N][MAX_N];
 
int isInValidScore(int x1, int y1, int i, int j)
{
	int currX1, currY1;
	
	currX1 = x1 + i;
	currY1 = y1 + j;
 
	if((currX1 > 11 && currY1 < 10) || (currY1 > 11 && currX1 < 10))
		return 1;
 
	if( currX1 >= 10 && currY1 >= 10)
	{
		if((currX1-currY1) > 2 || (currY1-currX1) > 2)
		{
			return 1;
		}
	}
 
	return 0;
}
 
int isWinCondition(int x1, int y1, int i, int j)
{
	int currX1, currY1;
	
	currX1 = x1 + i;
	currY1 = y1 + j;
 
	if( currX1 >= 10 && currY1 >= 10)
	{
		if((currX1-currY1) == 2 || (currY1-currX1) == 2)
		{
			return 1;
		}
	}
	
	if((currX1 == 11 && currY1 < 10) || (currY1 == 11 && currX1 < 10))
		return 1;
 
	return 0;
 
}
 
int applyDP(int x1, int y1, int x2, int y2)
{
	int i,j;
 
	if(x2 < x1 || y2 < y1)
		return -1;
 
	if(x1 == x2 && y1 == y2)
		return 0;
 
	if(!isWinCondition( x2, y2, 0, 0))
		return -1;
 
	if(isInValidScore( x1, y1, (x2-x1), (y2-y1)))
		return -1;
 
	if(isWinCondition( x1, y1, 0, 0))
		return -1;
 
	if(x1 == x2 || y1 == y2)
		return 1;
 
	for( i=0; i<(x2-x1)+1; i++)
	{
		/*if(x1 == 0 && y1 == 0)
			dpArr[i][0] = 1;
		else*/
			dpArr[i][0] = 0;
	}
 
	for( i=0; i<(y2-y1)+1; i++)
	{
		/*if(x1 == 0 && y1 == 0)
			dpArr[0][i] = 1;
		else*/ 
			dpArr[0][i] = 0;
	}
 
	for( i=1; i<=(x2-x1)+1; i++)
	{
		for( j=1; j<=(y2-y1)+1; j++)
		{
			if(dpArr[i-1][j-1] == 0 && (i == 1) && (j == 1))
			{
				dpArr[1][1] = 1;
			}
			else
			{
				if(isInValidScore(x1,y1,i-1,j-1))
					dpArr[i][j] = 0;
				else if(isWinCondition(x1,y1,i-2,j-1))
					dpArr[i][j] = dpArr[i][j-1];
				else if(isWinCondition(x1,y1,i-1,j-2))
					dpArr[i][j] = dpArr[i-1][j];
				else
					dpArr[i][j] = (dpArr[i-1][j]  + dpArr[i][j-1]) % 1000000009;
			}
		}
	}
 
#if 0
	printf("\r\n Test : ");
	for( i=0; i<=(x2-x1)+1; i++)
	{
		printf("\n");
		for( j=0; j<=(y2-y1)+1; j++)
		{
			printf("%8d ", dpArr[i][j]);
		}
	}
#endif
 
	return dpArr[(x2-x1)+1][(y2-y1)+1];
}
 
int main()
{
	int testcase, T;
	int x1,y1,x2,y2;
	int res;
 
	scanf("%d", &T);
 
	for(testcase=1;testcase<=T; testcase++)
	{
		scanf("%d %d %d %d", &x1, &y1, &x2, &y2);
 
		res = applyDP(x1,y1,x2,y2);
		printf("Case %d: %d\n", testcase, res);
	}
 return 0;
}