#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
typedef struct{
	int in;
	int v;
	}obj;
inline int inp()
{
int noRead=0;
char p=getchar_unlocked();
for(;p<33;)
{
p=getchar_unlocked();
};
while(p>32)
{
noRead = (noRead << 3) + (noRead << 1) + (p - '0');
p=getchar_unlocked();
}
return noRead;
}	
int compare (const void *a, const void *b)
{
    return ((obj *)b)->v  > ((obj *)a)->v; 
}
int main(){
	int T,N,M,K,i,j,max,tmp;
	/*obj var[]={{1,2},{1,3},{1,4},{1,1},{1,7},{1,6},{1,5}};
	qsort(var,7,sizeof(obj),compare);
	for(i=0;i<7;i++)printf("%d ",var[i].v);printf("\n");
	*/
	int A[1001],B[1001][1001],C[1001][1001],F[1001];
	obj E[1001];
	long long int result;
	scanf("%d",&T);
	while(T--){
//		inV=0;
		result=0;
		scanf("%d %d %d",&N,&M,&K);
		for(i=0;i<N;i++)A[i]=inp();
		for(i=0;i<N;i++)for(j=0;j<M;j++)B[i][j]=inp();
		for(i=0;i<N;i++){F[i]=B[i][A[i]-1];}
		for(i=0;i<N;i++){
			max=INT_MIN;
			for(j=0;j<M;j++){
				C[i][j]=inp();
				tmp=B[i][j]-C[i][j];
				if(tmp>max)max=tmp;
			}
			E[i].v=max-F[i];
			E[i].in=i;
		}
		qsort(E,N,sizeof(obj),compare);
//		for(i=0;i<N;i++)printf("%d %d\n",E[i].v,E[i].i);
//		for(i=0;i<N;i++)printf("%d ",F[i]);printf("\n");
		for(i=0;i<K && i<N;i++)
			F[E[i].in]+=E[i].v;
//		for(i=0;i<N;i++)printf("%d ",F[i]);printf("\n");
		for(i=0;i<N;i++)result+=F[i];
		printf("%lld\n",result);
		}
	return 0;
	}
 
 
