#include <stdio.h>
 
 
int main()  {
    
    int G[30][30][31],A[30][30],b[30],h,i,j,k,p,n,s,x,y,numcase,I,temp;
    int dx[4]={-1,-1,-1,-2};
    int dy[4]={-1,0,1,0};
    int px[900],py[900],toggle[30][30],S[30],ct;
    char grid[32][32];
    
    scanf("%d",&numcase);
    for(I=0;I<numcase;I++)  {
        scanf("%d",&n);
        for(i=0;i<n;i++)  scanf("%s",grid[i]);
        
        for(j=0;j<n;j++)
            for(k=0;k<=n;k++)  G[0][j][k]=(j==k);
        
        for(i=1;i<n;i++){
        for(j=0;j<n;j++){
            for(k=0;k<=n;k++)  {
                s=0;
                for(h=0;h<4;h++)  {
                    x=i+dx[h];
                    y=j+dy[h];
                    if((x>=0)&&(x<n)&&(y>=0)&&(y<n))  s+=G[x][y][k];
                }
                G[i][j][k]=s&1;
            }
            if(grid[i-1][j]=='1')  G[i][j][n]=1-G[i][j][n];
        }}
       
        i=n;
        for(j=0;j<n;j++)  {
            for(k=0;k<=n;k++)  {
                s=0;
                for(h=0;h<4;h++)  {
                    x=i+dx[h];
                    y=j+dy[h];
                    if((x>=0)&&(x<n)&&(y>=0)&&(y<n))  s+=G[x][y][k];
                }
                s&=1;
                if(k!=n)  A[j][k]=s;
                else      b[j]=((grid[n-1][j]=='1')-s+2)&1;
            }
        }
        
        for(i=0;i<n;i++)  {
            p=i;
            while((p<n)&&(A[p][i]==0))  p++;
            if(p<n)  {
               // swap line i and line p
               for(j=0;j<n;j++)  {
                   temp=A[i][j];
                   A[i][j]=A[p][j];
                   A[p][j]=temp;
               }
               temp=b[i];
               b[i]=b[p];
               b[p]=temp;
               
               for(j=i+1;j<n;j++)  {
                   if(A[j][i])  {
                      for(k=i;k<n;k++)  A[j][k]=(A[j][k]+A[i][k])&1;
                      b[j]=(b[j]+b[i])&1;
                   }
              }
           }
       }
       for(i=n-1;i>=0;i--)  {
           s=b[i];
           for(j=n-1;j>i;j--)  s+=A[i][j]*S[j];
           S[i]=s&1;
       }
       
       ct=0;
       for(i=0;i<n;i++)  {
           toggle[0][i]=S[i];
           if(S[i])  px[ct]=0,py[ct]=i,ct++;
       }
       for(i=1;i<n;i++)  {
           for(j=0;j<n;j++)  {
               s=(grid[i-1][j]=='1');
                  for(h=0;h<4;h++)  {
                      x=i+dx[h];
                      y=j+dy[h];
                      if((x>=0)&&(x<n)&&(y>=0)&&(y<n))  s+=toggle[x][y];
                  }
               toggle[i][j]=s&1;
               if(toggle[i][j])  px[ct]=i,py[ct]=j,ct++;
          }
      }
      printf("%d\n",ct);
      for(i=0;i<ct;i++)  printf("%d %d\n",px[i]+1,py[i]+1);   
    }
    return 0;
}