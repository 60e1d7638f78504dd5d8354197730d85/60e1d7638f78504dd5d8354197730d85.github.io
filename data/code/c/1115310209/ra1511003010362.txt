#include <stdio.h>
 
#define gc getchar_unlocked
inline int getn(){
	int n = 0, c = gc();
	while(c < '0' || c > '9') c = gc();
	while(c >= '0' && c <= '9')
		n = (n<<3) + (n<<1) + c - '0', c = gc();
	return n;
}
 
#define MOD 2000000014
long long a[4][1001][4], b[4]={1,0,0,1}, c[4]={2,2,1,0};
void cpq(long long d[4], long long s[4]){
	d[0] = s[0], d[1] = s[1], d[2] = s[2], d[3] = s[3];
}
void mpq(long long d[4], long long a[4], long long b[4]){
	d[0] = (a[0]*b[0] + a[1]*b[2]) % MOD;
	d[1] = (a[0]*b[1] + a[1]*b[3]) % MOD;
	d[2] = (a[2]*b[0] + a[3]*b[2]) % MOD;
	d[3] = (a[2]*b[1] + a[3]*b[3]) % MOD;
}
int main(){
	int T = getn(),N, i,j, r;
	cpq(a[0][0], b);
	cpq(a[0][1], c);
	for(i = 0; i < 3; i++){
		for(j = 2; j < 1000; j++)
			mpq(a[i][j], a[i][j-1], a[i][1]);
		cpq(a[i+1][0], b);
		mpq(a[i+1][1], a[i][999], a[i][1]);
	}
	while(T--){
		N = getn();
		b[0] = 1, b[1] = 0, b[2] = 0, b[3] = 1;
		i = 0;
		while(N > 0){
			r = N % 1000;
			mpq(c, b, a[i][r]);
			cpq(b, c);
			N /= 1000;
			i++;
		}
		printf("%lld\n",b[0]/2);
	}
	return 0;
}
 