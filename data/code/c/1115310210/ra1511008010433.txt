#include <stdio.h>
#include <stdlib.h>
 
#define MAX_N 100000
 
#define READ_INT(_x)					\
  {							\
    int _tmp = 0;					\
    register int _ch = getchar_unlocked();		\
    while (_ch < 48)					\
      _ch = getchar_unlocked();				\
    while (48 <= _ch)					\
      {							\
	_tmp = (_tmp << 3) + (_tmp << 1) + _ch - 48;	\
	_ch = getchar_unlocked();			\
      }							\
    (_x) = _tmp;					\
  }							\
 
char _str[10];
#define WRITE_INT(_x)				\
  {						\
    register int _i = 0;			\
    int _tmp = (_x);				\
    do						\
      {						\
	*(_str + _i++) = _tmp % 10 + 48;	\
	_tmp /= 10;				\
      } while (_tmp != 0);			\
    for (_i--; _i >= 0; _i--)			\
      putchar_unlocked(*(_str + _i));		\
  }						\
 
int main(void)
{
  int *a, i, j, k, max, mid, n, t, x;
 
  a = malloc(MAX_N * sizeof *a);
  if (a == NULL)
    {
      perror("malloc");
      return 1;
    }
 
  READ_INT(t);
  while (t--)
    {
      READ_INT(n);
 
      READ_INT(max);
      *a = max;
      for (j = 0; --n > 0; )
	{
	  READ_INT(x);
	  if (x >= max)
	    *(a + ++j) = max = x;
	  else
	    {
	      for (i = 0, k = j, x++; i <= k; )
		if (*(a + (mid = i + ((k - i) >> 1))) > x)
		  k = mid - 1;
		else if (*(a + mid) < x)
		  i = mid + 1;
		else
		  {
		    for (k = mid; i < k; )
		      {
			mid = i + ((k - i) >> 1);
			if (*(a + mid) == x)
			  k = mid;
			else
			  i = mid + 1;
		      }
		    break;
		  }
	      if (i == j)
		max = *(a + i) = x - 1;
	      else
		*(a + i) = x - 1;
	    }
	}
 
      WRITE_INT(++j);
      for (i = 0; i < j; i++)
	{
	  putchar_unlocked(' ');
	  WRITE_INT(*(a + i));
	}
      putchar_unlocked('\n');
    }
 
  free(a);
  return 0;
}