#include<stdio.h>
#include<string.h>
 
int main()
{
   int T,len,j=0,p=0,q=0,i,max=0,max1,max2;
   char S[10000];
   int a[27],left[27],right[27];   
   int a1[10000],left1[10000],right1[10000];   
   scanf("%d",&T);
   while(T--)
   {
       j=0;p=0;q=0;max=0;max1=0;max2=0;      
       scanf("%s",S);
       len=strlen(S);
       /*for(i=0;i<len;i++)
       {
          if(S[i]=='#'){
          hash_index[c]=i;              
          c++;
          }             
       }*/
       memset(a,0,sizeof(a));
       memset(a1,0,sizeof(a1));
       memset(left,0,sizeof(left));
       memset(left1,0,sizeof(left1));
       memset(right,0,sizeof(right));
       memset(right1,0,sizeof(right1));
       for(i=0;i<len;i++)
       {
                       if(S[i]!='#')
                       {
                           a[S[i]-97]++;
                           if( a[S[i]-97]>a1[p])
                           a1[p]= a[S[i]-97];
                           
                           left[S[i]-97]++;
                           if(left[S[i]-97]>max1)
                           max1=left[S[i]-97];
                       }
                       else
                       {
                           left1[q]=max1;
                           p++;
         //                  printf("%d\n",p);
                           memset(a,0,sizeof(a));
                           q++;
                       }             
       }  
       for(i=len-1;i>=0;i--)
       {
            if(S[i]!='#')
            {
              right[S[i]-97]++;
              if(right[S[i]-97]>max2)
              max2=right[S[i]-97];           
            }      
            else
            {
                right1[j]=max2;
                j++;
            }        
       }
  //     printf("%d %d",c,p);
  
        for(i=0;i<p-2;i++)
        {
           // printf("%d   %d   %d   %d\n",left1[i],a1[i+1],a1[i+2],right1[j-3-i]);
            if(left1[i]==0 || a1[i+1]==0 || a1[i+2]==0 || right1[j-3-i]==0)
            continue;
            if(left1[i]+a1[i+1]+a1[i+2]+right1[j-3-i]+3>max)
            max=left1[i]+a1[i+1]+a1[i+2]+right1[j-3-i]+3;    
                          
        }
        printf("%d\n",max);
       }
       return 0;
}