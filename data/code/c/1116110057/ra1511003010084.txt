#include<stdio.h>
#include<string.h>
#define mod 1000000007
char stringg[100005];
long long int hash[26];
long long int hash2[26];
long long  fac[100005];
long long inverse[100005];
void cal(long long arr[])
{
	arr[0]=1;
	arr[1]=1;
	int i;
	for(i=2;i<=100003;i++)
	{
		arr[i]=arr[i-1]*i;
		if(arr[i]>=mod)
		arr[i]=arr[i]%mod;
	}
	inverse[0]=1;
	inverse[1]=1;
	for(i=2;i<100003;i++)
	{
		inverse[i]=((mod-mod/i)*inverse[mod%i])%mod;
		
	}
    for(i=2;i<100003;i++)
	{
		inverse[i]=(inverse[i-1]*inverse[i])%mod;
		
	}
}
long long int find_four(long long int hash[] )
{
	long long int ans=0;
//	int jj=-1;
//	long long tt[26];
	int i,j,l,k;
	/*for(i=0;i<26;i++)
	{
		if(hash[i]!=0)
		{
			tt[++jj]=hash[i];
		}
	}*/
	//int n=jj;
for(i=0;i<26;i++)
{
	if(hash[i]==0)
	continue;
    for(j=i+1;j<26;j++)
	{
	if(hash[j]==0)
	continue;
		for( k=j+1;k<26;k++)
		{
				if(hash[k]==0)
	             continue;
			for(l=k+1;l<26;l++)
			{
					if(hash[l]==0)
	                continue;
	                ans+=(3*hash[i]*hash[j]*hash[k]*hash[l]);
	                ans=ans%mod;
				
			}
		}
	}	
}	
for(i=0;i<26;i++)
{
		if(hash[i]==0)
	continue;
	for(j=0;j<26;j++)
	{   	if(hash[j]==0||j==i)
	         continue;
		for( k=j+1;k<26;k++)
		{
				if(hash[k]==0||k==i)
	            continue;
			    ans+=(hash[i]*(hash[i]-1)*hash[k]*hash[j]);
	            ans=ans%mod;
		}
	}
}
for(i=0;i<26;i++)
{
	if(hash[i]==0)
	continue;
	for(j=i+1;j<26;j++)
	{   	if(hash[j]==0)
	         continue;
			    ans+=((hash[i]*(hash[i]-1)*hash[j]*(hash[j]-1))/4);
	            ans=ans%mod;
	
	}
}
 
 
return ans;
 
}
int main()
{
	
	long long TWO,THREE,SUM;
	int length;
	int t;
	scanf("%d",&t);
	cal(fac);
	while(t--){
	scanf("%s",stringg);
	int i,k;
	length=strlen(stringg);
	memset(hash,0,26*sizeof(long long));
	memset(hash2,0,26*sizeof(long long));
	for(i=0;i<length;i++)
	{
		hash[stringg[i]-'a']++;
	}
	//vector <int> a;
	for(i=0;i<26;i++)
	{
		if(hash[i]!=0)
		{
		hash2[i]=length-hash[i];
		length-=hash[i];
		//
		hash2[i]=hash2[i]*hash[i];
	    }
	}
		TWO=0;
		for( i=0;i<26;i++)
		{
			if(hash2[i]>0){
			
			TWO+=hash2[i];
			TWO=TWO%mod;
		    }
		}
		THREE=0;
		TWO=TWO%mod;
		SUM=TWO;
		
		for(i=0;i<26;i++)
		{
			if(hash2[i]>0){
			
			THREE+=((SUM-hash2[i])*hash[i]);
			SUM=SUM-hash2[i];
			if(SUM<0)
			SUM+=mod;
			THREE=THREE%mod;
		     }
			
		}
		THREE*=2;
			THREE=THREE%mod;
		
		
		int FOUR=find_four(hash);
		long long int total=0,sub=0;
		
		total=fac[strlen(stringg)];
		for(k=0;k<26;k++)
		{
			total=total*inverse[hash[k]];
			total=total%mod;
		}
		
		sub=total-1;
		sub-=TWO;
		sub=sub+mod;
		sub=sub%mod;
		sub-=THREE;
		sub=sub+mod;
		sub=sub%mod;
		sub-=FOUR;
		sub=sub+mod;
		sub=sub%mod;
		total*=sub;
		total=total%mod;
		printf("%lld\n",total);
	
	}
	return 0;
} 