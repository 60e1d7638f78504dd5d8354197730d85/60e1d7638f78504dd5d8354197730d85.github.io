#include <stdio.h>
#include <string.h>
 
int fast(long long int,long long int,long long int);
int inverse(int,int);
 
 
int inverse(int n,int M)
{
    return fast(n,M-2,M);
}
int fast(long long base, long long n,long long M)
{
    if(n==0)
       return 1;
    if(n==1)
    return base;
    long long h=fast(base,n/2,M);
    if(n%2==0)
        return ( h * h ) % M;
    else
        return ( ( ( h * h ) % M ) * base ) % M;
}
 
int main(void)
{
    long long fact[100001],sub[100001];
    fact[0]=1;sub[0]=0;
    int i=1,t,n;
    int MOD=1000000007;
    while(i<=100000)
    {
        fact[i]=(fact[i-1]*i)%MOD;
        sub[i]=(sub[i-1]+i)%MOD;
        
        i++;
    }
    scanf("%d",&t);
    while(t--)
    {   
        long long mai=0,sub1[100001]={0};sub1[0]=0;
        int alpha[26]={0},val,flag=0;
        char str[100001];
        scanf("%s",str);
       n=strlen(str);
        if(n>3){
        for(i=0;i<n;i++)
        {
           mai=(mai+(sub[i]*(i+1))%MOD)%MOD;
            val=(int)str[i]-97;
            alpha[val]++;
            if(alpha[val]>=n-1){
                flag=1;
                break;
            }
            
        }
         if(flag==1)
         {
             printf("0\n");
             
             continue;
         }
        long long num,den,inv_den,ans=0,s=0,cntr=0,final=0,minus=0,hold=0,j;
        num=fact[n];
        den=1;
            
        sub1[1]=sub[n-1];
    for(i=0;i<26;i++)
        {
        den=(den*fact[alpha[i]])%MOD;
        minus=(minus+sub[alpha[i]])%MOD;
        
        if(alpha[i]!=0){
            if(sub1[alpha[i]]==0){
                for(j=alpha[i]+1;j<n;j++)
                {
                  sub1[alpha[i]]=(sub1[alpha[i]]+(j*(sub[j-1]-sub[alpha[i]-1]))%MOD)%MOD;  
                }
                sub1[alpha[i]]=((mai-sub1[alpha[i]])%MOD-(sub1[1]*(n-alpha[i]))%MOD+MOD)%MOD;
            }
            
             hold=(hold+(sub1[alpha[i]])%MOD)%MOD;
        }
        
        }
        inv_den=inverse(den,MOD);
        ans=(num*inv_den)%MOD;
        cntr=sub[n]-minus;
        s=mai-hold+cntr+1;
        final=ans*(ans-s)%MOD;
        
        printf("%lld\n",final);
      }
        else
         printf("0\n");
    }
    return 0;
} 