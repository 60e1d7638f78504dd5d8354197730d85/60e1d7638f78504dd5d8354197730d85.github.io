#include <stdio.h>
#include<string.h>
#define M 1000000007

long u,v;
long long int fast_pow(long long base,long long n){
  if(n==0)
     return 1;
  if(n==1)
    return base;
  long long halfn=fast_pow(base,n/2);
  if(n%2==0)
    return (halfn*halfn)%M;
  else
    return ( ( (halfn*halfn)%M)*base)%M;
}
long long int fact(long long a){
  int i;
  long long int y=1;
  for(i=1;i<=a;i++)
    y=((y%M)*(i))%M;
  return y;
}


int main()
{
  char a[100001];
  int t;
  scanf("%d",&t);while(t--){
    int i,j,k,x;
    scanf("%s",a);
    int l=strlen(a);
    if(l==1||l==2||l==3){printf("0\n");continue;}
    long long c[26];
    for(i=0;i<26;i++){
      c[i]=0;}
    for(i=0;i<l;i++){
      c[a[i]-'a']++;
    }
    
    long long int remi=1;
    for(i=0;i<26;i++){
      if(c[i]>=2){remi=(remi*fact(c[i]))%M;}}
    long long int u=fast_pow(remi,M-2);
    long long int p=(fact(l)*u)%M;
    long long int total=(p*p)%M;
    long long int similar=1;
    
    
    for(i=0;i<25;i++){
      for(j=i+1;j<26;j++){
        similar=((similar%M)+((c[i]*c[j]))%M)%M;
      }}
    
    for(i=0;i<24;i++){
      for(j=i+1;j<25;j++){
        for(k=j+1;k<26;k++){
          similar=(similar%M+(2*((c[i]%M)*(c[j]%M)*(c[k]%M)))%M)%M;
        }}}
    for(i=0;i<23;i++){
      for(j=i+1;j<24;j++){
        for(k=j+1;k<25;k++){
          for(x=k+1;x<26;x++){similar=(similar%M+(3*((c[x]%M)*(c[i]%M)*(c[j]%M)*(c[k]%M)))%M)%M;
                             }}}}
    for(i=0;i<26;i++){
      for(j=0;j<25;j++){
        if(j==i){continue;}
        for(k=j+1;k<26;k++){if(k==i){continue;}similar=(similar%M+(c[i]%M)*((c[i]-1)%M)*(c[j]%M)*(c[k]%M))%M;
                           }}}
    for(i=0;i<25;i++){
      for(j=i+1;j<26;j++){
        similar=(similar%M+(((c[i]*(c[i]-1)/2)%M)*((c[j]*(c[j]-1)/2)%M))%M)%M;}}
    similar=(similar*p)%M;
    long long unsimilar=(total-similar+M)%M;
    printf("%lld\n",unsimilar);
  }
  
  
  

	return 0;
}