    #include <stdio.h>
    #include <string.h>
    #define mod 1000000007
    #define MOD 1000000007 
    long long int fact[100001]={0};
     
   
    long long int power(long long int n, long long int exp)
    {
    	if(exp==0 || n==1)
    		return 1;
    	if(exp & 1)
    	{
    		long long int temp = power(n, exp>>1);
    		return (  (temp * temp) % mod  * n  ) % mod;
    	}
    	else
    	{
    		long long int temp = power(n, exp>>1);
    		return (temp * temp) % mod;
    	}
    }
     
    long long int ncr(long long int n, long long int r)
    {
    	if(n==r || r==0)
    		return 1;
    	if(n<r)
    		return 0;
    	long long int num=1,den=1;
    	long long int j=r;
    	while(j--)
    	{
    			num=(num*n)%mod;
    			n--;
    	}
    	den=power(fact[r],mod-2);
    	return (num*den)%mod;
    }
     
     
    int main()
    {
    	char str[100005];
    	int t;
    	fact[0]=1,fact[1]=1;
    	int i=2;
    	while(i<100001)
    	{
    		fact[i]=(fact[i-1]*i)%mod;
    		i++;
    	}
    	scanf("%d", &t);
    	while(t--)
    	{
    		long long int  len, i, j, k, l;
    		long long int count[26]={0},nc2[26], ans=0, div=1, temp, temp1, perms;
    		scanf("%s", str);
    		len=strlen(str);
    		for(i=0;i<len;i++)
    			count[str[i]-97]++;
    			
    		
    		for(i=0;i<26;i++)
    			nc2[i]=ncr(count[i],2);
    		
    		
    		for(i=0;i<26;i++)
    			if(count[i]>1)
    				div=(div * fact[count[i]] ) % mod;
    		
    		div=power(div, 1000000005);	
    		perms=(fact[len]*div)%mod;

    		ans+=1;
    	
    		temp=0;
    		for(i=0;i<26;i++)
    		{
    			for(j=i+1;j<26;j++)
    				temp = (temp + (count[i]*count[j]) % mod) % mod;
    		}
    		ans=(ans+temp)%mod;
    		
    		temp=0;
    		for(i=0;i<26;i++)
    			for(j=i+1;j<26;j++)
    				for(k=j+1;k<26;k++)
    					temp=(temp  + ( ((count[i]*count[j])%mod) * count[k]) %mod  )%mod;
    					
    		temp=(temp*2)%mod;
    			ans=(ans+temp)%mod;
    		temp=0;
    		temp1=power(2,1000000005);
    		for(i=0;i<26;i++)
    			for(j=i+1;j<26;j++)
    			{
    					{
    					temp=(temp + (nc2[i]*nc2[j])%mod) %mod;
    				}
    			}
    		ans=(ans+temp)%mod;
    		temp=0;
    		for(i=0;i<26;i++)
    			for(j=0;j<26;j++)
    				for(k=j+1;k<26;k++)
    					if( 1 && i!=j  && i!=k)
    							temp=(temp+(count[i]*(count[i]-1)%mod*(count[j]*count[k])%mod)%mod)%mod;
    						
    		ans=(ans+temp)%mod;
    		
    			temp=0;
    		for(i=0;i<26;i++)
    			for(j=i+1;j<26;j++)
    				for(k=j+1;k<26;k++)
    					for(l=k+1;l<26;l++)
    						temp=(temp + (((((count[i]*count[j])%mod)*count[k])%mod)*count[l]%mod)          )%mod;
    						    		temp=(temp*3)%mod;
    		ans=(ans+temp)%mod;
    		
    		ans=(ans*perms)%mod;
    		printf("%lld\n",((power(perms,2)-ans+mod)%mod));
    	}
    	return 0;
    } 