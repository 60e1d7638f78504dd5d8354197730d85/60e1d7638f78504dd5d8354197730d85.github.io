#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#include<malloc.h>
#define lld long long int
#define llu long long unsigned int
int compare(const void * a, const void * b){return *(lld *)a-*(lld *)b;}
long long int readint() {long long int n=0,count=0,counti=0; char c;while(1){c=getchar_unlocked();if(c=='-')count=1;else if((c==' '||c=='\n'||c==EOF) && counti==1)break;else if(c>='0' && c<='9'){counti=1;n=(n<<3)+(n<<1)+c-'0';}}if(count==0)return n;else return -n;}
#define min(a,b)(a>b?b:a)
#define max(a,b)(a<b?b:a)
#define sort(arr,n) qsort(arr,n,sizeof(arr[0]),compare)
#define sd(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define su(n) scanf("%llu",&n)
#define rep(i,start,end) for(i=start; i<end; i++)
#define pdn(n) printf("%d\n",n)
#define pln(n) printf("%lld\n",n)
#define pun(n) printf("%llu\n",n)
#define pd(n) printf("%d",n)
#define pl(n) printf("%lld",n)
#define pu(n) printf("%llu",n)
#define pn printf("\n")
#define ps printf(" ")
int main()
{
    int t,i,j;
    sd(t);
    getchar();
    char str[10001];
    int arr[10001][26],l,ar[10001];
    while(t--)
    {
        scanf("%s",str);
        l=0;
        int len=strlen(str),count=0;
        memset(arr, 0, sizeof(arr[0][0]) * len * 26);
        if(len>=7)
        {
            if(str[0]!='#')arr[0][str[0]-'a']++;
            for(i=1; i<len; i++)
            {
                for(j=0; j<26; j++)
                    arr[i][j]=arr[i-1][j];
                if(str[i]!='#')
                    arr[i][str[i]-'a']++;
                else
                    ar[l++]=i;
            }
            if(l>=3)
            {
                int max=-1;
                for(i=0; i<=l-3; i++)
                {
                    int m1=-1,m2=-1,m3=-1,m4=-1;
                    for(j=0; j<26; j++)
                        if(arr[ar[i]][j]>m1)m1=arr[ar[i]][j];
                    for(j=0; j<26; j++)
                        if((arr[len-1][j]-arr[ar[i+2]][j])>m4)m4=(arr[len-1][j]-arr[ar[i+2]][j]);
                    for(j=0; j<26; j++)
                        if((arr[ar[i+1]][j]-arr[ar[i]][j])>m2)m2=(arr[ar[i+1]][j]-arr[ar[i]][j]);
                    for(j=0; j<26; j++)
                        if((arr[ar[i+2]][j]-arr[ar[i+1]][j])>m3)m3=(arr[ar[i+2]][j]-arr[ar[i+1]][j]);
                    if(m1+m2+m3+m4>max && m1*m2*m3*m4!=0)
                        max=m1+m2+m3+m4;
                }
                if(max==-1)printf("0\n");
                else pdn(max+3);
            }
            else
                printf("0\n");
        }
        else
            printf("0\n");
    }
    return 0;
}