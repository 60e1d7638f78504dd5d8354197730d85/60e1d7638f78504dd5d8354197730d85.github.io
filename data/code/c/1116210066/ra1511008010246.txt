#include <stdio.h>
#include <string.h>
double prob[26][26],ar[26][26],mul[26][26];
void multi(int x )
{
    long long int i , j , k ;
    double s=0.0;
    
	if(x==1)
    {for ( i = 0 ; i < 26; i++ )
        {
            for ( j = 0 ; j < 26 ; j++ )
            {
                for ( k = 0 ; k < 26 ; k++ )
                {
                    s = ( s +   (double ) (ar[i][k]*ar[k][j] )   ) ;
                }
    
                mul[i][j] = s ;
                s = 0;
            }
        }}
       else
       	{for ( i = 0 ; i < 26; i++ )
        {
            for ( j = 0 ; j < 26 ; j++ )
            {
                for ( k = 0 ; k < 26 ; k++ )
                {
                    s = ( s +   (double ) (ar[i][k]*prob[k][j] )   ) ;
                }
    
                mul[i][j] = s ;
                s = 0;
            }
        }}
    
    for( i = 0 ; i < 26 ; i++)
        for( j = 0 ; j < 26 ; j++)
            ar[i][j] = mul[i][j];
     
}
 
void powmat(long long int n)
{
	
    if( n == 0 || n==1)
        return;
    
    if( n % 2 ==0 )
    {
        powmat( n/2);
        multi(1);
    }
    else  if (n%2 != 0)
    {
        powmat(n - 1);
        multi( 2);   
    }
 
}
int map[26][26][26];
int main()
{
	long long int k;
	int t,n,i,j,m,len;
	char str[4],st2[4];
	scanf("%d",&t);
	double ans;
	while(t--)
	{
		ans=0.0;
		scanf("%d %lld",&n,&k);
		scanf("%s",str);
		for (i = 0; i < 26; i++)
			{for (j = 0; j < 26; j++)
				{			scanf("%lf",&prob[i][j]);
							ar[i][j]=prob[i][j];
							for (m = 0; m < 26; m++)
								map[i][j][m]=0;
				}
			}
		
		powmat(k);
		len=strlen(str);
		for (i = 0; i < n; i++)
			{
				scanf("%s",st2);
				if (len==strlen(st2))
				{
					if(len==1)
						{
							if(map[st2[0]-'a'][0][0]==0)
							{
								ans=ans+ar[str[0]-'a'][st2[0]-'a'];
							}
							map[st2[0]-'a'][0][0]=1;
						}
					else if(len==2)
						{
							if(map[st2[0]-'a'][st2[1]-'a'][0]==0)
							{
								ans=ans+ar[str[0]-'a'][st2[0]-'a']*ar[str[1]-'a'][st2[1]-'a'];
							}
							map[st2[0]-'a'][st2[1]-'a'][0]=1;
						}
					else 
						{
							if(map[st2[0]-'a'][st2[1]-'a'][st2[2]-'a']==0)
							{
								ans=ans+ar[str[0]-'a'][st2[0]-'a']*ar[str[1]-'a'][st2[1]-'a']*ar[str[2]-'a'][st2[2]-'a'];
							}
							map[st2[0]-'a'][st2[1]-'a'][st2[2]-'a']=1;
						}
				}
				
			}
		printf("%lf\n",ans );	
	}	
	return 0;
}			 