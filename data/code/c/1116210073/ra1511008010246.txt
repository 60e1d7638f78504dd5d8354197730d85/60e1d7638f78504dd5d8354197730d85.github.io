#include<stdio.h>
#define MAX 40
long long potMat[MAX+1][MAX];
long long minTab[MAX+1]={0, 3, 4, 15, 21, 48, 69, 255, 324, 819, 1041, 3840, 5393, 12339, 17732,
							65535, 83269, 208944, 267541, 986895, 1377284, 3146499, 4522241,
							16711680, 21233921, 53674755, 68224004, 251662095, 353441045,
							808661040, 1162102085, 4294967295LL, 5457069380LL, 13693562931LL,
							17533310225LL, 64676171520LL, 90262537233LL, 206212105011LL, 296373977412LL,
							1095233372415LL, 1391573925957LL};
 
int daj(long long a){
    a^=a>>32;
    a^=a>>16;
    a^=a>>8;
    a^=a>>4;
    a^=a>>2;
    a^=a>>1;
    return (int)(a&1);
}
void mnozi(long long *a, long long *b, long long *c, int n){
    long long d[n];
    int i,j;
 
    for(i=0;i<n;i++)
        d[i]=0;
 
    for(i=0;i<n;i++)
        for(j=0;j<n;j++)
            if (daj(a[i]&b[j]))
                d[i]|=1LL<<j;
 
    for(i=0;i<n;i++)
        c[i]=d[i];
}
void pribroji(long long *a, long long *b, int n){
    while(n--)
        a[n]^=b[n];
}
void genMat(long long *a, int n){
    int i;
    if (n==1){
        a[0]=1;
        return;
    }
    a[0]=3;
    for(i=1;i<n-1;i++)
        a[i]=7LL<<i-1;
    a[i]=3LL<<n-2;
}
void genId(long long *a, int n){
    while(n--)
        a[n]=1LL<<n;
}
long long minPol(long long *a, int n){
    long long pot2[n+1][n];
    long long min[n+1];
    int i,j,k;
 
    genId(pot2[0],n);
    min[0]=1;
    for(i=1;i<=n;i++)    {
        mnozi(pot2[i-1],a,pot2[i],n);
        min[i]=1LL<<i;
    }
    for(i=0;i<n;i++){
        long long zadnji;
        for(j=0;j<n;j++)
            if (pot2[i][j])
                break;
 
        if (j==n)
            continue;
 
        zadnji=pot2[i][j] & -pot2[i][j];
 
        for(k=i+1;k<=n;k++)
            if (pot2[k][j] & zadnji){
                min[k]^=min[i];
                pribroji(pot2[k],pot2[i],n);
            }
    }
    return min[n];
}
 
long long bit;
long long mod;
 
long long mnoziPol(long long a, long long b){
    long long temp=0;
    while(b){
        if (b & 1)
            temp^=a;
        b>>=1;
 
        a<<=1;
        if (a & bit)
            a^=mod;
    }
    return temp;
}
long long ps[34],qs[34];
void genPotPol(int m){
    int i;
    ps[0]=1;qs[0]=0;
    for(i=1;m;i++,m>>=1){
        ps[i]=mnoziPol(ps[i-1],ps[i-1]);
        qs[i]=ps[i]^mnoziPol(qs[i-1],qs[i-1]);
        ps[i]<<=1;
        if (ps[i] & bit)
            ps[i]^=mod;
    }
}
long long pot(int k){
    long long pt,qt;
    int i;
    pt=0;qt=1;
    k++;
    i=0;
    while(k){
        if (k&1){
            long long p1,p2,p3;
            p1=mnoziPol(ps[i],pt);
            p2=mnoziPol(qs[i],qt);
            p3=mnoziPol(ps[i]^qs[i],pt^qt);
            qt=p1^p2;
            pt=p3^qt^(p1<<1);
            if (pt & bit) pt^=mod;
        }
        i++;
        k>>=1;
    }
    return pt;
}
int sustav(long long p, long long b, int n){
    int i,j,k;
    long long zadnji;
    long long a[n];
    for(i=0;i<n;i++)
        a[i]=0;
 
    for(i=0;i<n;i++){
        if (p&1)
            for(j=0;j<n;j++)
                a[j]^=potMat[i][j];
 
        p>>=1;
    }
    for(i=0;i<n;i++){
        if (b&1)
            a[i]|=bit;
        b>>=1;
    }
    for(i=0;i<n;i++){
        if (!a[i])
        	continue;
        if (a[i]==1LL<<n)
            return 0;
        zadnji=a[i]&-a[i];
        for(j=i+1;j<n;j++)
            if (a[j] & zadnji)
                a[j]^=a[i];
    }
    return(1);
}
long long djel(long long p, int v){
    int i;
    long long temp=0;
    for(i=0;p;i++){
        if (p&1)
            temp^=potMat[i][v];
        p>>=1;
    }
    return(temp);
}
int reg(long long p, int n){
    long long temp[n],zadnji;
    int i,j;
    for(i=0;i<n;i++)
        temp[i]=0;
    for(i=0;i<n;i++){
        if (p&1)
            for(j=0;j<n;j++)
                temp[j]^=potMat[i][j];
        p>>=1;
    }
    for(i=0;i<n;i++){
        if (!temp[i])
            return 0;
        zadnji=temp[i] & -temp[i];
        for(j=i+1;j<n;j++)
            if (temp[j] & zadnji)
                temp[j]^=temp[i];
    }
    return(1);
}
int main(){
    int t;
    scanf("%d",&t);
    while(t--){
        int n,m,k,i,z;
        long long v,blok;
        int x[10000],y[10000];
        scanf("%d %d %d\n",&n,&m,&k);
        if (m<n){
            int z=m;m=n;n=z;
            for(i=0;i<k;i++)
                scanf("%d %d",y+i,x+i);
        }
        else
            for(i=0;i<k;i++)
                scanf("%d %d",x+i,y+i);
 
        if(n==1){
            int jedan=0;
            int prvi;
            prvi=m%3?0:1;
            for(i=0;i<k;i++)
                if ((y[i]-1)%3==prvi)
                    jedan^=1;
            if (jedan==(m&1)){
                printf("NO\n");
                continue;
            }
        }
        genId(potMat[0],n);
        genMat(potMat[1],n);
        for(i=2;i<n;i++)
            mnozi(potMat[i-1],potMat[1],potMat[i],n);
        mod=minTab[n];
        bit=1LL<<n;
        genPotPol(m);
        blok=pot(m);
        if (reg(blok,n)){
            printf("YES\n");
            continue;
        }
        v=0;
        for(i=0;i<k;i++)
            v^=djel(pot(y[i]-1),x[i]-1);
        if (sustav(blok,v,n))
            printf("YES\n");
        else
            printf("NO\n");
    }
    return(0);
}  