#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<string.h>
#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
 
#define ll long long
 
void unionInit(int d[],int s){int i;rep(i,s)d[i]=i;}
int unionGet(int d[],int n){int t=n,k;while(d[t]!=t)t=d[t];while(d[n]!=n)k=d[n],d[n]=t,n=k;return n;}
int unionConnect(int d[],int a,int b){a=unionGet(d,a);b=unionGet(d,b);if(a==b)return 0;d[a]=b;return 1;}
 
void intIntIntSort(int d[],int m1[],int m2[],int s){int i=-1,j=s,k,t;if(s<=1)return;k=(d[0]+d[s-1])/2;for(;;){while(d[++i]<k);while(d[--j]>k);if(i>=j)break;t=d[i];d[i]=d[j];d[j]=t;t=m1[i];m1[i]=m1[j];m1[j]=t;t=m2[i];m2[i]=m2[j];m2[j]=t;}intIntIntSort(d,m1,m2,i);intIntIntSort(d+j+1,m1+j+1,m2+j+1,s-j-1);}
 
int a[410000], b[410000], z[410000];
char kinds[110000];
int ind[110000];
 
int main(){
  int i,j,k,l;
  int T;
  int N, M;
  ll res;
  
  scanf("%d",&T);
  while(T--){
    scanf("%d%d%s",&N,&M,kinds);
    rep(i,M) scanf("%d%d%d",a+i,b+i,z+i), a[i]--, b[i]--;
    intIntIntSort(z,a,b,M);
    
    unionInit(ind, N);
 
    res = 0;
    rep(i,N) if(kinds[i]=='R') break;
    REP(j,i+1,N) if(kinds[j]=='R') unionConnect(ind, i, j);
 
    rep(i,M){
      if(z[i] <= 0 || unionGet(ind,a[i]) != unionGet(ind,b[i])
        ){
        res += z[i];
        unionConnect(ind, a[i], b[i]);
      }
    }
    
    printf("%lld\n",res);
  }
  
  return 0;
} 