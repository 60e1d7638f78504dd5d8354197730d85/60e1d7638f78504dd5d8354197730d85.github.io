#include <stdio.h>
#include <math.h>
void qsort(int* d, int l, int r) {
	int ll, rr, p, a;
	if (r > l) {
		ll = l;
		rr = r;
		p = d[(rr + ll) >> 1];
		while (ll <= rr) {
			while (ll < r && d[ll] < p)
				++ll;
			while (rr > l && d[rr] > p)
				--rr;
			if (ll <= rr) {
				a = d[ll];
				d[ll] = d[rr];
				d[rr] = a;
				++ll;
				--rr;
			}
		}
		if (l < rr)
			qsort(d, l, rr);
		if (ll < r)
			qsort(d, ll, r);
	}
}
int d[20];
int b[20];
int main() {
	int t, n, m, i, j, k, f, dd, sum, bsum;
	scanf("%d", &t);
	do {
		scanf("%d %d", &n, &m);
		sum = 0;
		for (i = 0; i < n; ++i) {
			scanf("%d", &dd);
			if (dd < m) {
				d[i] = dd;
				sum += dd;
			} else if (dd > m) {
				--i;
				--n;
			} else {
				for (j = i + 1; j < n; ++j)
					scanf("%d", &dd);
				sum = m;
				break;
			}
		}
 
		if (m==0 || n == 0 || sum < m) {
			printf("No\n");
			continue;
		}
		if (sum == m) {
			printf("Yes\n");
			continue;
		}
 
		qsort(d, 0, n - 1);
 
		if (sum - m < m) {
			m = sum - m;
			i = n - 1;
			while (i >= 0 && d[i] > m) {
				sum -= d[i];
				--i;
				--n;
			}
			if (sum == m || d[n - 1] == m) {
				printf("Yes\n");
				continue;
			}
			if (n == 0 || sum < m) {
				printf("No\n");
				continue;
			}
		}
 
		f = 0;
		for (i = n - 1; i > 0; --i) {
			k = i - 1;
			bsum = d[i];
			b[0] = d[i];
			j = 0;
			sum -= d[i];
			if (sum == m) {
				f = 1;
				break;
			}
			while (k >= 0) {
				while (k >= 0) {
					bsum += d[k];
					if (bsum == m) {
						f = 1;
						break;
					} else if (bsum < m) {
						b[++j] = k;
						--k;
					} else {
						bsum -= d[k];
						--k;
					}
				}
				if (f) break;
				if (j < 1) break;
				bsum -= d[b[j]];
				k = b[j] - 1;
				--j;
			}
			if (f) break;
			if (sum < m) break;
		}
 
		if (f) printf("Yes\n");
		else printf("No\n");
	} while (--t);
	return 0;
} 
