#include <stdio.h>
void quicksort(int,int);
long long b[500502];
int main(void) {
	int n,k,i,h,l,j,a[100000],m,z,c;
	scanf("%d %d",&n,&k);
	for(i=0;i<500502;i++)
	b[i]=0;
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);
	}
	for(i=0;i<n;i++)
	{
		b[i]=a[i];
	}
	j=2;z=0;
	for(i=0;i<n-1;i++)
	{
		for(l=0;l<n-1-i;l++)
		{
		m=l;
		for(h=0;h<j;h++)
		{
		b[z+n]=b[z+n]+a[m];
		m=m+1;
		}
		z++;
		}
		j++;
		
		if((n+z)>500501)
		{
			quicksort(0,n+z-1);
			b[0]=b[n+z-1];
			for(c=1;c<=n+z-1;c++)
			{
				b[c]=0;
			}
			z=1;
			n=0;
		}
	}
	quicksort(0,n+z-1);
	for(i=n+z-1;i>=0 && k>0;k--,i--)
	{
		printf("%lld ",b[i]);
	}
	return 0;
}
 void quicksort(int first,int last){
    int pivot,j,temp,i;
     if(first<last){
         pivot=first;
         i=first;
         j=last;
 
         while(i<j){
             while(b[i]<=b[pivot]&&i<last)
                 i++;
             while(b[j]>b[pivot])
                 j--;
             if(i<j){
                 temp=b[i];
                  b[i]=b[j];
                  b[j]=temp;
             }
         }
 
         temp=b[pivot];
         b[pivot]=b[j];
         b[j]=temp;
         quicksort(first,j-1);
         quicksort(j+1,last);
 
    }
 }