#include <stdio.h>
void output(int n,int m,int x,int y,int l,char *move)
{
  char grid[1000][1000],temp;
  int i,j,r,c,tr,tc,count=0,tk=0;
  for(i=0;i<=m-1;i++)
    for(j=0;j<=n-1;j++)
      grid[i][j]='-';
  r=m-y;
  c=x-1;
  tr=r;
  tc=c;
  grid[r][c]='S';
  for(i=0;i<=l-2;i++)
  {
    if(move[i]=='U')
      grid[--r][c]='S';
    else if(move[i]=='D')
      grid[++r][c]='S';
    else if(move[i]=='R')
      grid[r][++c]='S';
    else if(move[i]=='L')
      grid[r][--c]='S';
  }
  temp=move[i-1];
  l--;
  if(temp=='U')
  {
    while(1)
    {
      if(tk==1000095)
        tk=0;
      if(move[tk]=='U')
        grid[tr--][tc]='-';
      else if(move[tk]=='D')
        grid[tr++][tc]='-';
      else if(move[tk]=='R')
        grid[tr][tc++]='-';
      else if(move[tk]=='L')
        grid[tr][tc--]='-';
      tk++;
      if(r==0)
      {
        printf("WALL %d\n",count);
        break;
      }
      else if(grid[r-1][c]=='S')
      {
        printf("BODY %d\n",count);
        break;
      }
      else
      {
        grid[--r][c]='S';
        count++;
        if(l==1000095)
          l=0;
        move[l++]='U';
      }
    }
  }
  else if(temp=='D')
  {
    while(1)
    {
      if(tk==1000095)
        tk=0;
      if(move[tk]=='U')
        grid[tr--][tc]='-';
      else if(move[tk]=='D')
        grid[tr++][tc]='-';
      else if(move[tk]=='R')
        grid[tr][tc++]='-';
      else if(move[tk]=='L')
        grid[tr][tc--]='-';
      tk++;
      if(r==m-1)
      {
       printf("WALL %d\n",count);
        break;
      }
      else if(grid[r+1][c]=='S')
      {
        printf("BODY %d\n",count);
        break;
      }
      else
      {
        grid[++r][c]='S';
        count++;
        if(l==1000095)
          l=0;
        move[l++]='D';
        
      }
    }
  }
  else if(temp=='R')
  {
    while(1)
    {
      if(tk==1000095)
        tk=0;
      if(move[tk]=='U')
        grid[tr--][tc]='-';
      else if(move[tk]=='D')
        grid[tr++][tc]='-';
      else if(move[tk]=='R')
        grid[tr][tc++]='-';
      else if(move[tk]=='L')
        grid[tr][tc--]='-';
      tk++;
      if(c==n-1)
      {
        printf("WALL %d\n",count);
        break;
      }
      else if(grid[r][c+1]=='S')
      {
        printf("BODY %d\n",count);
        break;
      }
      else
      {
        grid[r][++c]='S';
        count++;
        if(l==1000095)
          l=0;
        move[l++]='R';
      }
    }
  }
  else if(temp=='L')
  {
    while(1)
    {
      if(tk==1000095)
        tk=0;
      if(move[tk]=='U')
        grid[tr--][tc]='-';
      else if(move[tk]=='D')
        grid[tr++][tc]='-';
      else if(move[tk]=='R')
        grid[tr][tc++]='-';
      else if(move[tk]=='L')
        grid[tr][tc--]='-';
      tk++;
      if(c==0)
      {
        printf("WALL %d\n",count);
        break;
      }
      else if(grid[r][c-1]=='S')
      {
        printf("BODY %d\n",count);
        break;
      }
      else
      {
        grid[r][--c]='S';
        count++;
        if(l==1000095)
          l=0;
        move[l++]='L';
      }
    }
  }
}

int main()
{
  int t,n,m,x,y,l;
  int i;
  scanf("%d",&t);
  for(i=0;i<=t-1;i++)
  {
    char move[1000100];
    scanf("%d %d %d %d %d",&n,&m,&x,&y,&l);
    scanf("%s",move);
    output(n,m,x,y,l,move);
  }
	return 0;
}