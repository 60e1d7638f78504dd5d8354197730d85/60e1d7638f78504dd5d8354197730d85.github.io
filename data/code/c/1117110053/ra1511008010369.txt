#include<stdio.h>
#include<stdlib.h>
#include <stdbool.h>
 
int root(int a[],int i)
{
    while(a[i]!=i)
    {
        a[i]=a[a[i]];
        i= a[i];
    }
    return i;
}
 
void wunion(int a[],int size[],int x,int y)
{
    int rx= root(a,x);
    int ry= root(a,y);
    if(rx==ry)
        return ;
    if(size[rx]<size[ry])
    {
        a[rx]= a[ry];
        size[ry]+= size[rx];
        size[rx]=0;
    }
    else
    {
        a[ry]=a[rx];
        size[rx]+= size[ry];
        size[ry]=0;
    }
}
 
bool find(int a[],int x,int y)
{
    if(root(a,x)==root(a,y))
        return true;
    return false;
}
 
int main()
{
    int n,i;
    scanf("%d",&n);
    int a[n+1],size[n+1];
    for(i=1;i<=n;i++)
    {
        a[i]=i;
        size[i]=1;
    }
    int m1;
    scanf("%d",&m1);
    while(m1--)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        wunion(a,size,x,y);
    }
    int m2;
    scanf("%d",&m2);
    while(m2--)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        bool res=find(a,x,y);
        if(res== true)
        {
            size[root(a,x)]=0;
        }
    }
    int max=0;
    for(i=1;i<=n;i++)
    {
        if(size[i]>=1)
        {
            if(size[i]>max)
                max= size[i];
        }
    }
    printf("%d\n",max);
    return 0;
}