#include<stdio.h>
    struct acp{
    long int age;
    long int m;
    long int e;
    };
    long int daya(long int i,long int j,struct acp a[],struct acp b[]);
    int main()
    {
    long int i,j,k,r,N,M,t;
    char ch;
    struct acp a[100002];
    struct acp b[1002];
    a[0].age = a[0].m = a[0].e=0;
    scanf("%ld",&N);
    for(i=1;i<=N;i++){
            //take ages as input 
    scanf("%ld",&a[i].age);
    a[i].m=0;
    a[i].e=0;
    }
    for(i=1;i<=N-1;i++){
    scanf("%ld %ld %c",&j,&k,&ch);
    //establish the hierarchy
    if(ch=='M')
    a[j].m=k;
    else if(ch=='E')
    a[j].e=k;
    }
    scanf("%ld",&t);
    for(;t>0;t--){
    int c[1002]={0};
    r=0;
    b[0].age = b[0].m = b[0].e = 0;
    scanf("%ld",&M);
    for(i=1;i<=M;i++){
    scanf("%ld",&b[i].age);
    b[i].m=0;
    b[i].e=0;
    }
    for(i=1;i<M;i++){
    scanf("%ld %ld %c",&j,&k,&ch);
    if(ch=='M')
    b[j].m=k;
    else if(ch=='E')
    b[j].e=k;
    }
    for(i=1;i<=M;i++){
    c[b[i].m]++;
    c[b[i].e]++;
    }
    j=1;
    while(c[j]!=0)
    j++;
    for(i=1;i<=N;i++){
    if(a[i].age==b[j].age){
    r=daya(i,j,a,b);
    }
    if(r==1){
    printf("YES\n");
    break;
    }
    }
    if(i>N)
    printf("NO\n");
    }
    return 0;
    }
    long int daya(long int i, long int j,struct acp a[], struct acp b[]){
    long int r;
    if(a[a[i].m].age==b[b[j].m].age && a[i].m!=0){
    r=daya(a[i].m, b[j].m,a,b);
    if(r==-1)
    return(-1);
    }
    if(a[a[i].m].age!=b[b[j].m].age){
    return(-1);
    }
    if(a[a[i].e].age==b[b[j].e].age && a[i].e!=0){
    r=daya(a[i].e, b[j].e,a,b);
    if(r==-1)
    return(-1);
    }
    if(a[a[i].e].age!=b[b[j].e].age){
    return(-1);
    }
    if(a[a[i].m].age==0 && b[b[j].m].age==0)
    r=1;
    if(a[a[i].e].age==0 && b[b[j].e].age==0)
    r=1;
    return(r);
    } 
 
