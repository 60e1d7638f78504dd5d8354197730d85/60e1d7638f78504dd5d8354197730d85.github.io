#include <stdio.h>
#include <stdlib.h>
#define max(x,y) ((x) > (y) ? (x) : (y))
 
int* offers[20];
int* comptb;
int M, ans;
 
inline void scanint(int* x)
{
	register char c = getchar_unlocked();
	*x = 0;
	for(; (c<48)||(c>57);c = getchar_unlocked());
	for(; (c>47)&&(c<58);c = getchar_unlocked())
		*x = (int)((((*x)<<1) + ((*x)<<3)) + c - 48);
}
 
int fm(int ind, int curr)
{
	if(ind == M) return 0;
	int a = fm(ind+1,curr),b = 0;
	if(!(curr & comptb[ind]))
	{
		b = fm(ind+1,curr|(1<<ind));
		return max(a,1+b);
	}
 
	return a;
 
}	
int main()
{
	int N,K,i,j,x,k,max;
	scanint(&N);
	scanint(&M);
	
	comptb = (int*)malloc(sizeof(int)*20);
	for(i = 0; i < 20; ++i)
	{
		comptb[i] = 0;
		offers[i] = (int*)malloc(sizeof(int)*N);
		for(j = 0; j < N; ++j)
			offers[i][j] = 0;
	}
 
	for(i = 0; i < M; ++i)
	{
		scanint(&K);
		for(j = 0; j < K; ++j)
		{
			scanint(&x);
			offers[i][x-1] = 1;
		}
	}
 
	for(i = 0; i < M; ++i)
	{
		for(j = i+1; j < M; ++j)
		{
			for(k = N-1; k >= 0; --k)
			{
				if(offers[i][k] & offers[j][k])
				{
					comptb[i] |= (1<<j);
					comptb[j] |= (1<<i);
					break;
				}
			}
		}
	}
 
	ans = 0;
	max = fm(0,0);
	
 
	printf("%d\n", max);
	for(i = 0; i < 20; ++i)
		free(offers[i]);
	free(comptb);
	return 0;
}