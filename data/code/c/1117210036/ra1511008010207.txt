#include <stdio.h>
 
 
int l[50005],r[50005];
void merge(int a[],int low,int mid,int high){
	int i,temp,j=mid+1,k;
	for(i=low;i<=mid;i++)
		l[i-low]=a[i];
	for(i=mid+1;i<=high;i++)
		r[i-mid-1]=a[i];
	i=j=0;
	k=low;
	int l1=mid-low+1,r1=high-mid;
	while(i<l1 && j<r1){
		if(l[i]<=r[j]){
			a[k]=l[i];
			k++;
			i++;
		}
		else{
			a[k]=r[j];
			j++;
			k++;
		}
		
	}	
	while(i<l1){
		a[k]=l[i];
		i++;
		k++;
	}
	while(j<r1){
		a[k]=r[j];
		j++;
		k++;
	}
}
 
void mergesort(int a[],int low,int high)
{
	if(low<high){
		int mid=(high + low)>>1;
		mergesort(a,low,mid);
		mergesort(a,mid+1,high);
		merge(a,low,mid,high);
	}
}
 
int main(void) {
	// your code goes here
	int t,n,x,y,k,i,j,dif[100005],sum;
	
    scanf("%d%d%d",&n,&x,&y);
    sum=0;
    y=n-y;
    for(i=0;i<n;i++){
        scanf("%d",dif+i);
    }
    for(i=0;i<n;i++){
        scanf("%d",&k);
        sum+=k;
        dif[i]-=k;
    }
    mergesort(dif,0,n-1);
    
    for(i=0;i<y;i++){
        sum+=dif[n-i-1];
    }
    for(;i<x;i++){
        if(dif[n-i-1]<=0){
            break;
        }
        sum+=dif[n-i-1];
    }
    printf("%d\n",sum);
    
	
	return 0;
}
 