#include <stdio.h>
#include <stdlib.h>
 
#define lim 100005
 
 
void merge(long arr[], long l, long m, long r)
{
    long i, j, k;
    long n1 = m - l + 1;
    long n2 =  r - m;
 
    long L[n1], R[n2];
 
    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1+ j];
 
    i = 0;
    j = 0;
    k = l;
    while (i < n1 && j < n2)
    {
        if (L[i] >= R[j])
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
 
    while (i < n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }
 
    while (j < n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}
 
void mergeSort(long arr[], long l, long r)
{
    if (l < r)
    {
        long m = l+(r-l)/2;
        
        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);
 
        merge(arr, l, m, r);
    }
}
 
int main(void){
	long n, w, w1[lim], w2[lim], count1, count2, m, a, b, c, d, i, k, cost, temp1, temp2;
	long long ans[2*lim];
	
	scanf("%ld", &n);
	a = b = c = d = 0;
	m = 0;
	for(i = 0; i < n; i++){
		scanf("%ld %ld", &w, &cost);
		m = m + w;
		if(w == 1){
			w1[a] = cost;
			a++;
		}
		
		else{
			w2[b] = cost;
			b++;
		}
	}
	
	count1 = a;
	count2 = b;
	
	if(count1 != 0)
		mergeSort(w1, 0, count1-1);
	else{
		w1[0] = 0;
		w1[1] = 0;
	}
	
	if(count2 != 0)
		mergeSort(w2, 0, count2-1);
	else{
		w2[0] = 0;
	}
	a = b = 0;
	
	ans[1] = (long long)w1[0];
	c = 1;
	d = 0;
	
	if((long long)w2[0] >= ans[1] + w1[1]){
		ans[2] = (long long)w2[0];
		a = 0;
		b = 1;
	}
	else{
		ans[2] = ans[1] + w1[1];
		a = 2;
		b = 0;
	}
		
	for(k = 3; k <= m; k++){
		if((ans[k-2] + w2[d] >= ans[k-1] + w1[a]) && d < count2 && a < count1){
			ans[k] = ans[k-2] + w2[d];
			temp1 = a;
			temp2 = b;
			a = c;
			b = d+1;
			c = temp1;
			d = temp2;
		}
		
		else if((ans[k-2] + w2[d] < ans[k-1] + w1[a]) && d < count2 && a < count1){
			ans[k] = ans[k-1] + w1[a];
			c = a;
			d = b;
			a = a+1;
			b = b;
		}
		
		else if(a >= count1){
			if(ans[k-2] + w2[d] >= ans[k-1]){
				ans[k] = ans[k-2] +w2[d];
				temp1 = a;
				temp2 = b;
				a = c;
				b = d+1;
				c = temp1;
				d = temp2;
			}
			else{
				ans[k] = ans[k-1];
				c = a;
				d = b;
				a = a;
				b = b;
			}
		}
		
		else{
			if(ans[k-1] + w1[a] >= ans[k-2]){
				ans[k] = ans[k-1] + w1[a];
				c = a;
				d = b;
				a = a+1;
				b = b;
			}
			else{
				ans[k] = ans[k-2];
				temp1 = a;
				temp2 = b;
				a = c;
				b = d;
				c = temp1;
				d = temp2;
			}
		}
	}
	
	for(k = 1; k <= m; k++)
		printf("%lld ", ans[k]);
			
	return 0;
} 