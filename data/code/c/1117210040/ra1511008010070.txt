#include<stdio.h>
void qsort(int * d,int l,int r)
{
 
    int p,a;
    int ll,rr;
    if(l<r)
    {
 
        ll=l;
        rr=r;
        p=d[(ll+rr)>>1];
        while(ll<=rr)
        {
 
            while(ll<r&&(d[ll]<p))
                ll++;
            while(rr>l&&(d[rr]>p))
                rr--;
            if(ll<=rr)
            {
                a=d[ll];
                d[ll]=d[rr];
                d[rr]=a;
                --rr;
                ++ll;
            }}
            if(r>ll)
        qsort(d,ll,r);
        if(l<rr)
            qsort(d,l,rr);
 
 
 
    }
 
 
}
 
long long int sum[200001];
int main()
{
 
int n;
scanf("%d",&n);
int a[100001],b[100001];
int i,x=0,y=0;
int m=0,w;
for(i=0;i<n;i++)
{
 
    scanf("%d",&w);
    m=m+w;
    if(w==1)
    {
        scanf("%d",&a[x]);
        x++;
    }
    else{
        scanf("%d",&b[y]);
        y++;
 
    }
}
qsort(a,0,x-1);
qsort(b,0,y-1);
int u,v,k,l,flag;
u=x;
v=y;
long long int pre=0;
for(i=2;i<=m;i=i+2)
{
l=0;
k=0;
 
 
if(v>=1)
    l=b[v-1];
    flag=1;
    if(u>=2)
    {
        k=a[u-1];
        k=k+a[u-2];
    }
    else
    if(u>=1){
        k=a[u-1];
        flag=2;
        }
    if(l>k)
    {
        pre=pre+l;
        v--;
    }
    else{
            pre=pre+k;
         if(flag==2)
         u--;
    else
        u=u-2;
 
    }
sum[i]=pre;
 
}
 
u=x;
v=y;
pre=0;
if(u>=1)
{
    pre=pre+a[u-1];
    u--;
    sum[1]=pre;
}
for(i=3;i<=m;i=i+2){
     k=0;
     l=0;
 
 
if(v>=1)
    l=b[v-1];
    flag=1;
    if(u>=2)
    {
     k=a[u-1];
     k=k+a[u-2];
    }
    else
        if(u>=1)
    {
        flag=2;
        k=a[u-1];
    }
    if(l>k)
    {
        pre=pre+l;
 
        v--;
    }
    else{
 
        pre=pre+k;
        if(flag==2)
            u--;
        else
            u=u-2;
 
    }
sum[i]=pre;
}
for(i=1;i<=m;i++)
    printf("%lld ",sum[i]);
 
 
return 0;
} 