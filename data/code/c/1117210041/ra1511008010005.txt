#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
 
//typedef long long ll;
 
typedef struct
{
    int id,att,val,p,pos;
}css;
 
css c[100005];
 
 
int compare(const void *a,const void *b)
{
    css *e1 = (css *)a;
    css *e2 = (css *)b;
    if(e1->id==e2->id)
    {
        if(e1->att==e2->att)
        {
            if(e1->p==e2->p)
            {
                return e2->pos-e1->pos;
            }
            return e2->p-e1->p;
        }
        return e1->att-e2->att;
    }
    return e1->id-e2->id;
}
 
 
int binsrh(int idm,int n,int attr)
{
    int h,l,m;
    l=0;
    h=n-1;
    while(l<=h)
    {
        m=(l+h)/2;
        if(c[m].id==idm)
        {
            if(c[m].att==attr)
            {
                while(c[m-1].id==idm&&c[m-1].att==attr&&m>0)
                {
                    m--;
                }
                return m;
            }
            else if(c[m].att>attr)
            {
                h=m-1;
            }
            else
            {
                l=m+1;
            }
        }
        else if(c[m].id>idm)
        {
            h=m-1;
        }
        else
        {
            l=m+1;
        }
    }
  return 0;
}
 
int main()
{
	int n,m,i,idm,attm,po;
	scanf("%d%d",&n,&m);
	for(i=0;i<n;i++)
    {
        scanf("%d%d%d%d",&c[i].id,&c[i].att,&c[i].val,&c[i].p);
        c[i].pos=i;
    }
    qsort(c,n,sizeof(css),compare);
    for(i=0;i<m;i++)
    {
        scanf("%d%d",&idm,&attm);
        po=binsrh(idm,n,attm);
        printf("%d\n",c[po].val);
    }
	return 0;
} 