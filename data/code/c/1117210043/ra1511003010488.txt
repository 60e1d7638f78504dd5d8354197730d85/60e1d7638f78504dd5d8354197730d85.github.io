#include <stdio.h>
#include <stdlib.h>
long long count = 1000000;
 
long long compare(int *ans, long long *p, int n, int current)
{
    int i;
    long long an = p[0];
 
    for (i = 0; i < n; i++) {
        if (ans[i] == 0) {
            an  = an  + p[i + 1];
        } else if (ans[i] == 1) {
            an = an - p[i + 1];
        } else if (ans[i] == 2) {
            an = an * p[i + 1];
        }
    }
    if (an < count) {
        count = an;
    }
}
 
int permute(int *ans, long long *p, int n, int current, long long vats)
{
    if (current > n) {
        if (vats < count) {
            count = vats;
        }
    } else {
        int i;
        int c[3] = {0, 1, 2};
        long long t = vats;
        vats = t + p[current];
        permute(ans, p, n, current + 1, vats);
        vats = t - p[current];
        permute(ans, p, n, current + 1, vats);
        vats = t*p[current];
        permute(ans, p, n, current + 1, vats);
 
    }
}
 
int main()
{
    int n, i;
    long long p[20];
    int test;
    scanf("%d", &test);
 
    while(test--) {
        long long  vats = 0;
        count = 1000000;
        scanf("%d", &n);
        for (i = 0; i < n; i++) {
            scanf("%lld", &p[i]);
        }
        int ans[12];
        vats = p[0];
        permute(ans, p, n - 1, 1, vats);
        printf("%lld\n", count);
    }
    return 0;
}
 