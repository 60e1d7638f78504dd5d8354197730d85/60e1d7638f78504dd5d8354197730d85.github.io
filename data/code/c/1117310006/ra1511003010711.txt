#include<stdio.h>
 
#define MAX 5010
#define MODBY 1000000007
typedef long long int lld;
lld fact[MAX],invfact[MAX];
int power(int a,int b,int c)
{
   lld ans=1,x=a;
   while(b){
      if(b&1) ans=(ans*x)%c;
      x=(x*x)%c;
      b>>=1;
   }
   return (int)ans;
}
void precompute()
{
   int i;
   fact[0]=1;
   for(i=1;i<MAX;i++)
      fact[i]=(fact[i-1]*i)%MODBY;
 //  printf("%d! is %lld\n",MAX,fact[MAX-1]);
   invfact[MAX-1]=power(fact[MAX-1],MODBY-2,MODBY);
 //  printf("inv(%d!) is %lld\n",MAX,invfact[MAX-1]);
   for(i=MAX-2;i>=0;i--)
      invfact[i]=((i+1)*invfact[i+1])%MODBY;
}
int C(int n,int r)
{
 /*  printf("generating fact for C[%d][%d]\n",n,r);
   printf("factorial of n is %lld\n",fact[n]);
   printf("invfactorial of r is %lld\n",invfact[r]);
   printf("invfactorial of n-r is %lld\n",invfact[n-r]);*/
   return (int)((((fact[n]*invfact[r])%MODBY)*invfact[n-r])%MODBY);
}
lld ncoins_rbeggars(int n, int r)
{
   return C(n-1,r-1);
}
int main()
{
   int n,k;
   lld ans;
   precompute();
   while(scanf("%d%d",&n,&k),k){
      /*printf("n is %d\n",n);
      printf("k is %d\n",k);*/
      ans=C(n-2,k/2);
//      printf("\tans is %lld\n",ans);
      ans*=ncoins_rbeggars(n-1,(k+1)/2);
  //    printf("\tans is %lld\n",ans);
      ans=2*ans;
   //   printf("\tans is %lld\n",ans);
      printf("%d\n",(int)(ans%MODBY));
   }
   return 0;
}