#include <stdio.h>

typedef struct stack{
int data[50];
  int top;
}stack;

int priority(char);
void init(stack *);
int empty(stack *);
int full(stack *);
char pop(stack *);
void push(stack *,char);
char top(stack *);

int main()
{
	stack s;
  char x;
  int c,i,j;
  int t;
  char str[100];
char r;
  init(&s);
  scanf("%d",&t);
// scanf("%c",&r);
 // printf("%d\n",t);
  for(i=0;i<t;i++){
    //printf("%d\n",t);
    scanf("%s",str);
    
  	for(j = 0;str[j];j++)
    {
    	c = str[j];  
      //printf("char %c ",c);
    	if(isalpha(c))
          printf("%c",c);
      else if(c=='(')
        push(&s,'(');
      else{
      	if(c==')')
          while((x=pop(&s))!='(')
            printf("%c",x);
        else{
        	while(priority(c)<=priority(top(&s)) && !empty(&s)){
            	x=pop(&s);
              printf("%c",x);
              
            	}
          push(&s,c);
        	}
      	}
    	}
    while(!empty(&s)){
    	x=pop(&s);
      printf("%c",x);
    	}
    printf("\n");
	//t--;
    //c=getchar();
   // printf("\n%d\n",i);
    
  }
  
	return 0;
}

int priority(char x){
	if(x=='(')
      return 0;
  	if(x=='+'||x=='-')
      return 1;
  if(x=='*'||x=='/'||x=='%')
    return 2;
  return 3;
}

void init(stack *s){
	s->top=-1;
	}

int empty(stack *s){
	if(s->top==-1)
      return 1;
  else
    return 0;
	}

int full(stack *s){
	if(s->top==399)
      return 1;
  else
    return 0;
}

void push(stack *s,char x){
	s->top=s->top+1;
  s->data[s->top]=x;
}

char pop(stack *s){
int x;
  x=s->data[s->top];
  s->top=s->top-1;
  return x;
}

char top(stack *s){
return s->data[s->top];
}