#include<stdio.h>
#include<string.h>
int seq;
int sum;
int room[501][501];
int reachable[501]={0,1,2,3,4,5,6,7,6,8,10,11,12,13,14,15,11,17,16,19,20,21,22,23,18,25,26,22,20,28,30,31,20,33,30,35,32,37,38,39,30,40,42,42,44,40,46,22,33,49,50,51,41,26,44,55,23,57,52,59,60,61,62,56,39,65,66,67,39,69,70,71,48,73,74,75,68,77,78,79,55,65,80,79,60,85,84,84,66,89,80,82,92,93,44,95,60,97,98,88,100,100,90,25,64,105,34,106,88,109,110,111,36,113,114,115,94,104,118,53,90,121,122,120,124,125,112,127,76,126,130,131,132,129,134,110,44,137,138,139,100,66,142,143,88,140,146,147,148,148,150,151,106,136,154,155,123,157,158,30,100,161,130,88,148,165,158,166,69,169,150,152,156,172,156,175,121,177,178,179,160,181,121,183,138,185,186,187,68,151,190,191,117,193,194,195,140,196,176,109,150,201,196,196,117,200,50,184,119,209,210,211,54,213,212,210,132,217,218,219,220,202,222,223,65,200,226,226,204,227,230,231,135,232,208,110,236,237,64,239,165,241,242,195,243,245,240,247,186,237,250,251,160,253,254,255,151,162,252,259,205,224,262,262,198,130,217,267,268,167,220,271,45,246,274,275,276,277,278,248,115,281,132,283,284,285,286,275,160,289,260,291,292,292,294,295,222,242,296,299,300,294,302,300,200,299,240,307,220,75,310,183,192,311,314,280,316,317,36,308,195,318,322,307,260,325,176,327,215,154,330,331,316,296,332,325,108,337,338,339,195,341,304,343,228,345,344,347,282,349,350,286,220,353,354,355,356,159,358,359,240,361,362,363,136,365,366,365,253,320,370,164,372,373,330,375,96,314,301,377,340,381,382,383,228,385,386,336,388,389,390,391,161,393,392,395,352,110,218,387,275,241,402,403,311,325,344,407,132,409,400,411,100,413,368,395,220,417,418,259,300,238,422,176,72,425,426,427,376,429,420,430,242,433,434,420,436,437,438,439,330,392,279,443,444,445,446,444,129,449,400,440,452,453,452,410,318,457,454,373,460,460,462,461,245,465,464,467,328,469,220,471,354,428,460,475,68,72,478,478,300,481,482,483,484,485,390,485,365,264,490,490,444,459,476,440,341,497,474,121,500,};
void precompute() {
	int i,j,k,x;
	int a,b,c;
	memset(room,-1,sizeof(room));
	for(i=1;i<=500;i++) {
		x=0;a=1%i;b=2%i;c=3%i;sum=0;
		for(j=0;;j++) {
			if(j<=3) {
				seq=j%i;
			} else {
				seq=(a+b+c)%i;
				a=b;
				b=c;
				c=seq;
			}
			sum=(sum+seq)%i;
			if(room[i][sum]==-1) {
				x++;
				room[i][sum]=j;
			}
			if(x==reachable[i]) break;
		}
		reachable[i]=x;
	}
}
int main() {
	int T,N,R,H,M,G,i,f,rng;
	char S[12];
	int rm_status[501];
	int room_no,z,x,prev,prev_ans,day,min,time;
	precompute();
	scanf("%d",&T);
	while(T--) {
		scanf("%d%d",&N,&R);
		memset(rm_status,-1,sizeof(rm_status));
		prev=0;day=0;prev_ans=0;
		while(N--) {
			scanf("%d%d%d%s",&H,&M,&G,S);
			time=H*60+M;
			if(time<prev) day++;
			prev=time;
			time+=day*24*60;
			f=1;rng=prev_ans;
			for(i=strlen(S)-1;i>=0;i--) {   //rng ka calculation
				rng=(rng+(S[i]>'Z'?S[i]-'a'+1:S[i]-'A'+1)*f)%R;
				f=(f*33)%R;
			}
			
			//remove leaving guests 
			for(i=0;i<R;i++) {
				if(rm_status[i]<=time) rm_status[i]=-1;
			}
			if(rm_status[rng]==-1) {  //room empty
				printf("0\n");
				rm_status[rng]=time+G*60;
			} else {  //not empty apply lift wali strat
				min=10000000;
				z=1000000000;
				for(i=0;i<R;i++) {
					x=i-rng;
					if(x<0) x+=R;
					if(rm_status[i]==-1 && room[R][x]!=-1 && room[R][x]<min) {
						min=room[R][x];
						room_no=i;
					}
					if(rm_status[i]>time && rm_status[i]<z && room[R][x]!=-1) z=rm_status[i];
				}
				if(min==10000000) {
					printf("-%d\n",z-time);
					prev_ans+=z-time;
				} else {
					printf("%d\n",min);
					rm_status[room_no]=time+60*G;
					prev_ans+=min;
				}
			}
			if(prev_ans>R) prev_ans%=R;
		}
	}
	return 0;
}