#include<stdio.h>
int arr[500000];
int temp[500000];
void swap(int m,int n)
{
         int c=temp[m];
         temp[m]=temp[n];
         temp[n]=c;
}
void Qsort(int lo,int hi)
{
     if(hi<=lo)
     return;
     int lt=lo,i=lo+1,gt=hi;
     int flag=temp[lo];
     while(i<=gt)
     {
                 if(temp[i]<flag)
                    swap(lt++,i++);
                 else if(temp[i]>flag)
                 swap(i,gt--);
                 else
                 i++;
     }
     Qsort(lo,lt-1);
     Qsort(gt+1,hi);
}
 
int main()
{
    int q;
    scanf("%d",&q);
    int index=0;
    int type,l,r,x;
    while(q--)
    {
              
              scanf("%d",&type);
              if(type==0)
              {
                         scanf("%d",&x);
                         arr[index]= x;
                         index++;
              }
              else if( type == 1)
              {
                   scanf(" %d %d %d", &l,&r,&x);
                   l--;
                   r--;
                   int i,max=l;
                   int val= x^arr[l],temp;
                   for(i=l+1; i<=r; i++)
                   {
                            temp= x^arr[i];
                            if(temp > val)
                            {
                                    val=temp;
                                    max=i;
                            }
                   }
                   printf("%d\n",arr[max]);
              }
              else if(type == 2)
              {
                   scanf("%d",&x);
                   index=index-x;
              }
              else if( type == 3)
              {
                   scanf("%d %d %d",&l,&r,&x);
                   l--;
                   r--;
                   int val= 0,i;
                   for(i=l; i<=r; i++)
                   {
                          if( arr[i] <= x)
                           val++;
                   }
                   printf("%d\n",val);
              }
              else
              {
                  scanf("%d %d %d",&l,&r,&x);
                  l--;
                   r--;
                  int i,j=0;
                  for(i=l; i<=r; i++)
                   {
                          temp[j]=arr[i];
                          j++;
                   }
                   Qsort(0,j-1);
                   printf("%d\n",temp[x-1]);
              }
    }
    return 0;
}