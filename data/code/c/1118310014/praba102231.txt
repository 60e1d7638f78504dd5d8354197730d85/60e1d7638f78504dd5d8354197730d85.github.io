#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define MOD 1000000007
 
struct edge { int u,v,f; } E[200015];
 
int S[100005],CS[100005],P[100005],Ind[100005][2],status[100005],edges,change,N;
 
int Pprocess2(int node)
{
    int i; CS[node]=S[node];
    for(i=Ind[node][0];i<Ind[node+1][0];i++) if(E[i].f) CS[node]+=Pprocess2(E[i].v);
    return CS[node];
}
 
int compare(const void *x,const void *y) { struct edge a=*(struct edge*)x,b=*(struct edge*)y; return a.u<b.u?-1:(a.u>b.u?1:0); }
 
int Pprocess()
{
    qsort(E,edges,sizeof(struct edge),compare);
    int i,j,k;
    //printf("\nSorted\n\n"); for(i=0;i<edges;i++) printf("%d %d\n",E[i].u,E[i].v); printf("\n");
    
    Ind[1][0]=0; for(i=0,j=2;i<edges;i++) if(E[i].u==j) Ind[j++][0]=i; Ind[N+1][0]=edges;
    memset(status,0,sizeof(status));
    status[1]=1; P[1]=0; DFS(1);
    //for(i=1;i<=N+1;i++) printf("%d ",Ind[i][0]); printf("\n");
    //j=0; for(i=0;i<edges;i++) if(E[i].f) { E[j].u=E[i].u; E[j].v=E[i].v; E[j].f=E[i].f; j++; } edges=j;
    //printf("\n"); for(i=0;i<edges;i++) printf("%d %d\n",E[i].u,E[i].v); printf("\n");
    //Ind[1][0]=0; for(i=0,j=1;i<edges;i++) if(E[i].u!=j) { Ind[j][1]=i; for(k=j+1;k<E[i].u;k++) Ind[k][0]=Ind[k][1]=0; j=E[i].u; Ind[j][0]=i; }
    //Ind[j][1]=edges; for(k=j+1;k<N;k++) Ind[k][0]=Ind[k][1]=0;
    Pprocess2(1);
}
 
int DFS(int u)
{
    int i; for(i=Ind[u][0];i<Ind[u+1][0];i++) if(!status[E[i].v]) { P[E[i].v]=u; E[i].f=1; status[E[i].v]=1; DFS(E[i].v); }
}
 
int Update(int a)
{
    if(a==0) return;
    CS[a]+=change;
    Update(P[a]);
}
 
int Query(int a)
{
    printf("%d\n",CS[a]);
}
 
int main()
{
    int T=1,M;
    //scanf("%d",&T);
    while(T--)
    {
              scanf("%d%d",&N,&M);
              int i,j,k; for(i=1;i<=N;i++) scanf("%d",&S[i]);
              edges=0; for(i=1;i<=N-1;i++) { scanf("%d%d",&j,&k); E[edges].u=j; E[edges].v=k; E[edges++].f=0; E[edges].u=k; E[edges].v=j; E[edges++].f=0; }
              //printf("Before\n\n"); for(i=0;i<edges;i++) printf("%d %d\n",E[i].u,E[i].v);
              Pprocess();
              //printf("\n\nAfter\n\n"); for(i=0;i<edges;i++) printf("%d %d\n",E[i].u,E[i].v);
              while(M--)
              {
                        char q[5]; int a,b;
                        scanf("%s",q);
                        if(q[0]=='U')
                        {
                                     scanf("%d%d",&a,&b); change=b-S[a]; S[a]=b; Update(a);
                        }
                        else { scanf("%d",&a); Query(a); }
              }
    }
    return 0;
}