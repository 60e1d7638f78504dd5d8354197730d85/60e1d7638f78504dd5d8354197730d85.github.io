#include<stdio.h>
#include<string.h>
int dp1[1009][1009];
int dp2[1009][1009];
int find_max(int a,int b)
{
    if(a>=b)
        return a;
    else
        return b;
}
void compute_lcs(char str1[],char str2[],int n,int m)
{
    int i,j;
    for(i=0;i<=n;++i)
        dp1[i][0]=0;
    for(i=0;i<=m;++i)
        dp1[0][i]=0;
    for(i=1;i<=n;++i)
    {
        for(j=1;j<=m;++j)
        {
            if(str1[i-1]==str2[j-1])
                dp1[i][j]=dp1[i-1][j-1]+1;
            else
                dp1[i][j]=find_max(dp1[i-1][j],dp1[i][j-1]);
        }
    }
}
void distinct_lcs(char str1[],char str2[],int n,int m)
{
    int i,j;
    for(i=0;i<=n;++i)
        dp2[i][0]=1;
    for(i=0;i<=m;++i)
        dp2[0][i]=1;
    for(i=1;i<=n;++i)
    {
        for(j=1;j<=m;++j)
        {
            if(str1[i-1]==str2[j-1])
                dp2[i][j]=dp2[i-1][j-1];
            else
            {
                if(dp1[i-1][j]>dp1[i][j-1])
                    dp2[i][j]=dp2[i-1][j];
                else if(dp1[i][j-1]>dp1[i-1][j])
                    dp2[i][j]=dp2[i][j-1];
                else if(dp1[i-1][j]==dp1[i][j-1])
                {
                    if(dp1[i-1][j]==dp1[i-1][j-1])
                    {
                        dp2[i][j]=(dp2[i-1][j]+dp2[i][j-1]-dp2[i-1][j-1]+23102009)%23102009;
                    }
                    else
                    {
                        dp2[i][j]=(dp2[i-1][j]+dp2[i][j-1])%23102009;
                    }
                }
            }
        }
    }
}
int main()
{
    int t,n,m;
    char str1[1009],str2[1009];
    scanf("%d",&t);
    while(t--)
    {
        scanf("%s",str1);
        n=strlen(str1);
        scanf("%s",str2);
        m=strlen(str2);
        compute_lcs(str1,str2,n,m);
        distinct_lcs(str1,str2,n,m);
        printf("%d %d\n",dp1[n][m],dp2[n][m]);
        printf("\n");
    }
    return 0;
}
 