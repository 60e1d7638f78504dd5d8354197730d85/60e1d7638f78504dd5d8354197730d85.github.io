#include<stdio.h>
#define max 1000000000
#define max2 1000000003
long long dp[10][10];
long long res[10];
int nofdig(int n)
{
	int sum=0;
	while(n>0)
	{
		if(n%10==4||n%10==7)sum++;
		n/=10;
	}
	return sum;
}
void count(int n)
{
	int i;
	int in=11;
	int temp[11];
	int digit=0;
	while(n>0)
	{
		in--;
		digit++;
		temp[in]=n%10;
		n=n/10;
	}
	int j,k,l, m;
	int initial=0;
	int start;
	for(i=0;i<=9;i++)res[i]=0;
	for(i=0;i<=9;i++)for(j=1;j<digit;j++)res[i]+=dp[digit-j][i];
	for(i=in,j=1;i<=10;i++,j++)
	{
		if(j==1)start=1;
		else start=0;
		for(k=start;k<temp[i];k++)
		{
			for(m=digit-j;m>=0;m--)
			{
				for(l=0;l<=m;l++)
				{
					if(k==4||k==7)res[initial+1+l]+=dp[m][l];
					else res[initial+l]+=dp[m][l];
				}
			}
		}
		if(temp[i]==4||temp[i]==7)initial++;
	}
	res[initial]++;
 
	return ;
 
}
int main()
{
	int i,j,l;
	for(i=0;i<=9;i++)for(j=0;j<=9;j++)dp[i][j]=0;
	dp[1][0]=7;
	dp[1][1]=2;
	dp[0][0]=1;
	for(i=2;i<=9;i++)
	{
		for(l=1;l<=i;l++)
		{
			for(j=0;j<=9;j++)dp[i][j]+=7*dp[i-l][j];
			for(j=0;j<=i-l;j++)dp[i][j+1]+=2*dp[i-l][j];
		}
	}
/*	while(1)
	{
		scanf("%d",&temp);
		if(temp==0)break;
		count(temp);
		for(i=0;i<=9;i++)printf("%d ",res[i]);
		printf("\n");
	}*/
	int test;
	int n,m,k;
	int c[52];
	long long sim[10][52];
	int ans[51];
	long long var,add;
	int val;
	int hi,lo;
	int num;
	int mid;
	int flag;
	scanf("%d",&test);
	while(test--)
	{
		scanf("%d%d%d",&n,&m,&k);
		for(i=1;i<=n-1;i++)
		{
			scanf("%d",&c[i]);
		//	printf("%d\n",c[i]);
		}
		count(m);
		for(i=0;i<=9;i++)for(j=0;j<=50;j++)sim[i][j]=0;
		if(c[n-1]==0)
		{
			for(j=0;j<=9;j++)
			{
				for(l=0;l<=9;l++)
				{
					if(l==j)continue;
					sim[j][n]+=res[l];
				}
			}
		}
		else
		{
			for(j=0;j<=9;j++)sim[j][n]=res[j];
		}
//		for(i=0;i<=9;i++)printf("%lld\n",sim[i][n]);
		for(i=n-1;i>=2;i--)
		{
			for(j=0;j<=9;j++)
			{
				if(c[i-1]==0)
				{
					for(l=0;l<=9;l++)
					{
						if(l==j)continue;
						sim[j][i]+=res[l]*sim[l][i+1];
						if(sim[j][i]>max)
						{
							sim[j][i]=max2;
							break;
						}
					}
				}
				else 
				{
					sim[j][i]+=res[j]*sim[j][i+1];
					if(sim[j][i]>max)
					{
						sim[j][i]=max2;
					//	break;
					}
				}
			}
		}
		for(i=0;i<=9;i++)sim[i][n+1]=1;
		//	for(i=0;i<=9;i++)
		//	printf("%lld\n",sim[i][2]);
	
		var=0;
		flag=0;/////// till n and 0 case
//		printf("hello\n");
		for(i=1;i<=n;i++)
		{
//			printf("%d\n",c[i-1]);
//			printf("%d\n",var);
 
			hi=m;
			lo=1;
			num=0;
			if(i==1)
			{
				while(lo<=hi)
				{
					mid=(hi+lo)/2;
					count(mid);
					add=0;
					for(j=0;j<=9;j++)
					{
					//        if(mid==3)printf("%lld %d\n",sim[j][2],res[j]);
						add+=res[j]*sim[j][2];
						if(add>max)
						{
							add=max2;
							break;
						}
					}
					if(add<k)
					{
					      //  printf("%lld %d\n",add,mid);
						if(num<mid)
						num=mid;
						lo=mid+1;
					}
					else hi=mid-1;
				}
				if(num==m)
				{
					flag=1;
					break;
				}
				count(num);
				add=0;
				for(j=0;j<=9;j++)add+=res[j]*sim[j][2];
				if(num>0)var+=add;
				ans[1]=num+1;
				val=nofdig(num+1);
			}
			else
			{
				if(c[i-1]==0)
				{
				//	if(i==n)printf("hello\n");
				     
				      while(lo<=hi)
				      {
					      mid=(hi+lo)/2;
					      count(mid);
					      add=0;
					   
					      for(j=0;j<=9;j++)
					      {
						      if(j==val)continue;
						      add+=res[j]*sim[j][i+1];
						      if(add>max)
						      {
							      add=max2;
							      break;
						      }
					      }
					     // if(i==n)printf("%d %lld\n",mid,add);
					      if(var+add<k)
					      {
						      if(num<mid)
							      num=mid;
						      lo=mid+1;
					      }
					      else hi=mid-1;
				      }
				     // printf("%d\n",num);
				
				      count(num);
				      add=0;
				      for(j=0;j<=9;j++)
				      {
					      if(j==val)continue;
					      add+=res[j]*sim[j][i+1];
				      }
				      if(num>0)var+=add;
				      ans[i]=num+1;
				      val=nofdig(num+1);
				}
 
				else
				{
					
					while(lo<=hi)
					{
						mid=(hi+lo)/2;
						count(mid);
						add=res[val]*sim[val][i+1];
					//	if(i==3)printf("%d %lld hi\n",mid,add);
						if(add>max)
						{
							add=max2;
						//	break;
						}
						if(var+add<k)
						{
						if(num<mid)
							num=mid;
							lo=mid+1;
						}
						else 
						{
							hi=mid-1;
						}
					}
		/*			if(i==3)
					{
						count(2);
						printf("%d %lld\n",val,res[val]*sim[val][i+1]);
						printf("%d\n",num);
					}*/
					count(num);
					add=res[val]*sim[val][i+1];
					if(num>0)var+=add;
					ans[i]=num+1;
					val=nofdig(num+1);
				}
			}
 
		}
		if(flag==1)printf("-1\n");
		else
		{
			for(i=1;i<=n;i++)printf("%d ",ans[i]);
			printf("\n");
		}
	}
	return 0;
}