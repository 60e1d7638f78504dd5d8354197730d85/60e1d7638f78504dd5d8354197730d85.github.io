#include <stdio.h>
#include <string.h>
#define INF 9999999
#define S 0
#define T 20000
int tcase,n,m,d,h;
int e[2000010][3],p[20010],tot;
int dis[20010],from[20010],cur[20010],gap[20010];
int min(int a,int b)
{
    return a<b?a:b;
}
void adde(int sn,int fn,int val)
{
    e[++tot][0] = fn; e[tot][1] = val; e[tot][2] = p[sn]; p[sn] = cur[sn] = tot;
    e[++tot][0] = sn; e[tot][1] = 0; e[tot][2] = p[fn]; p[fn] = cur[fn] = tot;
}
int sap()
{
    int i,mmin,sn = S,flow = INF,tans = 0;
    gap[0] = T;
    while(dis[S] <= T)
    {
        for(i=cur[sn];i;i=e[i][2]) if(e[i][1]>0 && dis[sn] == dis[e[i][0]]+1) break;
        cur[sn] = i;
        if(i)
        {
            sn = e[i][0]; from[sn] = i;
            flow = min(flow,e[i][1]);
            if(sn != T) continue;
            tans += flow;
            for(;sn!=S;sn=e[from[sn]^1][0]) { e[from[sn]][1] -= flow; e[from[sn]^1][1] += flow;}
            flow = INF;
        }
        else
        {
            if(--gap[dis[sn]] == 0) break;
            cur[sn] = p[sn]; mmin = T+3;
            for(i=p[sn];i;i=e[i][2]) if(e[i][1]>0) mmin = min(mmin,dis[e[i][0]]);
            gap[dis[sn] = mmin+1]++;
            if(sn) sn = e[from[sn]^1][0];
        }
    }
    return tans;
}
int main()
{
    int i,j,k,l,r,t,x,xx,y,yy;
    short failed;
    scanf("%d",&tcase);
    while(tcase--)
    {
    	memset(p,0,sizeof(p)); memset(dis,0,sizeof(dis)); memset(gap,0,sizeof(gap)); tot = 1; failed = 0;
    	scanf("%d%d%d%d",&m,&d,&h,&n); xx = 0;
    	for(i=1;i<=m;i++) { scanf("%d",&x); adde(S,i,x);}
    	scanf("%d%d",&l,&r);
    	for(i=0;i<d;i++) for(j=1;j<=h;j++)
    	{
    		scanf("%d",&x);
    		if(x) { adde(15000+i*h+j,T,x); xx += x;}
    	}
    	for(i=1;i<=m;i++) for(j=1;j<=d;j++)
    	{
    		y = n; yy = r-l+1; t = (i-1)*d+j;
    		for(k=1;k<=h;k++)
    		{
    			scanf("%d",&x);
    			if(k>=l && k<=r)
    			{
    				if(x) adde(10000+t,15000+(j-1)*h+k,1);
    				else { yy--; y--;}
    			}
    			else
    			{
    				if(x) adde(5000+t,15000+(j-1)*h+k,1);
    				else y--;
    			}
    		}
    		if(!yy || y<0) failed = 1;
    		adde(100+t,5000+t,INF); adde(100+t,10000+t,yy-1); adde(i,100+t,y);
    	}
    	if(failed) printf("No\n");
    	else if(sap() == xx) printf("Yes\n");
    	else printf("No\n");
    }
    return 0;
} 