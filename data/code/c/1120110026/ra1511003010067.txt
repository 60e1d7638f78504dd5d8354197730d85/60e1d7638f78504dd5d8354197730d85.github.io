#include<stdio.h>
#include<string.h>
 
/* function prototype for utility function to
  reverse a string from begin to end  */
void reverse(char *begin, char *end);
 
/*Function to reverse words*/
void reverseWords(char *s)
{
  char *word_begin = s;
  char *temp = s; /* temp is for word boundry */
 
  /*STEP 1 of the above algorithm */
  while( *temp )
  {
    temp++;
    if (*temp == '\0')
    {
      reverse(word_begin, temp-1);
    }
    else if(*temp == ' ')
    {
      reverse(word_begin, temp-1);
      word_begin = temp+1;
    }
  } /* End of while */
 
   /*STEP 2 of the above algorithm */
  reverse(s, temp-1);
}
 
/* UTILITY FUNCTIONS */
/*Function to reverse any sequence starting with pointer
  begin and ending with pointer end  */
void reverse(char *begin, char *end)
{//char *temp = s;
  char temp;
  while (begin < end)
  {
    temp = *begin;
    *begin++ = *end;
    *end-- = temp;
  }
}
 
/* Driver function to test above functions */
int main()
{
  char s[500],str[500][500],tempp;
  int i,j=0,k=0,x,len;
  scanf("%[^\n]s",s);
 // char *temp = s;
  reverseWords(s);
  for (i = 0;s[i] != '\0'; i++)
    {
        if (s[i] == ' ')
        {
            str[k][j]='\0';
            k++;
            j=0;
        }
        else
        {
            str[k][j]=s[i];
            j++;
        }
    }
    str[k][j] = '\0';
 
/* reverses each word of a given string */
    for (i = 0;i <= k;i++)
    {
        len = strlen(str[i]);
        for (j = 0, x = len - 1;j < x;j++,x--)
        {
            tempp = str[i][j];
            str[i][j] = str[i][x];
            str[i][x] = tempp;
        }
    }
    for (i = 0;i <= k;i++)
    {
        printf("%s ", str[i]);
    }
 // printf("%s", s);
  //getchar();
  return 0;
}