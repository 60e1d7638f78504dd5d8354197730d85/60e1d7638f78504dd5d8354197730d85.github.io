#include<iostream>
#include<vector>
using namespace std;
int ans,N,totalNumberOfPossibleArrays;
int memory[51][51];
 
void countArrays(int index,int v1,int v2)
{
    int i,minNum;
 
    minNum = v1 < v2 ? v1 : v2;
    ans = (ans + minNum)%1000000007;
    for(i=1;i<=minNum;i++)
        if(v2 != i)
            countArrays(index+1,v2-i,i);
}
 
int numberOfArrays(int a,int b, int c)
{
    int count=1;
    int count1,count2;
    
    ans=1;
    if(memory[b][c]==0)
    {
        countArrays(0,b,c);
        memory[b][c]=ans;
    }
    else
        ans=memory[b][c];
    //cout<<b<<" "<<c<<": "<<ans<<endl;
    count += ans;
    
    int minNum = a < b ? a : b;
    for(int i=minNum;i>0;i--)
    {
        b--;
        c++;
        
        ans=1;
        if(memory[b][c]==0)
        {
            countArrays(0,b,c);
            memory[b][c]=ans;
        }
        else
            ans=memory[b][c];
        //cout<<b<<" "<<c<<": "<<ans<<endl;
        count += ans;
    }
    
    /*ans=0;
    countArrays(0,a,b);
    
    count += ans;
    cout<<a<<" "<<b<<": "<<ans<<endl;
    if(a!=0 && b!=0)
    {
        ans=0;
        countArrays(0,b-1,c+1);
        cout<<b-1<<" "<<c+1<<": "<<ans<<endl;
        count1 = ans;
        ans=0;
        countArrays(0,b-1,1);
        cout<<b-1<<" "<<1<<": "<<ans<<endl;
        count2 = ans;
        count += (count1-count2);
    }*/
    
    return count;
    
}
 
void divideArray(vector<int> A, int index)
{
    int passJ;
 
    if(N-3<=index)
    {
        //cout<<A[N-3]<<" "<<A[N-2]<<" "<<A[N-1]<<": ";
        //cout<<numberOfArrays(A[N-3],A[N-2],A[N-1])<<endl;
        totalNumberOfPossibleArrays+=(numberOfArrays(A[N-3],A[N-2],A[N-1])-1)%1000000007;
        return;
    }
 
    //cout<<"index: "<<index<<endl;
    for(int j=index;j<=N-3;j++)
    {
        vector<int> B(A);
 
        if(j==N-3)
        {
           //cout<<"j called"<<endl;
           divideArray(A,j+1);
           break;
        }
 
        int min = A[j] > A[j+1] ? A[j+1] : A[j];
        //cout<<"j: "<<j<<endl;
        passJ=j+1;
        for(int i=min;i>0;i--)
        {
            A[j]--;
            A[j+1]--;
            A[j+2]++;
            if(A[j+1]==0)
                passJ=j+2;;
            //cout<<"Before divideArray i: "<<i<<"\t\t"<<A[N-6]<<" "<<A[N-5]<<" "<<A[N-4]<<" "<<A[N-3]<<" "<<A[N-2]<<" "<<A[N-1]<<endl;
            divideArray(A,passJ);
        }
        A=B;
        //A[j]--;
        //A[j+1]--;
        //A[j+2]++;
    }
 
    //cout<<"finished index: "<<index<<endl;
    //A[index+1]--;
    //A[index+2]++;
    //cout<<"Before divideArray index: "<<index+1<<"\t"<<A[N-6]<<" "<<A[N-5]<<" "<<A[N-4]<<" "<<A[N-3]<<" "<<A[N-2]<<" "<<A[N-1]<<endl;
    //divideArray(A,index+1);
    //cout<<"After divideArray index: "<<index+1<<"\t"<<A[N-6]<<" "<<A[N-5]<<" "<<A[N-4]<<" "<<A[N-3]<<" "<<A[N-2]<<" "<<A[N-1]<<endl;
}
 
int main()
{
    int T,i,j,index,min;
    
    for(i=0;i<51;i++)
        for(j=0;j<51;j++)
            memory[i][j]=0;
 
    cin>>T;
    while(T--)
    {
        ans=0;
        totalNumberOfPossibleArrays=0;
        
        cin>>N;
        vector<int> A(N);
        for(i=0;i<N;i++)
        {
            cin>>A[i];
        }
 
        if(N>3)
        {
            //for(index=0;index<N-3;index++)
            //{
                index=0;
                divideArray(A,index);
            //}
            //cout<<A[N-3]<<" "<<A[N-2]<<" "<<A[N-1]<<endl;
            //index=0;
            //divideArray(A,index);
        }
        else if(N==3)
        {
            
            totalNumberOfPossibleArrays=numberOfArrays(A[N-3],A[N-2],A[N-1])-1;
        }
        else if(N==2)
        {
            totalNumberOfPossibleArrays=numberOfArrays(0,A[N-2],A[N-1])-1;
        }
        else
        {
            totalNumberOfPossibleArrays=1;
        }
        
        cout<<totalNumberOfPossibleArrays<<endl;
    }
 
    return 0;
}