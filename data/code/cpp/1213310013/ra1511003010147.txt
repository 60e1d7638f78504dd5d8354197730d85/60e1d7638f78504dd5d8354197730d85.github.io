#include <iostream>
#include <math.h>
#include <bits/stdc++.h>
using namespace std;
int getDecimal(string s)
{
    int len = s.length();
    int ans = 0;
    int j = 0;
    for (int i = len - 1; i >= 0; i--)
    {
        if (s[i] == '1')
            ans += pow(2, j);
        j += 1;
    }
    return ans;
}
string convertToBinary(int n)
{
    string temp;
    while (n > 0)
    {
        int rem = n % 2;
        temp.push_back(48 + rem);
        n = n / 2;
    }
    reverse(temp.begin(), temp.end());
    return temp;
}
int longestCommon(int n, int m)
{
    int mx = -INT_MAX; 
    string s1 = convertToBinary(n);
    string s2 = convertToBinary(m);
 
    string res; 
    int len = s1.length();
    int l = len;
  while (len > 0)
    {
        for (int i = 0; i < l - len + 1; i++)
        {
            string temp = s1.substr(i, len);
 
            int tlen = temp.length();
            if (tlen > mx && s2.find(temp) != string::npos)
            {
                res = temp;
                mx = tlen;
            }
        }
        len = len - 1;
    }
    if (res == "")
        return -1;
 
    return getDecimal(res);
}
int main()
{
	int n = 10, m = 11;
  	int t;
  	cin>>t;
  	for(int i=0;i<t;i++)
    {
      cin>>n>>m;
    cout << longestCommon(m, n) << endl;
    }
      return 0;
}