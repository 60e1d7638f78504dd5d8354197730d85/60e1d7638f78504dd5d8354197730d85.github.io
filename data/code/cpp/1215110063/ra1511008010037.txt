#include<iostream>

using namespace std;


//Algorithm to calculate the number of zeroes at the end of n!
//Input: A number or integer n
//Output: The number of zeroes at the end of n!
//Concept: This is a special case de' Polignac's prime composition of n! where the prime we choose is 5.
//Author: Kishore Venkateshan 
//Compiler: Microsoft Visual Studio 2010
int calcZeroes(int n)                     
{
   int numZeroes = 0;
   const int DIVIDER = 5;
   while(n!=0)
   {
      numZeroes += (int)n/DIVIDER;
      n = (int)n/DIVIDER;
   }
   return numZeroes;
}

int main()
{
   int t;
   int *input;
   int *output;
   cin>>t;
   input = new int[t];                        //For Dynamic Memory usage
   output = new int[t];
   for(int i=0;i<t;i++)
   {      
      cin>>*(input+i);                     //Store inputs in a pointer array
      *(output+i) = calcZeroes(*(input+i));      //Store outputs in a seperate pointer array by                    //Executing the calcZeroes Function
   }
   for(int i=0;i<t;i++)
   {
      cout<<*(output+i);
      cout<<endl;
   }
   delete[] input;                          //Free Memory
   delete[] output;
   return 0;
}

