#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
void gn(ll &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
int qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
const int mo=1000000007;
 
int n,m;
int k;
struct pkt{
	int x,y;
}p[11111];
int cmp(const pkt&a,const pkt&b){
	//return a.x<b.x;
	return a.y<b.y;
}
 
int las;
 
ll li[44][111111];int litot[44];
 
 
void work(int st){
	int to=1;
	li[st][0]=0;li[st][1]=1ll<<st;
	for (int i=2;;i++){
		ll las=li[st][i-1],cur=li[st][i-2];
		ll mask=(las>>1)^las^(las<<1);
		mask&=~1ll;
		mask&=~(1ll<<m+1);
		li[st][i]=cur^mask;
		if((li[st][i]==1ll<<st) && (li[st][i-1]==0)){
			to=i-1;
			break;
		}
	}
	litot[st]=to;
}
 
ll eff[44];
ll head[44];
int main()
{
	int tes;gn(tes);
	for (int tt=1;tt<=tes;tt++){
		gn(n),gn(m);
		gn(k);
		for (int i=1;i<=k;i++){
			gn(p[i].x),gn(p[i].y);
		}
		if(n==1 && m==1){
			if(k==0)printf("YES\n");
			else printf("NO\n");
			continue;
		}
		if(n<m){
			swap(n,m);
			for (int i=1;i<=k;i++)swap(p[i].x,p[i].y);
		}
		for (int i=1;i<=m;i++)work(i);
		ll fin=0;
		for (int i=1;i<=k;i++){
			int r=(n-p[i].x+1)%litot[p[i].y];
			fin^=li[p[i].y][r];
		}
		for (int i=1;i<=m;i++){
			ll ef=0;
			ef^=li[i][n%litot[i]];
			if(i>1)ef^=li[i-1][n%litot[i-1]];
			if(i<m)ef^=li[i+1][n%litot[i+1]];
			ef^=li[i][(n-1)%litot[i]];
			eff[i]=ef;
		}
		memset(head,0,sizeof(head));
		for (int i=1;i<=m;i++){
			ll x=eff[i];
			for (int j=m;j>=1;j--)if(1ll<<j&x){
				if(head[j])x^=head[j];
				else {
					head[j]=x;
					break;
				}
			}
		}
		for (int j=m;j>=1;j--)if(1ll<<j&fin)fin^=head[j];
		if(fin!=0)printf("NO\n");
		else if(m!=1)printf("YES\n");
		else{
			int fin=0;
			int tms=0;
			for (int i=1;i<=k;i++){
				int las=(n-p[i].x)/3*3+p[i].x;
				if(las==n-1)fin^=1,tms^=1;
				else if(las==n)fin^=1;
			}
			if(fin==0 && tms != (n&1)){
				printf("YES\n");
				continue;
			}
			fin=0;
			tms=1;
			p[k+1].x=1,p[k+2].x=2;
			for (int i=1;i<=k+2;i++){
				int las=(n-p[i].x)/3*3+p[i].x;
				if(las==n-1)fin^=1,tms^=1;
				else if(las==n)fin^=1;
			}
			if(fin==0 && tms != (n&1)){
				printf("YES\n");
				continue;
			}
			printf("NO\n");
		}
	}
	return 0;
}