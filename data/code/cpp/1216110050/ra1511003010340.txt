#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
 
 
ll n, right_low[1000005],lh[1000005];
ll DP[1000005], arr[1000005],DPs[1000005];
 
 
int main(){
 
    ios_base::sync_with_stdio(0);
 
    cin>>n;
    for(int i=1;i<=n;i++)
        cin>>arr[i];
      
 
    stack<long long int> st;
    right_low[n] = n+1;
    st.push(n);
    for(int i=n-1;i>=1;i--){
        while(!st.empty() && arr[st.top()] >= arr[i])
            st.pop();
        if(st.empty())  right_low[i] = n+1;
        else    right_low[i] = st.top();
        st.push(i);
    }
 ll m=1000000007LL;
 
 
    DP[n] = arr[n];
    for(int i=n-1;i>=1;i--){
       
        DP[i] = (((((right_low[i]-i)%m)*(arr[i]%m))%m) + DP[right_low[i]]%m)%m;
    }
  while(!st.empty())
  st.pop();
    for(int i=n-1;i>=1;i--)
    {
    DP[i]=((DP[i]%m)+(DP[i+1]%m))%m;
    }
 for(int i=1;i<=n;i++)
 {
       while(!st.empty() && arr[st.top()] <= arr[i])
            st.pop();
        if(st.empty())  lh[i] = 0;
        else    lh[i] = st.top();
        st.push(i);
 }
 DPs[1]=arr[1];
 for(int i=2;i<=n;i++)
 {
  DPs[i] = (((((i-lh[i])%m)*(arr[i]%m))%m) + DPs[lh[i]]%m)%m;
 
 }
 
   ll ans=0;
   for(int i=1;i<n;i++)
   {
       ll p=(((((i-lh[i])%m)*(arr[i]%m))%m)+(((lh[i]%m)*(arr[lh[i]]%m))%m))%m;
      // cout<<arr[lh[i]]<<" "<<p<<" "<<DP[i+1]<<endl;
       ans=((ans%m)+(((DPs[i]%m)*(DP[i+1]%m))%m))%m;
   }
   
   cout<<ans%m<<endl;
    return 0;
} 