#include <bits/stdc++.h>
using namespace std;
vector<vector<int> > get_triples(int start, int target, vector<int> &v){
	int n = v.size();
	vector<vector<int> > ans;
	int i = start;
	while(i < (n-2)){
		int x = v[i];
		int j = i+1;
		int k = n-1;
		while(j < k){
			int s = (x + v[j] + v[k]);
			if(s == target){
				vector<int> t(3);
				t[0] = x;
				t[1] = v[j];
				t[2] = v[k];
				ans.push_back(t);
				while(v[j] == v[j+1] and j < k)j++;
				while(v[k] == v[k-1] and j < k)k--;
				j++;k--;
			}
			else if(s < target)j++;
			else k--;
		}
		while(v[i] == v[i+1] and i < (n-2))i++;
		i++;
	}
	return ans;
}
int main(){
	int t;
	cin >> t;
	while(t--){
		int n,k;
		cin >> n >> k;
		vector<int> v(n);
		for(int i = 0; i < n; i++)cin >> v[i];
		sort(v.begin(), v.end());
		vector<vector<int> > quads;
		int i = 0;
		while(i < (n-3)){
			vector<vector<int> > triples = get_triples(i+1,k-v[i],v);
			int tsz = triples.size();
			for(int j = 0; j < tsz; j++){
				triples[j].push_back(v[i]);
				sort(triples[j].begin(), triples[j].end());
				quads.push_back(triples[j]);
			}
			while(v[i]==v[i+1] and i <(n-3))i++;
			i++;
		}
		if(quads.size() == 0){
			cout << -1 << endl;
			continue;
		}
		sort(quads.begin(),quads.end());
		for(int i = 0; i < quads.size(); i++){
			for(int j = 0; j < 4; j++)
				cout << quads[i][j] << " ";
			cout << "$";
		}
		cout << endl;
	}
	return 0;
}