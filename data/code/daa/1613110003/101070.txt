import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.StringTokenizer;
 
 class TestClass {
 
 public static void main(String[] args) throws IOException {
  // TODO Auto-generated method stub
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  StringTokenizer st = new StringTokenizer(br.readLine(), " ");
  int N = Integer.parseInt(st.nextToken());
  int M = Integer.parseInt(st.nextToken());
  List<String> listTeacher = new ArrayList<String>();
  Map<String, List<Students>> map = new HashMap<>();
  for (int i = 0; i < N; i++) {
   String teacher = br.readLine();
   listTeacher.add(teacher);
   map.put(teacher, new ArrayList<Students>());
  }
 
  Collections.sort(listTeacher);
 
  for (int i = 0; i < M; i++) {
   st = new StringTokenizer(br.readLine(), " ");
   String teacher = st.nextToken();
   String studentName = st.nextToken();
   int studentAge = Integer.parseInt(st.nextToken());
   List<Students> list = map.get(teacher);
   list.add(new Students(studentName, studentAge));
   map.put(teacher, list);
  }
  Set<Entry<String, List<Students>>> enteries = map.entrySet();
 
  for (String teachers : listTeacher) {
   System.out.println(teachers);
   List<Students> list = map.get(teachers);
   Collections.sort(list);
   for (Students students : list) {
    System.out
      .println(students.getName() + " " + students.getAge());
   }
  }
 
 }
 
 static class Students implements Comparable<Students> {
  private String name;
  private int age;
 
  public Students(String name, int age) {
   // TODO Auto-generated constructor stub
   this.name = name;
   this.age = age;
  }
 
  @Override
  public int compareTo(Students o) {
   // TODO Auto-generated method stub
   return this.age - o.age;
  }
 
  public String getName() {
   return this.name;
  }
 
  public int getAge() {
   return this.age;
  }
 
 }
 
 }