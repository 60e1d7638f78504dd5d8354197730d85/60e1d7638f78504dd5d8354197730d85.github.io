#include<stdio.h>
 
void swap(int[],int,int);
void quicksort(int[],int,int);
 
inline int readint() {
    int n = 0;
    char c = getchar_unlocked();
    while (!('0' <= c && c <= '9')) {
        c = getchar_unlocked();
    }
    while ('0' <= c && c <= '9') {
        n = n * 10 + c - '0';
        c = getchar_unlocked();
    }
    return n;
}
 
int main()
{
int t,i,c,b[10001],g[10001],a,n;
t=readint();
while(t--)
{
	c=0;
	n=readint();
	for(i=0;i<n;i++)
	b[i]=readint();
	for(i=0;i<n;i++)
	g[i]=readint();
	quicksort(g,0,n-1);
	quicksort(b,0,n-1);
	for(i=0;i<n;i++)
	{
		if(g[i]%b[n-1-i]==0 || b[n-1-i]%g[i]==0)
		c++;
	}
	printf("%d\n",c);
}
return 0;
}
 
void quicksort(int arr[],int left,int right)
{
int i, last;
if(left>=right)
return;
swap(arr,left,(left+right)/2);
last=left;
for(i=left+1;i<=right;i++)
if(arr[i]<arr[left])
swap(arr,++last,i);
swap(arr,left,last);
quicksort(arr,left,last-1);
quicksort(arr,last+1,right);
}
 
void swap(int arr[],int i,int j)
{
int temp;
temp=arr[i];
arr[i]=arr[j];
arr[j]=temp;
}