#include "bits/stdc++.h"
 
using namespace std;
 
#define TEST(T) int T; sci(T) ; while(T--)
#define ll long long
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define ins insert
#define pii pair<int,int>
#define all(V) V.begin(),V.end()
#define clr(V,val) memset(V,val,sizeof(V))
#define rep(X,A,N,C) for(X=A;X<=N;X+=C)
#define rept(X,A,N,C) for(X=A;X>=N;X-=C)
#define sci(X) scanf("%d",&X)
#define scl(X) scanf("%lld",&X)
#define scs(X) scanf("%s",&X)
#define pfi(X) printf("%d",X)
#define pfl(X) printf("%lld",X)
#define pfs(X) printf("%s",X)
#define sp printf(" ")
#define nxt printf("\n")
#define endl "\n";
 
const int MX=1e6 + 5;
 
const int INF=1e9;
 
const int M=1000000009;
 
string toBin(ll a) {
 string res = "";
 while (a) {
  res += char((a & 1) + '0');
  a >>= 1;
 }
 reverse(res.begin(), res.end());
 return res;
}
 
int binarySearch(int arr[], int l, int r, int x)
{
  while (l <= r)
  {
    int m = l + (r-l)/2;
    if (arr[m] == x) 
        return m;  
    if (arr[m] < x) 
        l = m + 1; 
    else
         r = m - 1; 
  }
  return -1; 
}
 
bool IsPrime(int number){
 
    if(number < 2) return false;
    if(number == 2) return true;
    if(number % 2 == 0) return false;
    for(int i=3; (i*i)<=number; i+=2){
        if(number % i == 0 ) return false;
    }
    return true;
 
}
 
int GCD(int A, int B) {
    if(B==0)
        return A;
    else
        return GCD(B, A % B);
}
 
int modInverse(int a, int m)
{
    int m0 = m, t, q;
    int x0 = 0, x1 = 1;
 
    if (m == 1)
      return 0;
 
    while (a > 1)
    {
        // q is quotient
        q = a / m;
 
        t = m;
 
        // m is remainder now, process same as
        // Euclid's algo
        m = a % m, a = t;
 
        t = x0;
 
        x0 = x1 - q * x0;
 
        x1 = t;
    }
 
    // Make x1 positive
    if (x1 < 0)
       x1 += m0;
 
    return x1;
}
int ncr(int n, int k)
{
  // Base Cases
  if (k==0 || k==n)
    return 1;
 
  // Recur
  return  ncr(n-1, k-1) + ncr(n-1, k);
}
vector <long long int>dp(10000005,0); 
int main()
{
	ios_base::sync_with_stdio(false);
	dp[1]=1,dp[2]=10;
	for(long long int i=3;i<=10000000;i++)
	{
	    dp[i]=(dp[i-2]%M+((i%M)*(i%M)*(long long int)4)%M-((long long int)6*(i-1))%M+M)%M;
	}
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    cout<<dp[n]<<" ";
	}
	return 0;
}