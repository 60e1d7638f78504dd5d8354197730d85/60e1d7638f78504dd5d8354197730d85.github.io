#include <bits/stdc++.h>
using namespace std;
vector<int> v;
void seive(int prime[],int n)
{
	for(int i=0;i<=n;i++)
	prime[i]=1;
	prime[0]=prime[1]=0;
		for(int i=2;i*i<=n;i++) {
		if(prime[i]==1)
			for(int j=i*i;j<=n;j+=i)
				prime[j]=0;
	}
		for(int i=2;i<=n;i++)
		if(prime[i]==1)
			v.push_back(i);
}
 int main()
{
    int n;
    cin>>n;
    int arr[n+1];
    long long sum[n+1];
    arr[0]=sum[0]=0;
    for(int i=1;i<=n;i++) {
    	cin>>arr[i];
    	if(i==1)
    	sum[i]=arr[i];
    	else
    	sum[i]=arr[i]+sum[i-1];
    }
        int prime[n+2];
    seive(prime,n+1);
    
    if(prime[n]==1) {
    	cout<<sum[n]<<endl;
    	return 0;
    }
        long long int dp[n+1];
     dp[0]=dp[1]=0;
    int largest_prime=-1;
    for(int i=2;i<=n;i++) {
    	
    	if(prime[i]==1) {
    		dp[i]=sum[i]; 
    		largest_prime=i;
    	}
    	else {
    		dp[i]=dp[i-1];
    		for(unsigned int j=0;j<v.size()&&v[j]<=largest_prime;j++)
    			dp[i]=max(dp[i],sum[i]-sum[ i-v[j] ]+dp[ i-v[j]-1 ]);
    	}
    	    }
         cout<<dp[n]<<endl;
    return 0;
}