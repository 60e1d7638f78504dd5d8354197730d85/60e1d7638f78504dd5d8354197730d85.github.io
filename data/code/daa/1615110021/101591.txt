#include<bits/stdc++.h>
#define LL long long
LL power_mod(LL A,LL B,LL M){LL res=1;while(B>0){if(B%2==1){res=(res*A)%M;}A=(A*A)%M;B=B/2;}return res;}
LL mod = 1e9+7;
using namespace std;
LL dp[10050][13];
LL fnc(int n,int p)
{
    LL ans=0;
    if(n<0)
        return 0;
    else if(n==0)
        return 1;
    else if(n==1){
        if(p==1)
            return 1;
        else
            return 2;
    }
    else if(dp[n][p]!=-1)
        return dp[n][p];
    else{
        for(int i=0;i<p;i++){
            ans = (ans + fnc(n-i-1,p))%mod;
        }
        if(p>n)
            ans = (ans+1)%mod;
        return dp[n][p] = ans;
    }
}
int main()
{
    int n,p;
    int t;
    LL ans=0;
    cin>>t;
    memset(dp,-1,sizeof(dp));
    while(t--){
        cin>>n>>p;
        if(n==1){
            cout<<"1"<<endl;
        }
        else
        {
            ans = fnc(n-1,p);
            cout<<ans<<endl;
        }
    }
    return 0;
}
