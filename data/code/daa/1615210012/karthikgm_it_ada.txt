#include <stdio.h>
#include <string.h>
#define max 100005
#define mod 1000000007
typedef long long ll;
typedef unsigned long long ull;
ll power(ll a,ll b) {
    ll retval = 1;
    while (b > 0)
    { 
        if (b & 1) 
            retval = (retval*a)%mod;  
        b = b>>1; 
        a = (a*a)%mod; 
    } 
    return retval; 
} 
ll grtnum(ull ar[max], ull key, ll n) { 
    ll h,m,l; 
    l=0; 
    h=n-1;
    while (l<=h) { 
        m = (l+h)/2; 
        if(ar[m]>key){ 
            h=m-1; 
        } else if (ar[m]<key){ 
            l=m+1; 
        } 
    }    
  return l; 
}  
ll grtnumC(ull ar[max], ull key, ll n) { 
    ll retval; 
    ll h,m,l; 
    l=0; 
    h=n-1; 
  while (l<=h) { 
        m = (l+h)/2; 
        if(ar[m]>key){ 
            h=m-1; 
        } else if (ar[m]<key){ 
            l=m+1; 
        } 
    } 
    retval = n-l;
    return retval; 
}
int main() { 
    char str[max]; 
    ll len,i; 
    ull ans = 0; 
    ull arr[3][max]; 
    ull arra[max]; 
    ull arrb[max]; 
    ll ap = 0,bp = 0,cp = 0; 
     scanf("%s",str); 
    len = strlen(str);
       for (i=0; i<len; i++) { 
        if(str[i] == 'a') { 
            arr[0][ap] = i; 
            ap++; 
        } else if (str[i] == 'b') {
 
            arr[1][bp] = i;
 
            bp++;
 
        } else if (str[i] == 'c') { 
            arr[2][cp] = i; 
            cp++; 
        } 
    } 
    if(ap>0&&bp>0&&cp>0){
        for (i=bp-1; i>=0; i--) { 
            arrb[i] = power(2,grtnumC(arr[2],arr[1][i],cp))-1;
             if(i<bp-1){ 
                arrb[i] = (power(2,grtnumC(arr[2],arr[1][i],cp))-1 + 2*arrb[i+1])%mod;
             } 
        }   
        for (i=0; i<ap; i++) { 
            arra[i] = arrb[grtnum(arr[1],arr[0][i],bp)]; 
        }
        for (i=0; i<ap; i++) { 
            ans = (ans + (arra[i]*power(2, i))%mod)%mod;
        }
    }
    printf("%llu\n",ans);
    return 0; 
}