#include<bits/stdc++.h>
using namespace std;
#define ROW 20
#define COL 20
struct node
{
    int x,y,dist;
};
int a[ROW][COL];
int rowindex[4]={0,-1,0,1};
int colindex[4]={-1,0,1,0};
int main() {
	int t,i,j,val;
	cin>>t;
	int row,col;
	int destx,desty;
	while(t--)
	{   cin>>row>>col;
	    for(i=0;i<row;i++)
	    {
	        for(j=0;j<col;j++)
	        {
	            cin>>val;
	            a[i][j]=val;
	        }
	    }
	    cin>>destx>>desty;
	    if(a[destx][desty]!=1||a[0][0]!=1)
	    {
	        cout<<-1<<endl;
	        continue;
	    }
	    bool visited[row][col];
	    for(i=0;i<row;i++)
	    {
			for(j=0;j<col;j++)
			visited[i][j]=false;
		}
		queue<node> q;
		node n;
		n.x=0;
		n.y=0;
		n.dist=0;
		q.push(n);
		visited[0][0]=true;
		node p;
		while(!q.empty())
		{
			p=q.front();
			if(p.x==destx&&p.y==desty)
			{
				cout<<p.dist<<endl;
				break;
			}
			q.pop();
			for(int i=0;i<4;i++)
			{
			int r=p.x+rowindex[i];
			int c=p.y+colindex[i];
			if(r<row&&r>=0&&c<col&&c>=0&&visited[r][c]==false&&a[r][c])
			{
				node g;
				g.x=r;
				g.y=c;
				g.dist=p.dist+1;
				q.push(g);
				visited[r][c]=true;
			}
			}
		}
		if(p.x!=destx||p.y!=desty)
		cout<<-1<<endl;
	    
	}
	
}