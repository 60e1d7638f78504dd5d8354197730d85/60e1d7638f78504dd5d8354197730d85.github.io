#include<iostream>
#include <vector>
#include<stack>

using namespace std;

int graph[22][22];
int dp[22][22][22];
int find(int s,int d,int k,int n)
{
    int res = 0;
    if (k==0 && s==d)
    return 1;
    if(k<=0)
    return 0;
    
    if (dp[s][d][k] != -1)
    return dp[s][d][k];
    
    for (int i=0;i<n;i++)
    if (graph[s][i])
    res+=find(i,d,k-1,n);
    
    dp[s][d][k] = res;
    return res;
}

int main()
 {
     int t;
     cin>>t;
     while(t--)
     {
         int n;
         cin>>n;
         for (int i=0;i<n;i++)
         for (int j=0;j<n;j++)
         cin>>graph[i][j];
         
         int s,d,k;
         cin>>s>>d>>k;
         
         for (int i=0;i<n;i++)
         for (int j=0;j<n;j++)
         for (int l=0;l<=k;l++)
         dp[i][j][l] = -1;
         
         cout<<find(s,d,k,n)<<endl;
     }
	return 0;
}