#include<bits/stdc++.h>

#define maxS 26
using namespace std;

struct pr
{
	string first ; int second ;
	pr(string s , int i)
	{
		first = s ; second = i ;
	}
};

vector< pr > vec[maxS] ;
int visited[40] ;

bool dfs(pr ss , int n , pr src , int count)
{
	visited[ ss.second ] = 1 ;
	
	if(count==n && src.first[0]==ss.first[ss.first.size()-1])		return 1;
	if(count==n && src.first[0]!=ss.first[ss.first.size()-1])		return 0;
	
	int len = ss.first.size();
	char ch = ss.first[len-1];
	
	for(unsigned i=0;i<vec[ ch-'a' ].size();i++)
	{
		if( visited[ vec[ch-'a'][i].second ]==0 && dfs(vec[ch-'a'][i] , n , src , count+1))
			return 1;
	}
	
	visited[ ss.second ] = 0 ;
	return 0;
}

int compute(int n)
{
	for(int i=0;i<maxS;i++)
	{
		if( vec[i].size()!=0 )
		{
			for(unsigned j=0;j<vec[i].size();j++)
				if(dfs(vec[i][j] , n , vec[i][j] , 1))
					return 1;
					
		}
	}
	return 0;
}

int main()
{
	int t , n ;
	string ss ;
	cin>>t;
	while(t--)
	{
		cin>>n;
		for(int i=0;i<maxS;i++)	vec[i].clear();
		memset(visited , 0 , sizeof(visited));
		for(int i=0;i<n;i++)
		{
			cin>>ss;
			vec[ ss[0]-'a' ].push_back(pr(ss,i)) ;
		}
		
		cout<< compute(n) <<endl;
		
	}
	return 0;
}
