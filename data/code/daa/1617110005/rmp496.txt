#include<stdio.h>
#include<stdlib.h>
struct node {
    long long int val;
    long long int weight;
    struct node * next;
};
long long int max = 0;
long long int maxnode;
void insert(long long int v,struct node ** tail,struct node ** head,long long int length)
{
    struct node * tmp;
    tmp = (struct node *)malloc(sizeof(struct node));
    tmp->val=v;
    tmp->weight =length;
    tmp->next=NULL;
    if(*tail == NULL)
    {
        *tail = tmp;
        *head = tmp;
    }
    else 
    {
        (*tail)->next=tmp;
        (*tail)=tmp;
    }
}
void dfs(long long int u, long long int visit[] ,struct node * head[],long long int path)
{
    visit[u] = 1;
    struct node * p = head[u];
 
    if(max < path)
    {
        max= path;
        maxnode=u;
    }
    while(p != NULL)
    {
        if(visit[p->val] == 0)
            dfs(p->val,visit,head,(p->weight + path));
        p=p->next;
    }
}
int main()
{
    struct node * tail[100005];
    struct node * head[100005];
    long long int visit[100005];
    long long int u,v,i,j,n,m,length,t;
    scanf("%lld",&t);
    while(t--)
    {
        max = 0;
        scanf("%lld",&n);
        for(i=1;i<=n-1;i++)
        {
            scanf("%lld %lld %lld",&u,&v,&length);
            insert(v,&tail[u],&head[u],length);
            insert(u,&tail[v],&head[v],length);
        }
        for(i=1;i<=100000;i++)
            visit[i]=0;
        dfs(1,visit,head,0);
         for(i=1;i<=100001;i++)
        {
            visit[i]=0;
        }
        max = 0;
        dfs(maxnode,visit,head,0);
        if(max < 100)
            printf("0 %lld\n",max);
        if(max > 100 && max < 1000)
            printf("100 %lld\n",max);
        if(max > 1000 && max < 10000)
            printf("1000 %lld\n",max);
        if(max > 10000)
            printf("10000 %lld\n",max);
        for(i=1;i<=100001;i++)
        {
            head[i] = NULL;
            tail[i] = NULL;
            visit[i]=0;
        }
     }
    return 0;
}