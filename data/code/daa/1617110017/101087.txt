#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define p(a,b) pair<a,b>
#define f first
#define s second
#define T int test; cin>>test; while(test--)
#define all(x) x.begin(),x.end()
#define MAX 20
#define MAX_m 1000009
#define MOD 1000000007
#define INF 1e18
typedef long long ll;
#define gc getchar
ll n,a,m,b,q,p,cnt;
 
void get(ll &x)
{
    register ll c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = x*10 + c - 48;}
}
 
vector<bool>visited(MAX);
bool edge[MAX][MAX];
bool dp[MAX][1<<MAX];
 
void check_all_permutations(){
        vector<ll>v;
        for(ll i=0; i<n; i++)
            v.push_back(i);
            p=0;
        do{
            bool valid=true;
            for(ll i=0; i<v.size()-1; i++){
                if(edge[v[i]][v[i+1]] == false){
                    valid=false;
                    break;
                }     
 
            }
            if(valid)
                p++;
     //       for(ll i=0;i<n;++i)
       //     cout<<v[i]<<" ";
         //   cout<<endl;
        }while(next_permutation(v.begin(), v.end()));
}
 
void calc()
{
	ll i,j,k;
	for(i=0;i<n;++i)
	memset(dp[i],0,sizeof(dp[i]));
	
	for(i=0;i<n;++i)
	dp[i][1<<i]=1;
	
	for(i=0;i<(1<<n);++i)
	{
		for(j=0;j<n;++j)
		{
			if(i&(1<<j))
			{
				for(k=0;k<n;++k)
				{
					if((i&(1<<k)) && edge[k][j] && k!=j && dp[k][i^(1<<j)])
					{
						dp[j][i]=true;
						break;
					}
				}
			}
		}
	}
	
	for(i=0;i<n;++i)
	{
		if(dp[i][(1<<n)-1])
		{
			p=i;
			printf("Yes\n");
			return;
		}
	}
	printf("No\n");
	p=-1;
}
 
int main()
{
	
	cin>>n>>m;
	ll i,j,k;
	
	for(i=0;i<n;++i)
	memset(edge[i],0,sizeof(edge[i]));
	
	for(i=0;i<m;++i)
	{
		scanf("%lld%lld",&j,&k);
		--j;--k;
		edge[j][k]=edge[k][j]=1;
	}
	
	check_all_permutations();
	
	cout<<p;
	
	return 0;
}