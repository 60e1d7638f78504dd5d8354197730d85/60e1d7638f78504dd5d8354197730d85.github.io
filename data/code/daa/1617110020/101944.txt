#include <iostream>
#include <bits/stdc++.h>
using namespace std;
typedef long long int ull;
ull luck[1005];
vector <ull> v[1005],temp[1005];
bool vis[1005];
 
void bfs(ull s) {
        queue <ull> q;
        q.push(s);
        vis[ s ] = true;
        while(!q.empty())
        {
            ull p = q.front();
            q.pop();
            for(ull i = 0;i < v[ p ].size() ; i++)
            {
                if(vis[ v[ p ][ i ] ] == false)
                {
                    luck[ v[ p ][ i ] ] = luck[ p ]+1;
                     q.push(v[ p ][ i ]);
                     vis[ v[ p ][ i ] ] = true;
                }
            }
        }
    }
 
 
int main()
{
    ios_base::sync_with_stdio(false);
 
    memset(luck,-1,sizeof(luck));
    luck[0]=0;
    ull a,b,sub=1,x,y;
    cin>>a>>b;
    while(b--)
    {
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    bfs(0);
    for(ull i=1;i<a;i++)
        cout<<luck[i]<<endl;
    return 0;
}