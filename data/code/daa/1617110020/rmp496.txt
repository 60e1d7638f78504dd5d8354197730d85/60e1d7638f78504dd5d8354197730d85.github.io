#include <bits/stdc++.h>
using namespace std;
 
const long mod = 1e9+7;
 
vector<int> persons[1000];
int luckp[1000];
bool seen[1000];
 
void luckiness(int p) {
    for (int d : persons[p]) {
        if (d == -1) continue;
        luckp[d] = 1+luckp[p];
    }
    for (int d : persons[p]) {
        if (d == -1) continue;
        luckiness(d);
    }
}
 
void build(int p) {
    seen[p] = true;
    for (int &d : persons[p]) {
        if (seen[d]) {
            d = -1;
        }
    }
    
    for (int d : persons[p]) {
        if (d == -1) continue;
        build(d);
    }
}
 
void debug(int p) {
    cout << p << ": ";
    for (int d : persons[p]) {
        if (d == -1) continue;
        cout << d << ' ';
    }
    cout << endl;
    for (int d : persons[p]) {
        if (d == -1) continue;
        debug(d);
    }
}
 
int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    luckp[0] = 0;
    seen[0] = true;
    for (int i = 1; i < 1000; ++i) {
        luckp[i] = -1;
        seen[i] = false;
    }
    
    int a, b;
    cin >> a >> b;
    
    for (int i = 0; i < b; ++i) {
        int p1, p2;
        cin >> p1 >> p2;
        persons[p1].push_back(p2);
        persons[p2].push_back(p1);
    }
    
    for (int q = 0; q < a; ++q) {
        for (int i = 0; i < a; ++i) {
            if (luckp[i] != -1) {
                for (int d : persons[i]) {
                    if (luckp[d] == -1) {
                        luckp[d] = 1+luckp[i];
                    } else {
                        luckp[d] = min(1+luckp[i], luckp[d]);
                    }
                }
            }
        }
    }
    
    for (int i = 1; i < a; ++i) {
        cout << luckp[i] << '\n';
    }
    
    return 0;
}