#include <bits/stdc++.h>
#define pb push_back
 
using namespace std;
 
const int N = 5 * 1e5, oo = 1e9;
int n,m,d[N],ans,p[N];
vector < int > mem[N],nho[N];
bool vis[N],kt[N];
 
struct data {
    int x,y,val;
}a[N];
 
bool cmp(data a, data b) {
    return (a.val < b.val);
}
 
void load() {
    #ifndef ONLINE_JUDGE
    freopen("bai2.inp","r",stdin);
    freopen("bai2.out","w",stdout);
    #endif 
}
 
void dfs(int u , int val) {
 
    vis[u] = 1;
    for (int i = 0 ; i < mem[u].size() ; ++ i) {
        int v = mem[u][i];
        if (!vis[v]) {
            d[v] = min(d[v],val);
            dfs(v,val);
        }
    }
 
    return;
}
 
void dfs_2(int u , int val) {
 
    kt[u] = 1;
    for (int i = 0 ; i < nho[u].size() ; ++ i) {
        int v = nho[u][i];
        if (!kt[v]) {
            p[v] = min(p[v],val);
            dfs_2(v,val);
        }
    }
 
    return;
}
void process() {
 
    scanf("%d%d",&n,&m);
 
    for (int i = 1 ; i <= m ; ++ i) {
        scanf("%d%d%d",&a[i].x,&a[i].y,&a[i].val);
        mem[a[i].x].pb(a[i].y);
        nho[a[i].y].pb(a[i].x);
    }
 
    for (int i = 1 ; i <= n ; ++ i)
        d[i] = oo, p[i] = oo;
 
    sort(a+1,a+1+m,cmp);
   for (int i = 1 ; i <= m ; ++ i) {
        p[a[i].x] = min(p[a[i].x],min(p[a[i].y],a[i].val));
        if (!kt[a[i].x])
            dfs_2(a[i].x,p[a[i].x]);
    }
 
    for (int i = 1 ; i <= m ; ++ i) {
 
        ans = max(ans,a[i].val - d[a[i].x]);
        ans = max(ans,a[i].val - p[a[i].y]);
 
        d[a[i].y] = min(d[a[i].y],min(d[a[i].x],a[i].val));
 
        if (!vis[a[i].y]) dfs(a[i].y,d[a[i].y]);
    }
 
    printf("%d",ans);
    return ;
}
 
int main()
{
    //load();
    process();
    return 0;
}