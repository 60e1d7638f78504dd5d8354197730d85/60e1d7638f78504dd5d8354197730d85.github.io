#include <cstdio>
#include <algorithm>
#include <numeric>
#include <utility>
#include <vector>
 
#define st first
#define nd second
 
using namespace std;
 
typedef long long ll;
typedef pair<int, int> PII;
typedef pair<ll, int> PLI;
 
const int MAXN = 1E5 + 10;
 
PII b[MAXN];
int pre[MAXN], nex[MAXN];
 
int main(){
	int cas;
	scanf("%d", &cas);
	while (cas--){
		int n, m;
		scanf("%d%d", &n, &m);
		for (int i = 1; i <= n; ++i){
			scanf("%d", &b[i].st);
			b[i].nd = i;
			pre[i] = i - 1, nex[i] = i + 1;
		}
		nex[0] = 1, pre[n + 1] = n;
		sort(b + 1, b + n + 1);
		vector<PLI> c;
		for (int i = 1; i <= n; ++i){
			int u = b[i].nd;
			ll t = (ll)(u - pre[u]) * (nex[u] - u);
			nex[pre[u]] = nex[u];
			pre[nex[u]] = pre[u];
			if (!c.empty() && c.back().nd == b[i].st)
				c.back().st += t;
			else
				c.push_back(PLI(t, b[i].st));
		}
		reverse(c.begin(), c.end());
		for (int i = 1; i < c.size(); ++i)
			c[i].st += c[i - 1].st;
		for (int i = 0; i < m; ++i){
			ll t;
			scanf("%lld", &t);
			printf("%d\n", lower_bound(c.begin(), c.end(), PLI(t, 0))->nd);
		}
	}
	return 0;
}
