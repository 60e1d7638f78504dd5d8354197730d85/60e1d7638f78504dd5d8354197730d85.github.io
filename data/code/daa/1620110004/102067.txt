#include <stdio.h>
unsigned int countSetBitsUtil(unsigned int x);
int bitCount = 0; // initialize the result
// Returns count of set bits present in all
// numbers from 1 to n
unsigned int countSetBits(unsigned int n)
{
int i, bitCount=0;
for (i = 1; i <= n; i++)
bitCount += countSetBitsUtil(i);
return bitCount;
}
// A utility function to count set bits 
// in a number x
unsigned int countSetBitsUtil(unsigned int x)
{
if (x <= 0)
return 0;
return (x % 2 == 0 ? 0 : 1) + countSetBitsUtil(x / 2);
}
int main()
{
int n;
scanf("%d",&n);
printf("Total set bit count is %d", countSetBits(n));
return 0;
}
