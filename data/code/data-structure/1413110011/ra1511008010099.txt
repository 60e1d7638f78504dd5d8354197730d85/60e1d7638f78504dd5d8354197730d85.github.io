//Binary Search && Prefix sum
#include <bits/stdc++.h>

using namespace std;

#define mod 1000000009

vector<long long int> c;

void bSearch(vector<int> x,vector<int> t,int Z,int T)
{
int l=0,r=t.size()-1;
T = T-Z;
int f=0;
while(l<=r)
{
int m = l+(r-l)/2;

if(t[m]==T)
{
f=1;
l = m+1;
}
else if(t[m]<T)
{
l = m+1;
}
else{r = m-1;}
}

int i;

if(f==1){r--;}
cout<<c[x.size()-1]-( (r<0)?0:c[r] )<<endl;

}

int main()
{
int q,i,w,Z,T;

vector<int> x,t;

cin>>q;

long long int C=0;

for(i=0;i<q;i++)
{
cin>>w;

if(w==1)
{
cin>>Z>>T;
x.push_back(Z);
t.push_back(T);
c.push_back(C+Z);
C=C+Z;
}
else
{
cin>>Z>>T;

if(T-Z>t[t.size()-1])
{ cout<<0<<endl; }
else if(T-Z<t[0]){
cout<<c[x.size()-1]<<endl;	
}
else{ bSearch(x,t,Z,T); }

}

}

return 0;
}