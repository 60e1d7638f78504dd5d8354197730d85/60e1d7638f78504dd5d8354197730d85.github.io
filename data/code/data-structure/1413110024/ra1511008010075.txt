#include <bits/stdc++.h>
using namespace std;
const int maxn = 1000005;
const long long base = 1000000007;
int n,a[maxn],b[maxn],k[maxn];
char c[maxn];
long long d[maxn],dem[maxn],dem1[maxn];
long long modum(long long x)
{
    return ((x%base) + base) % base;
}
int main()
{
    int i,q,cnt1,cnt = 0;
    cin >> n >> q;
    for (i=1;i<=n;i++){
        cin >> a[i];
        cnt++;b[cnt] = a[i];
    }
    for (i=1;i<=q;i++){
        cin >> c[i] >> k[i];
        cnt++;b[cnt] = k[i];
    }
    cnt++;b[cnt] = 0;dem[1] = 1;sort(a+1,a+n+1);sort(b+1,b+cnt+1);d[1] = 1;cnt1 = cnt;cnt = 1;
    for (i=2;i<=cnt1;i++){
        if (b[i] != b[i-1]) cnt++;
        b[cnt] = b[i];
    }
    for (i=1;i<=n;i++){
        a[i] = std::lower_bound(b+1,b+cnt+1,a[i]) - b;
        if (i > 1) d[i] = (d[i-1]*2) % base;
    }
    for (i=1;i<=n;i++) dem[a[i]] = (dem[a[i]] + d[i]) % base,dem1[a[i]] = (dem1[a[i]] + d[i]) % base;
    for (i=2;i<=cnt;i++) dem[i] = (dem[i] + dem[i-1]) % base;
    for (i=cnt-1;i>=1;i--) dem1[i] = (dem1[i] + dem1[i+1]) % base;
    for (i=1;i<=q;i++){
        k[i] = std::lower_bound(b+1,b+cnt+1,k[i]) - b;
        if (c[i] == '=') cout << modum(dem[k[i]] - dem[k[i]-1]) << "\n";
        else if (c[i] == '<') cout << dem[k[i]-1] << "\n";
        else cout << dem1[k[i]+1] << "\n";
    }
    return 0;
}