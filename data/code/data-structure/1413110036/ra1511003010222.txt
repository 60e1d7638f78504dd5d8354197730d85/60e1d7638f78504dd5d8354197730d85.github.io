#include<bits/stdc++.h>
#define lli long long int
#define pll pair<lli,lli>
#define mp make_pair
#define pb push_back
#define f(i,n) for(lli i=0;i<n;i++)
#define lp(i,a,b) for(lli i=a;i<b;i++)
const lli mod1 = 1000000007;
using namespace std;
lli power(lli a,lli b)
{
    lli x=1,y=a;
    while(b>0)
    {
        if(b%2==1)
        {
            x=(x*y);
            if(x>mod1) x%=mod1;
        }
        y = (y*y);
        if(y>mod1) y%=mod1;
        b /= 2;
    }
    return x;
}
lli gcd(lli a,lli b)
{
    if(b==0)
          return a;
    else
        return gcd(b, a%b);
}
double distance(double x1,double y1,double x2,double y2)
{
    return sqrt(((x1-x2)*(x1-x2))+((y1-y2)*(y1-y2)));
}
lli fceil(lli a[],lli n,lli key)
{
    lli l=-1,r=n-1;
    while(r-l>1)
    {
        lli m=l+(r-l)/2;
        if(a[m]>=key)
        {
            r=m;
        }
        else
        {
            l=m;
        }
    }
    return r;
}
lli ffloor(lli a[],lli n,lli key)
{
    lli l=0,r=n;
    while(r-l>1)
    {
        lli m=l+(r-l)/2;
        if(a[m]<=key)
        {
            l=m;
        }
        else
        {
            r=m;
        }
    }
    return l;
}
lli a[1000001];
bool func(lli value,lli n)
{
    bool ans=true;
    f(i,n)
    {
        lp(j,i+1,n)
        {
            ans=ans&&((a[j]+value)>=max(a[i]-value,(lli)1)+(j-i));
            if(!ans)
            {
                return false;
            }
        }
    }
    return true;
}
int main()
{
    std::ios::sync_with_stdio(false);
    lli tn = 1;
    //scanf("%lld",&tn);
    while(tn--)
    {
        lli n,k,p;
        scanf("%lld%lld%lld",&n,&k,&p);
        f(i,n)
        {
            scanf("%lld",&a[i]);
        }
        sort(a,a+n);
        lli flag=1;
        f(i,n-k+1)
        {
            if(a[i+k-1]-a[i]<=2*p)
            {
                printf("NO\n");
                flag=0;
                break;
            }
        }
        if(flag)
        {
            printf("YES\n");
        }
    }
    return 0;
}
