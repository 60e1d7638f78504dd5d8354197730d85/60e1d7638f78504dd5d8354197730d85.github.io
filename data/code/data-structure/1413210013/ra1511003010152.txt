#include <iostream>
#include<math.h>
#include<limits.h>
using namespace std;
 
int findMissingRec(int arr[], int low,
                   int high, int ratio)
{
    if (low >= high)
        return INT_MAX;
    int mid = low + (high - low)/2;
 
    if (arr[mid+1]/arr[mid] != ratio)
        return (arr[mid] * ratio);
 
    if ((mid > 0) && (arr[mid]/arr[mid-1]) != ratio)
        return (arr[mid-1] * ratio);
 
    if (arr[mid] == arr[0] * (pow(ratio, mid)) )
        return findMissingRec(arr, mid+1, high, ratio);
 
    return findMissingRec(arr, low, mid-1, ratio);
}
 
int findMissing(int arr[], int n)
{
    int ratio = (float) pow(arr[n-1]/arr[0], 1.0/n);
 
    return findMissingRec(arr, 0, n-1, ratio);
}
int main(void)
{
    int arr[10],i,n;
    cin>>n;
    for(i=0;i<n;i++)
      cin>>arr[i];
    cout <<"The missing element of Geometric Progression series is "<< findMissing(arr, n);
    return 0;
}