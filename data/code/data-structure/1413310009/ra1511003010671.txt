#include<iostream>
#include<cstdio>
#include<iomanip>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
#include<sstream>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
ll power(ll a,ll b)
{
 if(!b)
  return 1;
 if(b==1)
  return a;
 ll temp=power(a,b/2);
 temp=(temp*temp)%mod;
 if(b&1)
   temp=(temp*a)%mod;
 return temp;
}
 
class graph
{
 vi * adj;
 int time;
 public:
  graph( int v)
  {
   adj = new vi[v];
   time = 0;
  }
  void add_edge(int u, int v)
  {
   adj[u].pb( v);
   adj[v].pb( u);
  }
};
 
 
int main()
{
 ios_base::sync_with_stdio(false);
 int i, m, n, c;
 cin >> n >> m;
 vl v(n);
 ll ans=0;
 for( i=0;i<n;i++ )
 {
  cin >> v[i];
  ans +=v[i];
 }
 ll  l, r, mid, val;
// ans=1e17;
 l=0;
 //cout << ans <<endl;
 r=ans+1;
   bool flag;
 while( l <= r)
 {
  mid=(l+r)/2;
  i=0;
  c=0;
  while( i < n)
  {
   val=mid;
   c++;
   bool flag=false;
   while((i<n) && (v[i]<=val))
   {
    flag=true;
    val-=v[i];
    i++;
   }
   if(!flag)
   {
    c=m+1;
    break;
   }
  }
  if( c==m)
  {
   //cout << "mid="<<mid<<endl;
   ans=min(ans, mid);
   r=mid-1;
  }
  else
  {
   if( c < m)
   {
    ans=min(ans, mid);
    r=mid-1;
   }
   else
    l=mid+1;
  }
   }
 cout << ans;
 return 0;
}