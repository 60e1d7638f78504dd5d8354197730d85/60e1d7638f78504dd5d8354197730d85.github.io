#include <string>
#include <string.h>
#include <cmath>
#include <map>
#include <set>
#include <list>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cstdio>
#include <vector>
#include <cstdlib>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <cassert>
 
using namespace std;
 
void swap(int* a, int* b)
{
    int t = *a;
    *a = *b;
    *b = t;
}
 
int partition (int arr[], int low, int high)
{
    int pivot = abs(arr[high]);    
    int i = (low - 1);  
 
    for (int j = low; j <= high- 1; j++)
    {
        if (abs(arr[j]) <= pivot)
        {
            i++;    
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}
 
 
void quickSort(int arr[], int low, int high)
{
    if (low < high)
    {
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}
 
void printArray(int arr[], int size)
{
    int i;
    for (i=0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}
 
int main()
{
    int n;
    scanf("%d", &n);
    int A[n];
    
    for(int i = 0; i < n; i++)
    {
        scanf("%d", &A[i]);
    }
    
    quickSort(A, 0, n-1);
    printArray(A, n);
        
    return 0;
}