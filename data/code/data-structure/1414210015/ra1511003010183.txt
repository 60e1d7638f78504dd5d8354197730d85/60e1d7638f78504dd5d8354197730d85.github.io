#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define M 102400
 
struct point{
    long int x,y;
};
 
int cmp(const void *a,const void *b){
    struct point p = *(struct point*)a;
    struct point q = *(struct point*)b;
    if(p.x>q.x)
        return 1;
    else if(p.x==q.x && p.y>q.y)
        return 1;
    return 0;
}
 
int main()
{
    char *s=(char*)malloc(M*sizeof(char));
    scanf("%s",s);
    
    long int len =strlen(s);
    long int i,icy=0;
    
    struct point p[len+1];              //array to store the steps
    p[0].x=0;
    p[0].y=0;                           //initial step
    
    for(i=0; i<len; i++){
        if(s[i]=='L'){                  //for lower step x,y-1
            p[i+1].x=p[i].x;  
            p[i+1].y=(p[i].y)-1 ;
        }
        else if(s[i]=='R'){             //for right step x,y+1
            p[i+1].x=p[i].x;
            p[i+1].y=(p[i].y)+1;
        }
        else if(s[i]=='U'){             //for upper step x-1,y
            p[i+1].x=(p[i].x)-1;
            p[i+1].y=p[i].y;
        }
        else{                           //for down step x+1,y
            p[i+1].x=(p[i].x)+1;
            p[i+1].y=p[i].y;
        }
    }
    qsort(p,len+1,sizeof(struct point),cmp);
    
    for(i=0; i<len; i++){
        if(p[i+1].x==p[i].x && p[i+1].y==p[i].y)   //if 2 steps are equal
            icy++;
    }
    printf("%ld",icy);
    
    return 0;
}