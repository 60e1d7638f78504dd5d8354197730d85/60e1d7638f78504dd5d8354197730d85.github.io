#include<iostream>
using namespace std;
struct node
{
    int info;
    struct node *next;
}*start;

class single_llist
{
    public:
        node* create_node(int);
        void insert_begin(int);
        void display();
        single_llist() 
        {
            start = NULL;
        }
};
 
int main()
{
    int N,k,i;
    cin>>N;
    single_llist sl;
    start = NULL;
    for(int i=0;i<N;i++){
            cin>>k;
            sl.insert_begin(k);      
        }
    cout<<"Linked List"<<endl;
    sl.display();
  
    return 0;
}

node *single_llist::create_node(int value)
{
    struct node *temp, *s;
    temp = new(struct node); 
    if (temp == NULL)
    {
        cout<<"Memory not allocated "<<endl;
        return 0;
    }
    else
    {
        temp->info = value;
        temp->next = NULL;     
        return temp;
    }
}
 
void single_llist::insert_begin(int value)
{
    struct node *temp, *p;
    temp = create_node(value);
    if (start == NULL)
    {
        start = temp;
        start->next = NULL;          
    } 
    else
    {
        p = start;
        start = temp;
        start->next = p;
    }
}

void single_llist::display()
{
    struct node *temp;
    if (start == NULL)
    {
        cout<<"The List is Empty"<<endl;
        return;
    }
    temp = start;
    while (temp != NULL)
    {
        cout<<"->"<<temp->info;
        temp = temp->next;
    }
}