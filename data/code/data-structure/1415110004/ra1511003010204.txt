#include <stdio.h>
#include <stdlib.h>
//#include <malloc.h>

struct node
{
  int num;
  struct node *link;
};
struct node *start=NULL;

struct node *insertion_before(struct node *);
//int search(int);
 /*int search(int s)
{ int flag=0;
  struct node *ptr;
  ptr=start;
  while(ptr!=NULL)
  {
    if(ptr->num==s)
     {
      flag++;
      break;
    }
    else
      ptr=ptr->link;
  }
 if(flag>0)
  return 0;
 else
  return 1;
  
}*/
struct node *insertion_before(struct node *start)
{ int val;
  struct node *newnode,*ptr,*preptr;
  newnode=(struct node *)malloc(sizeof(struct node));
  scanf("%d",&val);
  scanf("%d",&newnode->num);
  //ptr=start;
  newnode->link=NULL;
  ptr=start;
 int flag=0;
   while(ptr->num!=val)
  { //flag++;
    if(ptr->link!=NULL)
    {   
   preptr=ptr;
    ptr=ptr->link;
    }
    else {
    printf("Node not found!\n");
      flag=1;
      break;
    }
  }
 if(flag==0)
 {  
  preptr->link=newnode;
  newnode->link=ptr;
   return start;
 }
 else if(flag==1)
 { 
  return start;
}
}
int main()
{
  int n,i;
  scanf("%d",&n);
  struct node *newnode;
  
  for(i=0;i<n;i++)
  { if(start==NULL)
   { 
     newnode=(struct node *)malloc(sizeof(struct node));
     scanf("%d",&newnode->num);
    newnode->link=NULL;
    start=newnode;
   }
   else
   { struct node *ptr,*newnode;
   newnode=(struct node *)malloc(sizeof(struct node));
     scanf("%d",&newnode->num);
     newnode->link=NULL;
     ptr=start;
     while(ptr->link!=NULL)
     {
     	ptr=ptr->link;
	 }
	 ptr->link=newnode;
	 newnode->link=NULL;
     
   }
  }
  start=insertion_before(start);
  struct node *ptr;
  ptr=start;
  printf("Linked List :\n");
  while(ptr!=NULL)
  {
    printf("->%d",ptr->num);
      ptr=ptr->link;
  }
  /*scanf("%d",&s);
  int res=search(s);
  if(res==0)
    printf("Yes");
  else if(res>=1)
    printf("No");*/
	return 0;
}