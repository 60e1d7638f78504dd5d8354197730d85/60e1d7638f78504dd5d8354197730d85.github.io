#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
const int N = 1000*1000+5;
int n, arr[N], next_right[N], maxlen[N], next_left[N];
set<int> distinct_;
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>n;
    for(int i=1;i<=n;i++){
    	cin>>arr[i];
    	distinct_.insert(arr[i]);
    }
    stack<int> st;
    for(int i=n;i>=1;i--){
    	next_right[i] = -1;
    	while(!st.empty() && arr[st.top()] < arr[i])
    		st.pop();
    	if(!st.empty())
    		next_right[i] = st.top();
    	st.push(i);
    }
    while(!st.empty())
    	st.pop();
    for(int i=1;i<=n;i++){
    	next_left[i] = 0;
    	while(!st.empty() && arr[st.top()] < arr[i])
    		st.pop();
    	if(!st.empty())
    		next_left[i] = st.top();
    	st.push(i);
    }
    for(int i=1;i<=n;i++){
    	if(next_right[i] != -1)
    		maxlen[next_right[i]-i] = max(maxlen[next_right[i]-i], i - next_left[i]);
    }
    ll ans = 0;
    for(int i=1;i<=n;i++)
    	ans += maxlen[i];
    cout<<ans;
    return 0;
}
