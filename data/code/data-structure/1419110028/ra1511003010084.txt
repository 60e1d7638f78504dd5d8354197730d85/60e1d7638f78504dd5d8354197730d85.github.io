#include <stdio.h>
# define N 1001
int graph1[N][N],graph2[N][N];
int graph[N][N];
int vis1[N],vis2[N],vis[N];
int type;
void DFS1(int node,int y){
	
	vis1[node]=1;
  int i;
  
	for(i=0;i<y;i++){
		if(graph1[node][i]==1&&vis1[i]==0){
			DFS1(i,y);
		}
	}
	return;
}
void DFS2(int node,int y){
	vis2[node]=1;
  int i;
	for(i=0;i<y;i++){
		if(graph2[node][i]==1&&vis2[i]==0){
			DFS2(i,y);
		}
	}
}
void DFS(int node,int y){
	vis[node]=1;
  int i;
	for( i=0;i<y;i++){
		if(graph[node][i]==3&&vis[i]==0){
			DFS(i,y);
			type++;
		}
	}
}
int connected1(int x){
	DFS1(0,x);
	int c=1,i;
	for(i=0;i<x;i++){
		if(vis1[i]==0){
			c=0;
			break;
		}
	}
	return c;
}
int connected2(int x){
	DFS2(0,x);
	int c=1,i;
	for( i=0;i<x;i++){
		if(vis2[i]==0){
			c=0;
			break;
		}
	}
	return c;
}
int main(void) {
	int n,m,count=0;
	type=0;
	scanf("%d %d\n",&n,&m);
	int a,b,c,i,j;
	for( i=0;i<n;i++){
		vis1[i]=0;
		vis2[i]=0;
		vis[i]=0;
	}
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			graph1[i][j]=0;
			graph2[i][j]=0;
			graph[i][j]=0;
		}
	}
	for(i=0;i<m;i++){
		scanf("%d %d %d",&a,&b,&c);
		a=a-1;
		b=b-1;
		graph[a][b]=c;
		graph[b][a]=c;
		if(c==1){
			graph1[a][b]=1;
			graph1[b][a]=1;
		}
		else if(c==2){
			graph2[a][b]=1;
			graph2[b][a]=1;
		}
		else{
			graph1[a][b]=1;
			graph1[b][a]=1;
			graph2[a][b]=1;
			graph2[b][a]=1;
		}
	}
	if(connected1(n)&&connected2(n)){
		for( i=0;i<n;i++){
			if(vis[i]==0){
				count++;
				DFS(i,n);
			}
		}
		printf("%d",m-type-2*(count-1));
	}
	else printf("-1\n");
	return 0;
}