#include <stdio.h>
#include<string.h>
#include<stdlib.h>
 
int main()
{
    int test,i;
    int fun();
    
    scanf("%d",&test);
    int *ptr=(int *)malloc(sizeof(int)*test);
    
    for(i=0;i<test;i++)
    ptr[i]=fun();				// building the output array
    
    for(i=0;i<test;i++)			// printing the output
    {
    	if(ptr[i]==0)
    	printf("Not possible\n");
    	else
    	printf("Possible\n");
    }
    
    return 0;
}
 
 
int fun()
{
	int n,k,i,u,v;
	void mergesort(int *,int,int);
	char name[100];
	scanf("%d %d",&n,&k);
	
	int *length=(int *)malloc(sizeof(int)*n);
	
	for(i=0;i<n;i++)
	{
		scanf("%s",name);
		length[i]=strlen(name);
	}
	
	mergesort(length,0,n-1);		// array of length sorted
	
	for(i=0;i<n;i=i+0)
	{
		v=length[i];
		u=i+k-1;
		while(i<=u)
		{
			if(length[i]==v)
			{
				i++;
			}
			else
			return 0;
		}
	}
	return 1;
}
 
void mergesort(int *arr,int low,int high)
{
	int mid;
	void merge(int *,int,int);
 
	if(low>=high)			// Terminating condition
	return;
 
	else
	{
		mid=(low+high)/2;
		mergesort(arr,low,mid);
		mergesort(arr,mid+1,high);
		merge(arr,low,high);
	}
}
 
void merge(int *arr,int low,int high)
{
	int brr[high+1];
	int mid=(low+high)/2;
	int i=low,j=mid+1,index=low,k;
 
	while(i<=mid && j<=high)
	{
		if(arr[j]>arr[i])
		{
		brr[index]=arr[j];
		j++;
		index++;
		}
 
		else
		{
		brr[index]=arr[i];
		i++;
		index++;
		}
	}
 
	if(i==mid+1)
	{
		while(j<=high)
		{
			brr[index]=arr[j];
			index++;
			j++;
		}
	}
 
	else if(j==high+1)
	{
		while(i<=mid)
		{
		  brr[index]=arr[i];
		  i++;
		  index++;
		}
	}
 
	for(k=low;k<=high;k++)
	arr[k]=brr[k];
}