import java.io.*;
import java.util.*;
public class TestClass {
   
     
    /* Driver program to test above function */
    public static void main(String[] args) 
    {	 Scanner s=new Scanner(System.in);
         int t=s.nextInt();  
     int i;
       for(i=0;i<t;i++) 
       { 	 
        	
        	int m=s.nextInt(); 
         	int arr[] = new int[m]; 
          for(i=0;i<m;i++) 
            arr[i]=s.nextInt(); 
         	int n=s.nextInt();
        System.out.println(""+ findMinDiff(arr, m, n));
       }     
    } 
  static int findMinDiff(int arr[], int n, 
                                    int m)
    {
        // if there are no chocolates or 
        // number of students is 0
        if (m == 0 || n == 0)
            return 0;
      
        // Sort the given packets
        Arrays.sort(arr);
      
        // Number of students cannot be
        // more than number of packets
        if (n < m)
           return -1;
      
        // Largest number of chocolates
        int min_diff = Integer.MAX_VALUE;
      
        // Find the subarray of size m 
        // such that difference between 
        // last (maximum in case of 
        // sorted) and first (minimum in
        // case of sorted) elements of 
        // subarray is minimum.
        int first = 0, last = 0;
        for (int i = 0; i + m - 1 < n; i++)
        {
            int diff = arr[i+m-1] - arr[i];
            if (diff < min_diff)
            {
                min_diff = diff;
                first = i;
                last = i + m - 1;
            }
        }
        return (arr[last] - arr[first]);
  }
}
	