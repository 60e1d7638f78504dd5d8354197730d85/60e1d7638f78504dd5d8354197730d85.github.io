import java.io.IOException;
import java.io.InputStream;
import java.util.InputMismatchException;
 
public class TestClass {
	public static void main(String[] args) throws IOException {
		solve();
	}
 
	public static void solve() throws IOException {
		InputStream inputStream = System.in;
		AInputReader in = new AInputReader(inputStream);
		int TestCases = in.readInt();
 
		for (int i = 0; i < TestCases; i++) {
 
			int n = in.readInt();
			int k = in.readInt();
			int c = 0;
			for (int j = 0; j < n; j++) {
				int pos = in.readInt();
				if (pos % 2 == 0) {
					c++;
				}
 
			}
 
			if (k == 0) {
				if (c < n) {
					System.out.println("YES");
				} else {
					System.out.println("NO");
				}
 
			} else if (c >= k) {
				System.out.println("YES");
			} else {
				System.out.println("NO");
			}
		}
	}
}
 
class AInputReader {
	private final InputStream stream;
	private final byte[] buf = new byte[1024];
	private int curChar;
	private int numChars;
 
	public AInputReader(InputStream stream) {
		this.stream = stream;
	}
 
	public int read() {
		if (numChars == -1)
			throw new InputMismatchException();
		if (curChar >= numChars) {
			curChar = 0;
			try {
				numChars = stream.read(buf);
			} catch (IOException e) {
				throw new InputMismatchException();
			}
			if (numChars <= 0)
				return -1;
		}
 
		return buf[curChar++];
	}
 
	public int readInt() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
 
		int sgn = 1;
		if (c == '-') {
			sgn = -1;
			c = read();
		}
 
		int res = 0;
		do {
			if (c < '0' || c > '9')
				throw new InputMismatchException();
			res *= 10;
			res += c - '0';
			c = read();
		} while (!isSpaceChar(c));
 
		return res * sgn;
	}
 
	public String readString() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
 
		StringBuffer res = new StringBuffer();
		do {
			res.appendCodePoint(c);
			c = read();
		} while (!isSpaceChar(c));
 
		return res.toString();
	}
 
	public static boolean isSpaceChar(int c) {
		return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
	}
 
	public String next() {
		return readString();
	}
}