import java.io.*;
import java.util.*;
public class TestClass {
	 
public static void main(String [] args) throws Exception
    {
        MyInputReader in = new MyInputReader(System.in);
        PrintWriter pw = new PrintWriter(System.out);
        int T = in.nextInt();
        int flag = 0;
 
        for(int q=0; q<T; q++)
        {
            int n = in.nextInt();
            int dummy;
            if(n<2)
            {
                for(int i=0; i<n; i++)
                    dummy = in.nextInt();
                pw.println("UNFIT");
                continue;
            }
            int x, y;
            int result = 0;
            int min = in.nextInt();
            
            for(int i=0; i<n-1; i++)
            {
                int temp = in.nextInt();
                int temp1 = temp - min;
                //System.out.println(temp+" "+min);
                if(temp1>result)
                {
                    x = temp;
                    result = temp1;
                }
                else if(temp<min)
                {
                    min = temp;
                }
            }
            if(result>=1)
                pw.println(result);
            else
                pw.println("UNFIT");
            pw.flush();
            
        }        
    }
    
    static class MyInputReader
    {
	final private int BUFFER_SIZE = 1 << 17;
 
	private DataInputStream din;
	private byte[] buffer;
	private int bufferPointer, bytesRead;
	
	public MyInputReader(InputStream in)
	{
		din = new DataInputStream(in);
		buffer = new byte[BUFFER_SIZE];
		bufferPointer = bytesRead = 0;
	}
        
        public String nextString() throws Exception
	{
		StringBuffer sb=new StringBuffer("");
		byte c = read();
		while(c <= '\n') 
			c = read();
		do
		{
		   sb.append((char)c);
		   c=read();
		}
		while(c>'\n');
		
		return sb.toString();
	}
        
	public String nextWord() throws Exception
	{
		StringBuffer sb=new StringBuffer("");
		byte c = read();
		while(c <= ' ') 
			c = read();
		do
		{
		   sb.append((char)c);
		   c=read();
		}
		while(c>' ');
		
		return sb.toString();
	}
	
	public char nextChar() throws Exception
	{
		byte c=read();
		while(c<=' ') 
			c= read();
		
		return (char)c;
	}
	
	public int nextInt() throws Exception
	{
		int ret = 0;
		byte c = read();
		while(c <= ' ') 
			c = read();
		boolean neg = c == '-';
		if(neg) 
			c = read();
		do
		{
		  	ret = ret * 10 + c - '0';
		 	c = read();
		} 
		while (c > ' ');
		
		if(neg) 
			return -ret;
		
		return ret;
	}
	
	public long nextLong() throws Exception
	{
		long ret = 0;
		byte c = read();
		
		while (c <= ' ') 
			c = read();
		boolean neg = c == '-';
		if(neg) 
			c = read();
		
		do
		{
		  	ret = ret * 10 + c - '0';
		 	c = read();
		} 
		while (c > ' ');
		
		if(neg) 
			return -ret;
		
		return ret;
	}
	
	private void fillBuffer() throws Exception
	{
		bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);
		if(bytesRead == -1) 
			buffer[0] = -1;
	}
	
	private byte read() throws Exception
	{
		if(bufferPointer == bytesRead) 
			fillBuffer();
		return buffer[bufferPointer++];
	}
    }
}