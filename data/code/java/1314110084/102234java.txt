import java.io.*;
import java.util.*;
public class TestClass {
	 public static void main(String args[]) {
		InputReader in = new InputReader(System.in);
		PrintWriter w = new PrintWriter(System.out);
 		final int mod = (int) 1e9 + 7;
 		final int pow2[] = new int[100101];
		pow2[0] = 1;
		for (int i = 1; i <= 100010; i++)
			pow2[i] = (2 * pow2[i - 1]) % mod;
 		int t = in.nextInt();
		while (t-- > 0) {
 			int n = in.nextInt();
 
			long a[] = new long[n + 1];
			for (int i = 0; i <= n; i++)
				a[i] = in.nextInt();
			
			long ans = a[0] * a[1];
			ans %= mod;
			long pre = a[0] + a[1];
			
			for(int i = 2; i <= n; i++){
				ans = (2 * ans) % mod;
				ans += a[i] * pre;
				ans %= mod;
				pre += pow2[i - 1] * a[i];
				pre %= mod;
			}
			
			ans = (ans * 2) % mod;
			w.println(ans);
		}
		w.close();
	}
 
	static class InputReader {
 
		private InputStream stream;
		private byte[] buf = new byte[8192];
		private int curChar, snumChars;
		private SpaceCharFilter filter;
 
		public InputReader(InputStream stream) {
			this.stream = stream;
		}
 		public int snext() {
			if (snumChars == -1)
				throw new InputMismatchException();
			if (curChar >= snumChars) {
				curChar = 0;
				try {
					snumChars = stream.read(buf);
				} catch (IOException e) {
					throw new InputMismatchException();
				}
				if (snumChars <= 0)
					return -1;
			}
			return buf[curChar++];
		}
 		public int nextInt() {
			int c = snext();
			while (isSpaceChar(c))
				c = snext();
			int sgn = 1;
			if (c == '-') {
				sgn = -1;
				c = snext();
			}
			int res = 0;
			do {
				if (c < '0' || c > '9')
					throw new InputMismatchException();
				res *= 10;
				res += c - '0';
				c = snext();
			} while (!isSpaceChar(c));
			return res * sgn;
		}
 
		public long nextLong() {
			int c = snext();
			while (isSpaceChar(c))
				c = snext();
			int sgn = 1;
			if (c == '-') {
				sgn = -1;
				c = snext();
			}
			long res = 0;
			do {
				if (c < '0' || c > '9')
					throw new InputMismatchException();
				res *= 10;
				res += c - '0';
				c = snext();
			} while (!isSpaceChar(c));
			return res * sgn;
		}
 		public String readString() {
			int c = snext();
			while (isSpaceChar(c))
				c = snext();
			StringBuilder res = new StringBuilder();
			do {
				res.appendCodePoint(c);
				c = snext();
			} while (!isSpaceChar(c));
			return res.toString();
		}
 		public boolean isSpaceChar(int c) {
			if (filter != null)
				return filter.isSpaceChar(c);
			return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
		}
 		public interface SpaceCharFilter {
			public boolean isSpaceChar(int ch);
		}
}
}