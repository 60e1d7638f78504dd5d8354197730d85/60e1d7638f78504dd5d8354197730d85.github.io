import java.io.*;
import java.util.*;

class TrieNode
{
  TrieNode[] next=new TrieNode[26];
  String word;
}

public class TestClass {
  
  public static List<String> findWords(char[][] board,String[] words)
  {
    List<String> res=new ArrayList<>();
    TrieNode root = buildTrie(words);
    for(int i=0;i<board.length;i++)
    {
      for(int j=0;j<board[0].length;j++)
      {
        dfs(board,i,j,root,res);
      }
    }
    return res;
  }
  
  public static void dfs(char[][] board,int i,int j,TrieNode p,List<String> res)
  {
    char c=board[i][j];
    if(c=='#' || p.next[c-'A']==null)return;
    p=p.next[c-'A'];
    if(p.word !=null)
    {
      res.add(p.word);
      p.word=null;
    }
    
    board[i][j]= '#';
    if(i>0)dfs(board,i-1,j,p,res);
    if(j>0)dfs(board,i,j-1,p,res);
    if(i<board.length-1)dfs(board,i+1,j,p,res);
    if(j<board[0].length-1)dfs(board,i,j+1,p,res);
    board[i][j]=c;
  }
  
  public static TrieNode buildTrie(String[] words)
  {
    TrieNode root=new TrieNode();
    for(String w:words)
    {
      TrieNode p=root;
      for(char c:w.toCharArray())
      {
        int i=c-'A';
        if(p.next[i]==null)p.next[i]=new TrieNode();
        p=p.next[i];
      }
      p.word=w;
    }
    return root;
  }
    

	 public static void main(String[] args) { 
		Scanner sc=new Scanner(System.in);
       String s=sc.nextLine();
       String s1[]=s.split(" ");
       String s2=sc.nextLine();
       String words[]=s2.split(" ");
       char board[][]=new char[s1.length][s1[0].length()];
       for(int i=0;i<s1.length;i++)
       {
         for(int j=0;j<s1[0].length();j++)
         {
           board[i][j]=s1[i].charAt(j);
         }
       }
       List<String> wordsRes=findWords(board,words);
       for(int i=0;i<words.length;i++)
       {
         if(Collections.binarySearch(wordsRes,words[i])>=0)
         {
           System.out.println(words[i]+" -true");
         }
         else
         {
           System.out.println(words[i]+" -false");
         }
       }
	}
}