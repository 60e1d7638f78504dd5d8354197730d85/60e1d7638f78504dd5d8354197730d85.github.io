{"Q_ID": "1212310021", "S_NAME": "Control Statements", "Q_NAME": "Akhil Recovers The Lost Array", "Q_DESC": "Akhil has an array consisting of N positive integers. As we know that there are (N*(N+1))/2 non-empty contiguous subarrays in an array of size N. Akhil found that exactly E of the contiguous subarrays had even sum and remaining O = (N*(N+1))/2 - E have odd sum.\n\nNext day, he lost the original array. But he still remembered the E and O values correctly. Now, he wants to recreate any such array which has exactly E even sum continuous subarrays and O odd ones. If there are many such possible arrays, printing any one of them will make him happy.\n\nInput\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows:\nFirst line of each test case contains an integer N denoting the length of lost array.\nSecond line of each test case contains two space separated integers E and O, denoting number of contiguous subarrays with even and odd sums, respectively.\nOutput\nFor each test case, output a single line containing all the integers of an array separated by a space.\nEach integer should lie between 0 and 100(both inclusive).\nIf there is no such possible array, print -1 in a single line.\nConstraints\n0  E, O  N*(N+1)/2\nE + O = N*(N+1)/2\nSubtasks\nSubtask #1 (20 points) : 1  sum of N over all test cases  15\nSubtask #2 (20 points) : 1  sum of N over all test cases  2 * 103\nSubtask #3 (60 points) : 1  sum of N over all test cases  106", "TESTCASE_1": "3\n3\n2 4\n3\n3 3\n3\n0 6\n###---###SEPERATOR---###---\n0 1 0 \n1 0 0 \n-1", "TESTCASE_2": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}