{"Q_ID": "1215110001", "S_NAME": "Function  Overloading", "Q_NAME": "Building", "Q_DESC": "Create a class called Building with the following private data member or member variables-length,width and ratePerSqft(all of type int)\nInclude the following public member functions or methods:\n\nInitializeData()that accepts three arguments and its return type is void.This function is used to set the values for length,width and ratePerSqft. \n\nThe arguments are passed to this functions in the same order.\n\ngetLength()  to return the length of the building\ngetWidth()  to return the width of the building\ngetratePerSqft()  to return the ratePerSqft of the building\ncalculateCost()   to calculate and return the cost of the building\ndetermineSuitability()  determine and return the type of the building. \n\nWe are interested in buildings that are almost in the shape of a square. If the length and width of the building differ by atmost 10, then the building is suitable. \n\nIf the difference between the length and width of the building is more than 10, then it is not suitable.\n\nIn the main function/method, create an object of type building and invoke the corresponding methods.\n\nInput\nEnter the length of  the building \nEnter the width of the building\nEnter the rate per Squarefeet of the building.\nAll are separated.\n\nOutput\n\nBuilding details: \n1st  line Width: \n2nd line Rate per squarefeet\n3rd line Cost of the building 140000000\n4th line Suitability\n\nSample Input :\n1 9 25\n\nOutput:\n1\n9\n25\n225\nsuitable", "TESTCASE_1": "400 350 1000\n###---###SEPERATOR---###---\n400\n350\n1000\n140000000\nnot suitable", "TESTCASE_2": "400 3 1000\n###---###SEPERATOR---###---\n400\n3\n1000\n1200000\nnot suitable", "TESTCASE_3": "1 9 25\n###---###SEPERATOR---###---\n1\n9\n25\n225\nsuitable", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}