{"Q_ID": "1215110007", "S_NAME": "Function & Overloading", "Q_NAME": "Car", "Q_DESC": "Create a class called Car with the following private data members / member variables, startMiles, endMiles and litres (All of type float). startMiles corresponds to the starting odometer reading, endMiles corresponds to the ending odometer reading and litres correspond to the amount of diesel consumed or used between the 2 readings. \nInclude the following public member functions or methods \ninitializeData() that accepts 3 arguments and its return type is void. This function is used to set the values for startMiles, endMiles and litres. The arguments are passed to this function in the same order. \ngetstartMiles()---to return startMiles \ngetEndMiles()---to return endMiles \ngetLitres()---to return litres \ncalculateMPL()---to calculate and return the miles traveled per litre. \nisEconomycar()---returns true if the MPL is greater than 18 and false otherwise. \nIn the main method, create an object of type Car and invoke the corresponding methods. \n\n\nInput :-\nRefer sample input and output for formatting specifications. All text in bold corresponds to the input ad the rest corresponds to output.\n(1.Enter  start miles)\n(2.Enter  End Miles)\n(3.Enter  Litres)\nOutput Format  :-\nLINE 1:-  call class method starting miles( )\nLINE 2:-  call class method  ending miles( )\nLINE 3:-  call class method  per litre( )\nLINE 4:-  call class method  litres ( )\nLINE 5 :- call class method  car economical( )", "TESTCASE_1": "100 300 10\n###---###SEPERATOR---###---\n100\n300\n20\n10\ntrue", "TESTCASE_2": "100 50 10\n###---###SEPERATOR---###---\nImproper readings", "TESTCASE_3": "100 2010 4580\n###---###SEPERATOR---###---\n100\n2010\n0\n4580\nfalse", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}