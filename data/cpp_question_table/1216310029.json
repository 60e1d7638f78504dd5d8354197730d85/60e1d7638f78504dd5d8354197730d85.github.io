{"Q_ID": "1216310029", "S_NAME": "Arrays", "Q_NAME": "Longest path in matrix", "Q_DESC": "Given a n*n matrix, find the maximum length path (starting from any cell) such that all cells along the path are in increasing order with a difference of 1.\n\nWe can move in 4 directions from a given cell (i, j), i.e., we can move to (i+1, j) or (i, j+1) or (i-1, j) or (i, j-1) with the condition that the adjacent cells have a difference of 1.\n\nInput:\nThe first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains an integer n denoting the size of the nxn matrix. The following lines contain the nxn matrix. \n\nOutput:\nPrint the length of the longest path.\n\nConstraints:\n1<=T<=100\n1<=n<=50\n1<=arr[i][j]<=50", "TESTCASE_1": "1\n3\n1 2 9 5 3 8 4 6 7\n###---###SEPERATOR---###---\n4", "TESTCASE_2": "1\n4\n1 7 8 9 2 11 12 17 3 15 14 13 4 5 25 30\n###---###SEPERATOR---###---\n5", "TESTCASE_3": "1\n3\n1 2 9 6 3 8 4 6 7\n###---###SEPERATOR---###---\n4", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}