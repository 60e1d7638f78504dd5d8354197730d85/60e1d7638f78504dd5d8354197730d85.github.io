{"Q_ID": "1614110010", "S_NAME": "Greedy Algorithm", "Q_NAME": "Huffman Coding", "Q_DESC": "Huffman coding is a lossless data compression algorithm. The idea is to assign variable-length codes to input characters, lengths of the assigned codes are based on the frequencies of corresponding characters. The most frequent character gets the smallest code and the least frequent character gets the largest code.\n\nThe variable-length codes assigned to input characters are Prefix Codes, means the codes (bit sequences) are assigned in such a way that the code assigned to one character is not prefix of code assigned to any other character. \n\nThis is how Huffman Coding makes sure that there is no ambiguity when decoding the generated bit stream.\nLet us understand prefix codes with a counter example. Let there be four characters a, b, c and d, and their corresponding variable length codes be 00, 01, 0 and 1. \n\nThis coding leads to ambiguity because code assigned to c is prefix of codes assigned to a and b. If the compressed bit stream is 0001, the de-compressed output may be cccd or ccb or acd or ab.", "TESTCASE_1": "abc\n10 5 2\n###---###SEPERATOR---###---\nc: 00\nb: 01\na: 1", "TESTCASE_2": "abcdef\n5 9 12 13 16 45\n###---###SEPERATOR---###---\nf: 0\nc: 100\nd: 101\na: 1100\nb: 1101\ne: 111", "TESTCASE_3": "abcd\n10 4 6 3\n###---###SEPERATOR---###---\n\n\na: 0\nc: 10\nd: 110\nb: 111\n", "TESTCASE_4": "abcdef\n10 4 6 3 2 1\n###---###SEPERATOR---###---\n\n\na: 0\nc: 10\nb: 110\nd: 1110\nf: 11110\ne: 11111", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}