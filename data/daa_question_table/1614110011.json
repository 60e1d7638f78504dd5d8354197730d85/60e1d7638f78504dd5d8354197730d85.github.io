{"Q_ID": "1614110011", "S_NAME": "Greedy Algorithm", "Q_NAME": "GRID CHALLENGE", "Q_DESC": "Given a squared sized grid G  of size N in which each cell has a lowercase letter. Denote the character in the ith row and in the jth column as G[i][j].\n\nYou can perform one operation as many times as you like: Swap two column adjacent characters in the same row  G[i][j] and G[i][j+1] for all valid i,j.\n\nIs it possible to rearrange the grid such that the following condition is true?\nG[i][1]<=G[i][2]<=...<=G[i][N] for 1<=i<=N and                                 \n\nG[1][j]<=G[2][j]<=...<=G[N][j] for 1<=j<=N\n \nIn other words, is it possible to rearrange the grid such that every row and every column is lexicographically sorted?\n\nNote:c1<=c2 , if letter c1  is equal to c2 or is before c2 in the alphabet.\n\nInput Format\n\nThe first line begins with T, the number of testcases. In each testcase you will be given N. The following  N lines contain N  lowercase english alphabet each, describing the grid.\n\nConstraints\n1<=T<=100                                     \n1<=N<=100         \n\nGij will be a lower case letter\n\nOutput Format\n\nPrint T lines. On the ith line print YES if it is possible to rearrange the grid in the ith testcase or NO otherwise.", "TESTCASE_1": "1\n5\nebacd\nfghij\nolmkn\ntrpqs\nxywuv\n###---###SEPERATOR---###---\nYES", "TESTCASE_2": "1\n3\nfghij\nebacd\nolmkn\n###---###SEPERATOR---###---\nNO", "TESTCASE_3": "1\n4\nfghabc\nabcgf\nxyvw\nfghijl\n###---###SEPERATOR---###---\n\n\nNO", "TESTCASE_4": "1\n4\nebacd\nfghij\nolmkn\ntrpqs\n###---###SEPERATOR---###---\nYES", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}