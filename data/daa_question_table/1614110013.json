{"Q_ID": "1614110013", "S_NAME": "Greedy Algorithm", "Q_NAME": "MAXIMUM PERIMETER TRIANGLE", "Q_DESC": "Given n sticks of lengths l0,l1,.,ln-1, use 3 of the sticks to construct a non-degenerate triangle with the maximum possible perimeter. Then print the lengths of its sides as 3 space-separated integers in non-decreasing order.\n\nIf there are several valid triangles having the maximum perimeter: \n\n1. Choose the one with the longest maximum side (i.e., the largest value for the longest side of any valid triangle having the maximum perimeter). \n2. If more than one such triangle meets the first criterion, choose the one with the longest minimum side (i.e., the largest value for the shortest side of any valid triangle having the maximum perimeter). \n3. If more than one such triangle meets the second criterion, print any one of the qualifying triangles.\n\nIf no non-degenerate triangle exists, print -1.\n\nInput Format\n\nThe first line contains single integer, n, denoting the number of sticks. \n\nThe second line contains n space-separated integers, l0,l1,.,ln-1, describing the respective stick lengths.\n\nConstraints\n 3 <= n <= 50\n 1 <= li <= 10^9\n\nOutput Format\n\nPrint 3 non-decreasing space-separated integers, a ,b , and c (where a <=  b <=  c) describing the respective lengths of a triangle meeting the criteria in the above Problem Statement.\nIf no non-degenerate triangle can be constructed, print -1.\n", "TESTCASE_1": "5\n1 1 1 3 3\n###---###SEPERATOR---###---\n1 3 3", "TESTCASE_2": "3\n1 2 3\n###---###SEPERATOR---###---\n-1", "TESTCASE_3": "4 \n1 1 3 3 \n###---###SEPERATOR---###---\n\n\n1 3 3\n", "TESTCASE_4": "5\n1 2 3 3 1\n###---###SEPERATOR---###---\n2 3 3", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}