{"Q_ID": "1614310006", "S_NAME": "Greedy Algorithm", "Q_NAME": "Team Formation", "Q_DESC": "Problem Statement\n For an upcoming programming contest, Roy is forming some teams from the n students of his university. \n  A team can have any number of contestants.\n  \n  Roy knows the skill level of each contestant. To make the teams work as a unit, he should ensure that \n  there is no skill gap between the contestants of the same team. In other words, if the skill level of a contestant is x, then he has either the lowest skill level in his team or there exists another contestant  with skill level of x1 in the same team. Also, no two contestants of the same team should have same skill level. Note that a contestant can write buggy code and thus can have a negative skill level.\n The more contestants on the team, the more problems they can attempt at a time. So, Roy wants to form teams such that the smallest team is as large as possible.\nInput Format\nThe first line of input contains t (1t100), the number of test cases. Each case contains an integer n (0n105), the number of contestants, followed by n space separated integers. \nThe ith integer denotes the skill level of ith contestant. The absolute values of skill levels will not exceed  10^9.\n The total number of contestants in all cases will not exceed 10^6.\n Output Format\n For each test case, print the size of smallest team in a separate line.", "TESTCASE_1": "2\n2 -3  \n1 3 2 3 4\n###---###SEPERATOR---###---\n1\n3\n", "TESTCASE_2": "4  \n7 4 5 2 3 -4 -3 -5  \n1 -4  \n4 3 2 3 1  \n7 1 -2 -3 -4 2 0 -1  \n###---###SEPERATOR---###---\n3\n1\n1\n7", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}