{"Q_ID": "1614310008", "S_NAME": "Greedy Algorithm", "Q_NAME": "Kevin doesn't like his string", "Q_DESC": "Kevin has a string S of length N, but he doesn't like it. In order to create a string which he likes more, he can cut K characters out of this string and insert these characters in the same places from which they were cut out (possibly in a different order).\n\nLet's have string abacbca and cut characters at positions 2, 4 and 5. We will get the string a_a__ca and characters 'b' , 'c' and 'b'. One of the possible ways to insert them is acabbca.\n\nKevin wants to obtain the lexicographically smallest string this way. Help him.\n\nNote: A string S is lexicographically smaller than another string T if there's such an index i that S[i] < T[i] and for all j < i, S[j] = T[j].\n\nInput format:\n\nThe first line of the input will contain two space-separated integers N and K. The second line will contain the string S. All characters of S are lowercase English letters.\n\nOutput format:\n\nPrint the lexicographically smallest string which Kevin can obtain using the described process.\n\nConstraints\n\n1  K  N  10^5\nN  20 in test data 15% of all points\nN  5000 in test data worth 50% of all points\nK = 2 in test data worth 20% of all points", "TESTCASE_1": "7 3\nacbdaxa\n###---###SEPERATOR---###---\naabcaxd", "TESTCASE_2": "5 3\nqghum\n###---###SEPERATOR---###---\nghqum", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}