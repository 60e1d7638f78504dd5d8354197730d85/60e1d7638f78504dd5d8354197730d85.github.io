{"Q_ID": "1615110010", "S_NAME": "Dynamic Programming", "Q_NAME": "THE MAXIMUM SUB ARRAY", "Q_DESC": "Given an array A={a1,a2,...,aN} of  N elements, find the maximum possible sum of a Contiguous subarray Non-contiguous       \n(not necessarily contiguous) subarray.\n\nEmpty subarrays/subsequences should not be considered.\n\nInput Format\n\nFirst line of the input has an integer T. T cases follow. \nEach test case begins with an integer N. In the next line, N  integers follow representing the elements of array A.\n\nConstraints\n1<=T<=10                            \n1<=N<=10^5                         \n -10^4<=ai<=10^4\nThe subarray and subsequences you consider should have at least one element.\n\nOutput Format\n\nTwo, space separated, integers denoting the maximum contiguous and non-contiguous subarray. At least one integer should be selected and put into the subarrays (this may be required in cases where all elements are negative).\n", "TESTCASE_1": "2 \n4 \n1 2 3 4\n6\n2 -1 2 3 4 -5\n###---###SEPERATOR---###---\n10 10\n10 11", "TESTCASE_2": "1 \n6\n2 -1 2 3 4 -5\n###---###SEPERATOR---###---\n10 11", "TESTCASE_3": "3\n4 \n1 2 3 4\n6\n2 -1 2 3 4 -5\n4\n3 2 1 4\n###---###SEPERATOR---###---\n10 10\n10 11\n10 10", "TESTCASE_4": "2\n6\n2 -1 2 3 4 -5\n4\n1 2 3 4\n###---###SEPERATOR---###---\n10 11\n10 10", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}