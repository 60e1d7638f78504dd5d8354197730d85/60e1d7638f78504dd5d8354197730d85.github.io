{"Q_ID": "1615110017", "S_NAME": "Dynamic Programming", "Q_NAME": "SAMU & SHOPPING", "Q_DESC": "Samu is in super market and in a mood to do a lot of shopping. She needs to buy shirts, pants and shoes for herself and her family. There are N different shops. Each shop contains all these three items but at different prices. Now Samu has a strategy that she won't buy the same item from the current shop if she had already bought that item from the shop adjacent to the current shop.\n\nNow Samu is confused, because although she want to follow her strategy strictly but at the same time she want to minimize the total money she spends on shopping. Being a good programmer, she asks for your help.\n\nYou are provided description about all N shops i.e costs of all three items in each shop. You need to help Samu find minimum money that she needs to spend such that she buys exactly one item from every shop.\n\nInput Format: \n\nFirst line contain number of test cases T. Each test case in its first line contain N denoting the number of shops in Super Market. Then each of next N lines contains three space separated integers denoting cost of shirts, pants and shoes in that particular shop.\n\nOutput Format:\nFor each test case, output the minimum cost of shopping taking the mentioned conditions into account in a separate line.\n\nConstraints :\n1 <= T <= 10 \n1 <= N <= 10^5\nCost of each item (shirt/pant/shoe) does not exceed 10^4", "TESTCASE_1": "1\n3\n1 50 50\n50 50 50\n1 50 50\n###---###SEPERATOR---###---\n52", "TESTCASE_2": "1\n3\n564 234 751\n23456 321 4567\n233 5612 34567\n###---###SEPERATOR---###---\n1118", "TESTCASE_3": "1\n3\n9414 595 5212\n2756 7474 3494\n787 9298 9010\n###---###SEPERATOR---###---\n4876", "TESTCASE_4": "1\n3\n34 56 12\n98 456 15\n29 23 98\n###---###SEPERATOR---###---\n72", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}