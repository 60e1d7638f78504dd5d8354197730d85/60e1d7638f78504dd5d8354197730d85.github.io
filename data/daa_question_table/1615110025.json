{"Q_ID": "1615110025", "S_NAME": "Dynamic Programming", "Q_NAME": "ROY  FLOWER FARM", "Q_DESC": "Roy is the owner of a flower plant farm and sells flower plants for a living.  Now the problem with flower plants is that they wither in a night if not taken care of. So at the end of the day, to make flower plants wither-resistant Roy uses special fertilizers.\n\nThere are N number of plants not sold on one particular day (say today), but Roy can sell them the next day (say tomorrow) if he fertilizes them tonight. \n\nRoy sells a flower plant for Rs. X. Cost of fertilizing a plant is Rs. Y.  Currently Roy has P Rupees with him.\n\nGiven the selling price X and fertilizing cost Y of N plants, your task is to find minimum amount A (A  P) that he should spend in fertilizing plants such that the total money he has after selling plants on the next day is maximized. Assume that all the fertilized plants are sold on the next day.\n\nInput Format:\n\nFirst line contains integer T - number of test cases.\nSecond line contains two space separated integers N and P.\nFollowing N lines each contain two space separated integers X and Y.\n\nOutput Format:\nPrint the two space separated integers A and B in a new line for each test case.\n\nConstraints:\n1=  T=  10\n1 = N = 100\n1 = X,Y = 1000 \n1=  P=  10000", "TESTCASE_1": "2\n2 50\n80 40\n60 20\n5 100\n100 40\n50 40\n40 50\n60 20\n100 50\n###---###SEPERATOR---###---\n20 90\n90 210", "TESTCASE_2": "10\n4 56\n38 63\n54 11\n21 31\n55 65\n1 13\n89 67\n4 187\n24 11\n89 87\n97 22\n62 97\n3 100\n82 92\n85 71\n1 28\n4 233\n59 95\n4 66\n24 89\n24 32\n2 61\n15 52\n98 67\n2 97\n75 6\n19 94\n3 57\n3 41\n24 73\n36 17\n2 18\n12 98\n36 51\n2 69\n76 92\n38 95\n###---###SEPERATOR---###---\n11 99\n0 13\n120 277\n71 114\n0 233\n0 61\n6 166\n17 76\n0 18\n0 69", "TESTCASE_3": "10\n4 452\n83 24\n87 3\n75 12\n15 56\n1 6905\n95 59\n1 7958\n78 72\n2 8093\n91 38\n49 9\n4 1170\n82 75\n76 6\n1 26\n61 62\n3 2950\n57 70\n19 19\n31 5\n2 1892\n2 71\n79 57\n2 7485\n62 41\n9 20\n4 3587\n60 48\n26 83\n28 90\n85 54\n1 3044\n78 67\n###---###SEPERATOR---###---\n39 658\n59 6941\n72 7964\n47 8186\n81 1247\n5 2976\n57 1914\n41 7506\n102 3630\n67 3055", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}