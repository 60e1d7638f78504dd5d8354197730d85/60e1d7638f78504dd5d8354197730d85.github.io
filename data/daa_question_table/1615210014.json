{"Q_ID": "1615210014", "S_NAME": "Dynamic Programming", "Q_NAME": "Balanced Buildings", "Q_DESC": "Cat Noku recently picked up construction working as a hobby. He's currently working with a row of buildings and would like to make it beautiful.\n\nThere are n buildings in a row. The height of the i-th building is xi.\n\nCat Noku can modify the buildings by adding or removing floors to change the heights. It costs him P dollars to increase the height of one building by 1, and M dollars to lower the height of one building by 1. Note that the heights of all the buildlings must remain integers (i.e. Cat Noku cannot choose to raise the height of a building by 0.5).\n\nAt the end of the day Cat Noku will get a bonus for the number of buildings which are adjacent and have the same height. For each section i, if section i+1 has the same height, Cat Noku will gain a profit of S (of course, it is not possible to get this bonus for the last building in the row). Thus, his net profit can be described by his total profit minus the cost it took him to change the building heights.\n\nHelp Cat Noku determine the maximum possible net profit he can gain.\n\nInput format:\n\nThe first line will contain four space separated integers n, S, M, P.\nThe second line will contain n space separated integers. The i-th integer in this line will be equal to xi.\n\nOutput format:\n\nPrint a single integer on its own line, the maximum net profit that Cat Noku can earn.\n\nConstraints:\n\nFor all subtasks:\n2  n \n1  xi\n1  S, M, P\n\nSubtask 1 (56 pts): \nn  5 \nxi  10 \nS, M, P  100 \n\nSubtask 2 (32 pts): \nn  50 \nxi  100 \nS, M, P  1,000\n\nSubtask 3 (12 pts): \nn  2,500 \nxi  1,000,000 \nS, M, P  1,000,000,000 ", "TESTCASE_1": "5 4 2 1\n1 2 1 5 4\n###---###SEPERATOR---###---\n9", "TESTCASE_2": "3 4 2 1\n###---###SEPERATOR---###---\n8", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}