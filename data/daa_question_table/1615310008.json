{"Q_ID": "1615310008", "S_NAME": "Dynamic Programming", "Q_NAME": "The Longest Increasing Subsequence", "Q_DESC": "The task is to find the length of the longest subsequence in a given array of integers such that all elements of the subsequence are sorted in ascending order. For example, the length of the LIS for { 15, 27, 14, 38, 26, 55, 46, 65, 85 } is 6 and the longest increasing subsequence is {15, 27, 38, 55, 65, 85}.                         In this challenge you simply have to find the length of the longest strictly increasing sub-sequence of the given sequence.\n\nInput Format\n\nIn the first line of input, there is a single number N. \nIn the next N lines input the value of a[i].\n\nConstraints \n1  N  10^6 \n1  a[i]  10^5\n\nOutput Format\n\nIn a single line, output the length of the longest increasing sub-sequence.", "TESTCASE_1": "5\n2\n7\n4\n3\n8\n###---###SEPERATOR---###---\n3", "TESTCASE_2": "6\n3\n4\n7\n8\n2\n\n###---###SEPERATOR---###---\n4", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}