{"Q_ID": "1615310009", "S_NAME": "Dynamic Programming", "Q_NAME": "String Reduction", "Q_DESC": "Given a string consisting of letters, 'a', 'b' and 'b', we can perform the following operation:\n\nTake any two adjacent distinct characters and replace them with the third character.\nFor example, if 'a' and 'c' are adjacent, they can replaced by 'b'.\n\nFind the smallest string which we can obtain by applying this operation repeatedly.\n\nInput Format\n\nThe first line contains the number of test cases T.T  test cases follow. Each test case contains the string you start with.\n\nConstraints\n1=t=100\nThe string will have at most 100  characters.\nOutput Format\n\nOutput T lines, one for each test case, containing the smallest length of the resultant string after applying the operations optimally.", "TESTCASE_1": "3  \ncab  \nbcab  \nccccc\n###---###SEPERATOR---###---\n2\n1\n5", "TESTCASE_2": "2  \ncat    \nccccc\n\n###---###SEPERATOR---###---\n2\n5\n", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}