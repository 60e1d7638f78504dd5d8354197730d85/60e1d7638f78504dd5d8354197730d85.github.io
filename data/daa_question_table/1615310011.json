{"Q_ID": "1615310011", "S_NAME": "Dynamic Programming", "Q_NAME": "Beautiful Sequence", "Q_DESC": "A sequence of integers is called a beautiful sequence if all the integers in it are positive and it is a strictly increasing sequence.\n\nGiven a sequence of integers, you have to make it a beautiful sequence. For that you can change any element you want, but you should make as less changes as possible in order to make it a beautiful sequence.\n\nInput\n\nThe first line of input is an integer T(T <= 5), the number of test cases. Each test case contains 2 lines.\n\nThe first line of the test case contains an integer (0 < N <= 100000), i.e. the number of elements in the original sequence.\n\nThe second line contains N positive integers, no larger than 2000000000, which forms the original sequence.\n\nOutput\n\nFor each test case output the minimal number of elements you must change in the original sequence to make it a beautiful sequence.\n\nExplanation for sample Input/Output\n\nFor the 1st test case you needn't to change any elements. \nFor the 2nd test case you can change 3 into 1 and change 1 into 3. \nFor the 3rd test case you can change 10 into 1. \nFor the 4th test case you can change the last three 2s into 3,4 and 5.\n\nUPDATE\n\nTest cases have been made stronger and all previous submissions have been rejudged.", "TESTCASE_1": "2\n2\n2 1\n3\n4 3 1\n\n###---###SEPERATOR---###---\n1\n2\n ", "TESTCASE_2": "4\n2\n1 2\n3\n3 2 1\n5\n10 5 6 7 8\n4\n2 2 2 2\n###---###SEPERATOR---###---\n0\n2\n1\n3", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}