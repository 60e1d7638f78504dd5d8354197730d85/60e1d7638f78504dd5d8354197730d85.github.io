{"Q_ID": "1616110005", "S_NAME": "Backtracking", "Q_NAME": "Reverse Delete Algorithm for Minimum Spanning Tree", "Q_DESC": "Reverse Delete algorithm is closely related to Kruskals algorithm. In Reverse Delete algorithm, we sort all edges in decreasing order of their weights. After sorting, we one by one pick edges in decreasing order. \n\nWe include current picked edge if excluding current edge causes disconnection in current graph. The main idea is delete edge if its deletion does not lead to disconnection of graph. \n\nYour task is to print the value of total weight of Minimum Spanning Tree formed.\n\nInput:\nThe first line of the input contains an integer 'T' denoting the number of test cases. Then 'T' test cases follow. Each test case consists of two lines. \n\nDescription of  test cases is as follows:\n\nThe First line of each test case contains two integers 'V' and 'E'  which denotes the no of vertices and no of edges respectively.\nThe Second line of each test case contains 'E'  space separated triplets of m , n and w denoting that there is an edge from m to n and their weights.\n\nOutput:\nPrint the desired output in each line.\n\nConstraints:\n1=T=100\n1=V,E=100\n1=m,n=V\n1=w=100", "TESTCASE_1": "1\n4 5\n0 1 10 0 2 6 0 3 5 1 3 15 2 3 4\n###---###SEPERATOR---###---\n19", "TESTCASE_2": "1\n5 4\n0 2 6 0 3 5 1 3 15 2 3 4 10 7 2 \n\n###---###SEPERATOR---###---\n24", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}