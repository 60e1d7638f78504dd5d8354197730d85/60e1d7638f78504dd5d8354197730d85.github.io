{"Q_ID": "1616110013", "S_NAME": "Backtracking", "Q_NAME": "Shortest Source to Destination Path", "Q_DESC": "Given a boolean 2D matrix (0-based index), find whether there is path from (0,0) to (x,y) and if there is one path, print the minimum no of steps needed to reach it, else print -1 if the destination is not reachable.\n\nInput:\n\nThe first line of input contains an integer T denoting the no of test cases. Then T test cases follow. Each test case contains two lines . The first line of each test case contains two integers n and m denoting the size of the matrix. \n\nThen in the next line are n*m space separated values of the matrix. The following line after it contains two integers x and y denoting the index of the destination.\n\nOutput:\nFor each test case print in a new line the min no of steps needed to reach the destination.\n\nConstraints:\n1<=T<=100\n1<=n,m<=20\n ", "TESTCASE_1": "2\n3 4\n1 0 0 0 1 1 0 1 0 1 1 1\n2 3\n3 4\n1 1 1 1 0 0 0 1 0 0 0 1\n0 3\n###---###SEPERATOR---###---\n5\n3", "TESTCASE_2": "1\n3 6\n1 0 0 1 0 1 0 1 0 1 0 1 1 0 1 0 1 1\n0 5\n###---###SEPERATOR---###---\n-1", "TESTCASE_3": "3\n3 4\n1 0 1 1 0 1 0 0 1 0 1 0\n2 4\n3 4\n1 0 1 1 1 0 0 1 0 1 0 1\n0 3\n3 4\n1 0 1 1 0 1 1 0 1 1 1 0\n0 2\n###---###SEPERATOR---###---\n-1\n-1\n-1", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}