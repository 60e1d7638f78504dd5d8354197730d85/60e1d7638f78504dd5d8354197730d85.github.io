{"Q_ID": "1616110016", "S_NAME": "Backtracking", "Q_NAME": "Possible paths", "Q_DESC": "Given a directed graph and two vertices u and v in it, count all the possible walks from u to v with exactly k edges on the walk.\n\nInput:\n\nThe first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case consists of three lines.\nThe first line of each test case is N which is number of vertices in input graph.\nThe second line of each test case contains N x N binary values that represent graph[N][N].\nThe third line of each test case contains u, v, k where u is starting position, v is destination and k is number of edges.\n\nOutput:\n\nPrint all possible walks from 'u' to 'v'.\n\nConstraints:\n\n1 =  T = 50\n1 = N = 20\n0 = graph[][] = 1\n", "TESTCASE_1": "1\n4\n0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0\n\n0 3 2\n###---###SEPERATOR---###---\n2", "TESTCASE_2": "2\n3\n1 0 1 0 0 1 1 0 0\n0 2 1\n4\n1 0 0 0 1 1 0 0 1 0 1 1 0 1\n0 3 2\n###---###SEPERATOR---###---\n1\n1", "TESTCASE_3": "1\n5\n1 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 1 0 1 0 1 0 1 0 1\n0 3 2\n###---###SEPERATOR---###---\n1", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}