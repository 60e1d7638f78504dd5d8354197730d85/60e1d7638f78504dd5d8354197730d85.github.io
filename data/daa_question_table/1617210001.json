{"Q_ID": "1617210001", "S_NAME": "Graph Colouring", "Q_NAME": "Word Boggle", "Q_DESC": "Given a dictionary, a method to do lookup in dictionary and a M x N board where every cell has one character. Find all possible words that can be formed by a sequence of adjacent characters. Note that we can move to any of 8 adjacent characters, but a word should not have multiple instances of same cell.\n\nExample:\n\nInput: dictionary[] = {\"GEEKS\", \"FOR\", \"QUIZ\", \"GO\"};\n       boggle[][]   = {{'G','I','Z'},\n                       {'U','E','K'},\n                       {'Q','S','E'}};\n\nOutput:  Following words of dictionary are present\n         GEEKS, QUIZ\n\nInput:\nThe first line of input contains an integer T denoting the no of test cases . Then T test cases follow. Each test case contains an integer x denoting the no of words in the dictionary. Then in the next line are x space separated strings denoting the contents of the dictinory. In the next line are two integers N and M denoting the size of the boggle. The last line of each test case contains NxM space separated values of the boggle.\n\nOutput:\nFor each test case in a new line print the space separated sorted distinct words of the dictionary which could be formed from the boggle. If no word can be formed print -1.\n\nConstraints:\n1<=T<=10\n1<=x<=10\n1<=n,m<=7\n", "TESTCASE_1": "1\n4\nGEEKS FOR QUIZ GO\n3 3\nG I Z U E K Q S E\n###---###SEPERATOR---###---\nGEEKS QUIZ", "TESTCASE_2": "1\n2\nCode Chef\n3 3\nf C C o e e d h\n###---###SEPERATOR---###---\nChef Code ", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}