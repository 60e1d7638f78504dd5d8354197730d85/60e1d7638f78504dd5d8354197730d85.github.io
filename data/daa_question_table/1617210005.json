{"Q_ID": "1617210005", "S_NAME": "Graph Colouring", "Q_NAME": "Divisibility tree", "Q_DESC": "One day Ram was drawing and suddenly he saw a drawing book which consists of several simple connected graph with no cycle or in other words tree. He thought of doing something interesting from the drawing. Consider the tree consist of N nodes from 1 to N. He found out that all the trees are rooted at node 1. Then he thinks of removing the edges from the following diagrams to convert it into disjoint union tree and he want to find out the number of edges he can remove so that the vertices or nodes of each connected component left is divisible by 2 . He wants to find out the edges as much as possible meaning that there should be maximum number of edges. As he is very busy for his upcoming drawing competition, so he urgently wants to reach for his drawing classes. So help him finding the edges.\n\nInput:\nThe first line of input will contain an integer T denoting the no of test cases. Then T test cases follow. Each line of the test case will contain two integers p and q, denoting the number of nodes and number of edges respectively. The next line will contain q space separated pairs x and y which will define the edge of the tree.\n \n\nOutput:\nFor each test case in a new line print maximum number of edges which should be removed.\n\nConstraints:\n1<=T<=30\n2<=p and q <= 100\n1<=x and y<=1000\n ", "TESTCASE_1": "1                            \n10 9\n2 1 3 1 4 3 5 2 6 1 7 2 8 6 9 8 10 8\n###---###SEPERATOR---###---\n2", "TESTCASE_2": "2\n4 4\n1 2  2 3 1 4  3 4                        \n3 3\n1 2 2 3 1 2\n###---###SEPERATOR---###---\n1\n1", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}