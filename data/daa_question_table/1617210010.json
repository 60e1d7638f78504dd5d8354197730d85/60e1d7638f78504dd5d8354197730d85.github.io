{"Q_ID": "1617210010", "S_NAME": "Graph Colouring", "Q_NAME": "Your Social Network", "Q_DESC": "Influenced by Social Networking sites, Rahul launches his own site Friendsbook. Each user in Friendsbook is given a unique number, first user being numbered 1. There are N users in Friendsbook numbered from 1 to N. In Friendsbook, i th user can make j th user his friend without becoming his friend himself, i.e. in Friendsbook, there is a one-way link rather than a two-way link as in Facebook. Moreover i th user can make j th user his friend iff ij. Also one user should have no more and no less than one friend except user 1 who will have no friend. Rahul wants to modify Friendsbook and find out whether one user is somehow linked to some other user. Help Rahul do so.\n\nInput: \n\nThe first line of input takes the number of test cases, T. Then T test cases follow.Each test case has 2 input lines. The first line of each test case takes the number of users, N. The second line of each test case consists of N - 1 space separated integers. Here, i th integer denotes the friend of (i+1)th user.\n\nOutput:\n\nPrint all possible connections between the users in the following format: \n4 2 2 means 4 is linked to 2 via 2 connections.\n\n5 2 3 means 5 is linked to 2 via 3 connections, and so on.\n\nThe order of display should be as follows:\n\nPrint all possible connections starting from user 2 to user N with other users starting from 1 to The Current User Number - 1. In case one user is not connected at all with another user, that connection should not be printed.\n \n\nConstraints:\n\n1=T=200\n\n1=N=1000\n ", "TESTCASE_1": "3\n3\n1 2\n3\n1 1\n4\n1 2 2\n###---###SEPERATOR---###---\n2 1 1 3 1 2 3 2 1\n2 1 1 3 1 1\n2 1 1 3 1 2 3 2 1 4 1 2 4 2 1\n", "TESTCASE_2": "2\n3\n1 2\n3\n1 1\n###---###SEPERATOR---###---\n2 1 1 3 1 2 3 2 1 \n2 1 1 3 1 1 ", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}