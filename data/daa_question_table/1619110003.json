{"Q_ID": "1619110003", "S_NAME": "Sum of Subsets", "Q_NAME": "List the sub arrays", "Q_DESC": "You are given an array A of size N. Let us list down all the subarrays of the given array. There will be a total of N * (N + 1) / 2 subarrays of the given array. Let us sort each of the subarrays in descending order of the numbers in it.\n\nNow you want to sort these subarrays in descending order. You can compare two subarrays B, C, as follows.\n\n\n    compare(B, C):\n        Append N - |B| zeros at the end of the array B.\n        Append N - |C| zeros at the end of the array C.\n        for i = 1 to N:\n            if B[i]  C[i]:\n                return B is less than C\n            if B[i]  C[i]:\n                return B is greater than C\n        return B and C are equal.\n\nYou are given M queries asking for the maximum element in the pth subarray (1-based indexing).\n\nInput\n\nThe first line of input contains T, the number of test cases.\n\nThe first line of each test case contains two space separated integers N and M, denoting the array size and the number of queries respectively.\n\nThe next line contains N space-separated integers denoting the array elements.\n\nEach of the next M lines contains a single integer - p.\n\nOutput\n\nOutput a single integer corresponding to the maximum element in the pth subarray.\n\nConstraints\n\n1 = Ai = 10^9\n1 = p = N+1C2\n\nSubtasks\n\nSubtask #1 (20 points):\n1= T = 20\n1=  N = 200\n1=  M = 10^4\n\nSubtask #2 (30 points):\n1 = T = 20\n1 = N = 3000\n1 = M = 10^4\n\nSubtask #3 (50 points):\n1 = T = 5\n1=  N = 10^5\n1=  M = 10^5\n", "TESTCASE_1": "1\n4 2\n3 1 2 4\n1\n5\n###---###SEPERATOR---###---\n4\n3", "TESTCASE_2": "1\n5 2\n4 6 1 4 \n1\n9\n###---###SEPERATOR---###---\n4\n4", "TESTCASE_3": "1\n3 2\n1 5 4 2\n1\n9\n###---###SEPERATOR---###---\n5\n5", "TESTCASE_4": "1\n4 2\n1 3 2 4\n1\n3\n###---###SEPERATOR---###---\n4\n4", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}