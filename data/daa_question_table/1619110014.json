{"Q_ID": "1619110014", "S_NAME": "Sum of Subsets", "Q_NAME": "The Magic", "Q_DESC": "Navi got a task at school to collect N stones. Each day he can collect only one stone. As N can be a very large number so it could take many days to complete the task, but then he remembers that his mother gave him a magic that can double anything (i.e if he has 2 stones, the magic will make them to 4 stones). \n\nNavi can use this magic any number of time on the collected stone on a particular day and add this to the previously collected stones. \n\nRemember that he wants exactly N stones and he can't throw any stone. If he gets more than N stones then he gets 0 marks, of course he doesn't want 0 marks. \n\nHelp him to collect exactly N stones in minimum number of days.\n\nInput\n\nFirst line of input will contain number of test cases (T). Then next T lines contains a single number N, which is number of stones Navi has to collect.\n\nOutput\n\nFor each test case, Print a single number which is the minimum number of days taken by Navi to complete the task.\n\nConstraints\n\n1 = T = 10^5\n\n0 = N = 10^9", "TESTCASE_1": "2\n1\n3\n###---###SEPERATOR---###---\n1\n2", "TESTCASE_2": "3\n2\n1\n3\n###---###SEPERATOR---###---\n1\n1\n2", "TESTCASE_3": "4\n3\n4\n6\n5\n###---###SEPERATOR---###---\n2\n1\n2\n2", "TESTCASE_4": "7\n1\n4\n2\n3\n5\n6\n8\n###---###SEPERATOR---###---\n1\n1\n1\n2\n2\n2\n1", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}