{"Q_ID": "1619210018", "S_NAME": "Sum of Subsets", "Q_NAME": "Pseudo-Isomorphic Substrings", "Q_DESC": "Two strings A and B, consisting of small English alphabet letters are called pseudo-isomorphic if\n\nTheir lengths are equal\nFor every pair (i,j), where 1 <= i < j <= |A|, B[i] = B[j], iff A[i] = A[j]\nFor every pair (i,j), where 1 <= i < j <= |A|, B[i] != B[j] iff A[i] != A[j]\nNaturally, we use 1-indexation in these definitions and |A| denotes the length of the string A.\n\nYou are given a string S, consisting of no more than 105 lowercase alphabetical characters. For every prefix of S denoted by S', you are expected to find the size of the largest possible set of strings , such that all elements of the set are substrings of S' and no two strings inside the set are pseudo-isomorphic to each other.\n\nif S = abcde \nthen, 1st prefix of S is 'a' \nthen, 2nd prefix of S is 'ab' \nthen, 3rd prefix of S is 'abc' \nthen, 4th prefix of S is 'abcd' and so on..\n\nInput Format\n\nThe first and only line of input will consist of a single string S. The length of S will not exceed 10^5.\n\nConstraints\n1. 1<=|S|<=10^5\n2.S contains only lower-case english alphabets ('a' - 'z').\nOutput Format\n\nOutput N lines. On the ith line, output the size of the largest possible set for the first i alphabetical characters of S such that no two strings in the set are pseudo-isomorphic to each other.", "TESTCASE_1": "abbabab\n###---###SEPERATOR---###---\n1\n2\n4\n6\n9\n12\n15", "TESTCASE_2": "srmsrmuniv\n###---###SEPERATOR---###---\n1\n2\n3\n4\n5\n6\n10\n14\n18\n22", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}