{"Q_ID": "1619310006", "S_NAME": "Sum of Subsets", "Q_NAME": "Subset Sum Problem 1", "Q_DESC": "Let isSubSetSum(int set[], int n, int sum) be the function to find whether there is a subset of set[] with sum equal to sum. n is the number of elements in set[].\n\nThe isSubsetSum problem can be divided into two subproblems\na) Include the last element, recur for n = n-1, sum = sum  set[n-1]\nb) Exclude the last element, recur for n = n-1.\nIf any of the above the above subproblems return true, then return true.\n\nFollowing is the recursive formula for isSubsetSum() problem.\n\nisSubsetSum(set, n, sum) = isSubsetSum(set, n-1, sum) || \n                           isSubsetSum(set, n-1, sum-set[n-1])\nBase Cases:\nisSubsetSum(set, n, sum) = false, if sum > 0 and n == 0\nisSubsetSum(set, n, sum) = true, if sum == 0                                         Input Format:                                   First line- is the no:of elements in the set.                                                 Then enter the elements in the set                                                     Last line is the sum", "TESTCASE_1": "6\n3\n34\n4\n12\n5\n2\n9\n###---###SEPERATOR---###---\nFound a subset with given sum", "TESTCASE_2": "4\n2\n3\n1\n6\n15\n###---###SEPERATOR---###---\nNo subset with given sum", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}