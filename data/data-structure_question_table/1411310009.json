{"Q_ID": "1411310009", "S_NAME": "Memory Addressing", "Q_NAME": "Merge Sort for Linked Lists", "Q_DESC": "Merge sort is often preferred for sorting a linked list. The slow random-access performance of a linked list makes some other algorithms (such as quicksort) perform poorly, and others (such as heapsort) completely impossible.\n\nLet head be the first node of the linked list to be sorted and headRef be the pointer to head. Note that we need a reference to head in MergeSort() as the below implementation changes next links to sort the linked lists (not data at the nodes), so head node has to be changed if the data at original head is not the smallest value in linked list.", "TESTCASE_1": "5\n5 4 4 3 2\n###---###SEPERATOR---###---\n2 3 4 4 5", "TESTCASE_2": "6 \n1 3 2 5 6 9\n###---###SEPERATOR---###---\n1 2 3 5 6 9", "TESTCASE_3": "4\n2 1 4 3\n###---###SEPERATOR---###---\n1 2 3 4", "TESTCASE_4": "7\n1 2 6 3 9 4 5\n###---###SEPERATOR---###---\n1 2 3 4 5 6 9", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}