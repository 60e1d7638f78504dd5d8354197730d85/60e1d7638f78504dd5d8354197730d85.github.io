{"Q_ID": "1414210003", "S_NAME": "Sorting Techniques", "Q_NAME": "Selection Sort Intermediate steps", "Q_DESC": "Given a list of numbers, you have to perform Selection Sort on the given numbers. You will have to print the result after i'th given iteration. You would be provided with the number of test cases, the number of elements in the list and the the i'th iteration that needs to be printed.\n\nInput:\nFirst line of the input contains T the number of test cases, the next line contains N the number of elements in the first test case and i denoting the i'th iteration. Following that line there are N space separated numbers that have to sorted.\n\nOutput:\nThe resultant array after the i'th iteration.\n\nExplanation :\nIn the first example there are 5 numbers 2 7 1 3 5. When we perform selection sort on them we get the resultant intermediate arrays as \n1 7 2 3 5 \n1 2 7 3 5 \n1 2 3 7 5 \n1 2 3 5 7\nSo when i =2, you have to print the resultant array after 2nd iteration which is 1 2 7 3 5\n\nConstaints:\n1=T=10\n1=N=100\n1=A[i]=100", "TESTCASE_1": "1\n5 2\n2 7 1 3 5\n###---###SEPERATOR---###---\n1 2 7 3 5 ", "TESTCASE_2": "4\n5 1\n2 7 1 3 5\n6 4\n2 7 4 3 6 5\n20 5\n6 8 4 21 55 6 3 2 11 77 56 24 13 89 1 24 68 23 45 19\n25 7\n23 78 65 14 2 98 32 14 85 62 47 12 36 55 12 8 95 17 32 67 74 10 100 43 81\n###---###SEPERATOR---###---\n1 7 2 3 5 \n2 3 4 5 6 7 \n1 2 3 4 6 55 21 8 11 77 56 24 13 89 6 24 68 23 45 19 \n2 8 10 12 12 14 14 98 85 62 47 32 36 55 23 78 95 17 32 67 74 65 100 43 81 ", "TESTCASE_3": "8\n6 2\n2 7 4 3 6 5\n20 9\n6 8 4 2 55 6 3 2 11 77 56 24 13 89 1 24 68 23 45 19\n25 13\n23 78 65 14 2 98 32 14 85 62 47 12 36 55 12 8 95 17 32 67 74 10 100 43 81\n40 21\n88 18 31 96 78 69 86 15 5 66 35 68 14 42 83 69 25 17 92 38 44 48 22 36 56 33 66 15 25 27 45 28 92 21 45 88 5 29 49 54\n50 17\n88 18 31 96 78 69 86 15 5 66 35 68 14 42 83 69 25 17 92 38 44 48 22 36 56 33 66 15 25 27 45 28 92 21 45 88 5 29 49 54 28 11 21 70 71 97 33 30 46 46\n60 45\n88 18 31 96 78 69 86 15 5 66 35 68 14 42 83 69 25 17 92 38 44 48 22 36 56 33 66 15 25 27 45 28 92 21 45 88 5 29 49 54 28 11 21 70 71 97 33 30 46 46 39 36 41 46 61 58 85 94 58 98\n100 73\n88 18 31 96 78 69 86 15 5 66 35 68 14 42 83 69 25 17 92 38 44 48 22 36 56 33 66 15 25 27 45 28 92 21 45 88 5 29 49 54 28 11 21 70 71 97 33 30 46 46 39 36 41 46 61 58 85 94 58 98 30 17 94 42 51 50 98 17 40 11 60 52 83 2 56 35 87 26 22 35 49 64 67 25 15 14 59 23 25 5 18 44 82 64 93 46 32 33 17 80\n100 15\n94 86 93 63 7 34 6 71 58 90 70 44 13 48 92 75 5 24 71 68 73 23 33 100 76 68 4 44 5 2 24 59 22 8 58 58 24 4 47 65 42 4 39 45 54 37 60 35 76 10 48 42 12 70 60 41 15 43 96 4 53 7 66 89 82 41 50 79 47 92 12 58 68 60 99 68 36 33 63 71 18 2 31 76 62 36 18 8 62 13 16 31 8 42 93 97 72 31 95 2\n\n\n###---###SEPERATOR---###---\n2 3 4 7 6 5 \n1 2 2 3 4 6 6 8 11 77 56 24 13 89 55 24 68 23 45 19 \n2 8 10 12 12 14 14 17 23 32 32 36 43 55 85 78 95 98 47 67 74 65 100 62 81 \n5 5 14 15 15 17 18 21 22 25 25 27 28 29 31 33 35 36 38 42 44 48 88 69 56 69 66 78 66 68 45 83 92 96 45 88 86 92 49 54 \n5 5 11 14 15 15 17 18 21 21 22 25 25 27 28 28 29 86 92 38 44 48 35 36 56 33 66 69 96 42 45 83 92 88 45 88 78 68 49 54 69 31 66 70 71 97 33 30 46 46 \n5 5 11 14 15 15 17 18 21 21 22 25 25 27 28 28 29 30 31 33 33 35 36 36 38 39 41 42 44 45 45 46 46 46 48 49 54 56 58 58 61 66 66 68 69 97 96 86 83 92 70 71 92 88 69 88 85 94 78 98 \n2 5 5 5 11 11 14 14 15 15 15 17 17 17 17 18 18 21 21 22 22 23 25 25 25 25 26 27 28 28 29 30 30 31 32 33 33 33 35 35 35 36 36 38 39 40 41 42 42 44 44 45 45 46 46 46 46 48 49 49 50 51 52 54 56 56 58 58 59 60 61 64 64 88 86 98 87 66 69 70 98 94 67 92 66 69 97 94 92 96 68 71 82 83 93 85 78 88 83 80 \n2 2 2 4 4 4 4 5 5 6 7 7 8 8 8 75 71 24 71 68 73 23 33 100 76 68 63 44 58 94 24 59 22 13 58 58 24 70 47 65 42 34 39 45 54 37 60 35 76 10 48 42 12 70 60 41 15 43 96 90 53 44 66 89 82 41 50 79 47 92 12 58 68 60 99 68 36 33 63 71 18 86 31 76 62 36 18 48 62 13 16 31 92 42 93 97 72 31 95 93", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}