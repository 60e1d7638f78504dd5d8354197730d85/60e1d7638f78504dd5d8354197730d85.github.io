{"Q_ID": "1414210010", "S_NAME": "Sorting Techniques", "Q_NAME": "Pebbles Game Merge Sort", "Q_DESC": "Given 2N pebbles of N different colors, where there exists exactly 2 pebbles of each color, you need to arrange these pebbles in some order on a table. You may consider the table as an infinite 2D plane.\n\nThe pebbles need to be placed under some restrictions :\n\nYou can place a pebble of color X, at a coordinate (X,Y) such that Y is not equal to X, and there exist 2 pebbles of color Y.\nIn short consider you place a pebble of color i at co-ordinate (X,Y). Here, it is necessary that (i=X) , (i!=Y) there exist some other pebbles of color equal to Y.\n\nNow, you need to enclose this arrangement within a boundary , made by a ribbon. Considering that each unit of the ribbon costs M, you need to find the minimum cost in order to make a boundary which encloses any possible arrangement of the pebbles. The ribbon is sold only in units (not in further fractions).\n\nInput Format:\n\nFirst line consists of an integer T denoting the number of test cases. The First line of each test case consists of two space separated integers denoting N and M.\n\nThe next line consists of N space separated integers, where the ith integer is A[i], and denotes that we have been given exactly 2 pebbles of color equal to A[i]. It is guaranteed that A[i]!=A[j], if i!=j\n\nOutput Format:\n\nPrint the minimum cost as asked in the problem in a separate line for each test case.\n\nConstraints:\n1T50\n3N105\n1M105\n\n1A[i]106 ; where \n1iN", "TESTCASE_1": "1\n3 5\n1 2 3\n###---###SEPERATOR---###---\n35", "TESTCASE_2": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_3": "2\n10 100000\n758475 384153 674864 86346 93719 602534 777482 109150 336288 997037 \n10 100000\n54007 85151 972002 318120 522327 75358 927295 825550 866815 902099\n###---###SEPERATOR---###---\n350983300000\n363328500000", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}