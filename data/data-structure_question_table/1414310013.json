{"Q_ID": "1414310013", "S_NAME": "Sorting Techniques", "Q_NAME": "Match makers", "Q_DESC": "Little Mojo owns a match making company, which even to her surprise is an extreme hit. She says that her success rate cannot be matched (Yeah, wordplay!) in the entire match-making industry. She follows an extremely simple algorithm to determine if two people are matches for each other. Her algorithm is not at all complex, and makes no sense - not even to her. But she uses it anyway.\n\nLet's say say that on a given day she decides to select n people - that is, n boys and n girls. She gets the list of n boys and n girls in a random order initially. Then, she arranges the list of girls in ascending order on the basis of their height and boys in descending order of their heights. A girl Ai can be matched to a boy on the same index only, that is, Bi and no one else. Likewise, a girl standing on Ak can be only matched to a boy on the same index Bk and no one else.\n\nNow to determine if the pair would make an ideal pair, she checks if the modulo of their heights is 0, i.e., Ai % Bi == 0 or Bi % Ai == 0. Given the number of boys and girls, and their respective heights in non-sorted order, determine the number of ideal pairs Mojo can find.\n\nInput format:\nThe first line contains number of test cases. Then, the next line contains an integer, n, saying the number of boys and girls. The next line contains the height of girls, followed by the height of boys.\n\nOutput format:\nPrint the number of ideal pairs corresponding to every test case.", "TESTCASE_1": "2\n4\n1 6 9 12\n4 12 3 9\n4\n2 2 2 2\n2 2 2 2\n###---###SEPERATOR---###---\n2\n4", "TESTCASE_2": "10\n95\n581 878 1155 1156 1166 1178 387 450 199 358 728 747 427 674 1068 433 190 187 617 1054 555 24 1072 770 579 334 388 1040 50 992 889 896 870 221 247 720 318 572 502 88 415 513 201 643 1155 1202 723 459 237 1169 469 507 484 958 246 326 696 68 990 291 1224 978 1009 1026 702 476 373 1025 983 574 389 826 445 1190 1207 850 83 157 1230 1190 71 18 424 572 521 1138 360 929 207 1028 1161 735 1119 344 854 499 371 378 1040 905 636 1105 427 300 309 649 1089 242 1094 1290 515 535 1214 472 1239 600 478 1000 420 607 93 1109 638 906 899 65 587 299 843 875 1052 498 1068 59 1193 1002 773 1112 254 999 1102 701 833 1090 693 553 21 1111 1022 938 673 255 358 1328 924 148 1211 467 991 822 826 756 465 337 1288 1222 832 1274 248 301 79 305 899 1184 797 834 402 389 453 247 326 1297 506 1176 1030 1008 581 423 881 1154 37\n514 692 687 340 612 357 294 916 1208 825 1060 375 627 142 698 704 684 779 944 65 695 376 833 844 865 369 901 639 174 398 242 1202 1219 600 17 34 979 438 1277 412 400 107 973 480 524 306 1237 106 1107 405 120 793 19 351 1123 696 75 456 1021 1065 1314 326 313 1224 595 471 717 220 385 1058 464 472 139 52 33\n579 1205 818 104 160 292 674 714 610 726 1008 1023 234 530 7 458 261 794 907 904 951 1043 409 403 429 188 763 613 90 506 1037 1010 294 619 754 648 930 35 36 555 229 888 412 473 1067 839 134 798 561 302 979 538 692 658 549 1023 610 1009 896 213 970 413 958 1258 1061 168 4\n656 577 675 911 259 1122 618 265 52\n1130 504 423 998 1011 905 790 1226 597 383 1140 1091 592 1227 128 847 387 552 77 1110 540 738 673 400 447 326 833 667 298 879 1130 428 591 605 978 761 937 867 550 911 369 822 124 253 1129 922 355 128 222 223 1058 90 250 688 161 1261 1128 508 163 715 338 378 825 45 1092 386 358 1132 868 1118 947 760 1321 378 786 885 598 1307 478 1092 1112 585 1188 1229 693 1097 509 1061 982 1231 411 974 1213 725 654 851 764 1284 695 1062 1223 4 1099 1234 36\n1055 863 1031 729 1205 1101 763 646 59 1128 508 1123 296 256 221 49 1052 240 233 144 440 633 57 1025 539 195 12 838 1115 659 979 773 81 854 219 1234 305 1324 1138 638 1072 1001 592 900 107 822 854 984 379 352 959 790 113 39 1011 1214 672 537 44 641 1263 1303 429 1114 687 335 1109 1257 144 458 171 1055 96\n933 438 1005 246 125 957 1084 1137 128 185 854 797 87 209 812 765 246 459 231 876 697 478 859 502 551 287 724 758 780 1018 742 214 986 930 351 611 709 894 827 485 699 745 780 895 521 68 544 229 257 802 424 780 651 558 778 354 417 1025 637 881 1133 305 708 577 177 871 871 1005 681 592 311 596 163 116 181 249 1002 840 178 1139 580 1168 176 1035 59 778 702 865 323 769 101 215 1154 702 48 287 621 516 768 1193 834 1248 242 999 1309 390 284 1057 1258 133 85 82 316 431 1305 269 600 408 144 308 1210 290 1182 1013 1274 1222 876 220 1222 2 720 250 54 1269 60 115 425 80 1172 110 861 1175 1169 132 683 1085 286 116 1163 1127 460 813 1105 737 193 1242 79 625 764 252 440 381 315 73 404 6 205 680 218 811 799 1314 1028 1159 363 391 924 1032 880 551 170 200 288 253 803 521 774 901 272 1035 994 402 97\n238 404 1030 510 161 433 1052 552 106 715 119 8 1196 941 612 471 564 407 200 425 1118 687 439 58 513 1057 641 1109 1143 1158 1007 910 385 799 1085 895 1214 905 378 349 1219 154 117 1167 1047 68 392 434 1161 1061 756 1227 325 242 251 1041 949 548 714 578 689 970 67 764 328 795 868 1056 21 940 394 515 1037 279 393 603 215 708 423 589 846 1125 936 390 907 164 1200 937 420 1000 428 419 967 654 1143 402 234 314 437 146 1227 45 802 1112 305 1285 225 931 1226 661 620 1062 845 1280 752 991 1061 361 222 16 526 154 437 924 822 762 1176 1189 261 763 889 407 656 46 855 155 590 367 295 109 3 469 275 160 862 842 683 912 133 421 225 339 1317 1269 1070 851 371 344 111 1010 827 931 560 1134 1059 447 293 788 129 826 543 496 1301 1021 753 907 724 900 1135 2 934 713 1107 474 82 1177 601 792 257 1062 575 1257 633 1243 70\nn1125 645 86 796 1124 578 36 1054 1276 315 1311 914 1020 1102 1225 159\n###---###SEPERATOR---###---\n0\n1\n0\n0\n0\n0\n1\n1\n2\n0", "TESTCASE_3": "2\n3\n1 9 8\n5 2 3\n3\n2 3 9\n2 9 0\n###---###SEPERATOR---###---\n1\n1", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}