{"Q_ID": "1415110018", "S_NAME": "Linked List  Implementati", "Q_NAME": "Middle Node in a SLL", "Q_DESC": "Given a singly linked list, find middle of the linked list. \nIf there are even nodes, then print second middle element. For example, if given linked list is 1->2->3->4->5 then output should be 3.\nIf there are even nodes, then there would be two middle nodes, we need to print second middle element. For example, if given linked list is 1->2->3->4->5->6 then output should be 4.\n\nINPUT\nFirst line contains the number of datas- N. \nSecond line contains N integers(the given linked list).\n\nOUTPUT\n\nDisplay the Linked List.\nDisplay middle node.\n", "TESTCASE_1": "5\n1 2 3 4 5\n###---###SEPERATOR---###---\nLinked list\n-->5-->4-->3-->2-->1\nThe middle element is [3]", "TESTCASE_2": "6\n1 2 3 4 5 6\n###---###SEPERATOR---###---\n\n\nLinked list\n-->6-->5-->4-->3-->2-->1\nThe middle element is [3]", "TESTCASE_3": "5\n5 2 1 7 3\n###---###SEPERATOR---###---\nLinked list\n-->3-->7-->1-->2-->5\nThe middle element is [1]", "TESTCASE_4": "4\n5 2 7 3\n###---###SEPERATOR---###---\n\n\nLinked list\n-->3-->7-->2-->5\nThe middle element is [2]", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}