{"Q_ID": "1415110027", "S_NAME": "Linked List  Implementati", "Q_NAME": "Intersection of two Sorted SLL", "Q_DESC": "Given two lists sorted in increasing order, create and return a new list representing the intersection of the two lists. The new list should be made with its own memory  the original lists should not be changed.\n\nFor example, let the first linked list be 1-2-3-4-6 and second linked list be 2-4-6-8, then your function should create and return a third list as 2-4-6.\n\nINPUT\nFirst line contains 2 int N1 and N2 as number of students of class A and B respectively. \nSecond line contains N1 integers (heights of students of class A in ascending order).\nThird line contains N2 integers (heights of students of class B in ascending order).\n\nOUTPUT\nDisplay the list1\nDisplay the list2\nDisplay the common list.", "TESTCASE_1": "4 5\n1 3 5 7\n2 3 5 8 9\n###---###SEPERATOR---###---\n\n\nList 1\n-1-3-5-7\nList 2\n-2-3-5-8-9\nCommon list\n-3-5\n\n", "TESTCASE_2": "6 6\n1 3 5 7 9 11\n2 3 4 5 6 7\n###---###SEPERATOR---###---\nList 1\n-1-3-5-7-9-11\nList 2\n-2-3-4-5-6-7\nCommon list\n-3-5-7", "TESTCASE_3": "5 5 \n1 7 9 11 13\n0 1 3 4  7\n###---###SEPERATOR---###---\nList 1\n-1-7-9-11-13\nList 2\n-0-1-3-4-7\nCommon list\n-1-7", "TESTCASE_4": "4 4\n3 4 6 8\n1 2 5 7\n###---###SEPERATOR---###---\n\n\nList 1\n-3-4-6-8\nList 2\n-1-2-5-7\nCommon list", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}