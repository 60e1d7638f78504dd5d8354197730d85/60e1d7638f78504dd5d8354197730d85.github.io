{"Q_ID": "1415110032", "S_NAME": "Linked List  Implementati", "Q_NAME": "Reverse alternate K nodes -SLL", "Q_DESC": "Reverse alternate K nodes in a Singly Linked List\n\nGiven a linked list, write a function to reverse every alternate k nodes (where k is an input to the function) in an efficient way. Give the complexity of your algorithm.\n\nExample:\nInputs:   1->2->3->4->5->6->7->8->9 and k = 3\nOutput:   3->2->1->4->5->6->9->8->7\n\nINPUT\nFirst line contains the number of datas- N1\nSecond line contains N1 integers (linked list).\nThird line contains Key K.\nOUTPUT\nDisplay Given Linked list.\nDisplay Customized Linked list.\n\n", "TESTCASE_1": "7\n1 2 3 4 5 6 7\n2\n###---###SEPERATOR---###---\n\n\nGiven linked list\n->1->2->3->4->5->6->7\nModified Linked list\n->2->1->3->4->6->5->7\n", "TESTCASE_2": "8\n1 3 5 7 8 0 9 2 \n3\n###---###SEPERATOR---###---\n\n\nGiven linked list\n->1->3->5->7->8->0->9->2\nModified Linked list\n->5->3->1->7->8->0->2->9\n", "TESTCASE_3": "9\n1 3 5 7 8 0 9 2 6\n4\n###---###SEPERATOR---###---\n\n\nGiven linked list\n->1->3->5->7->8->0->9->2->6\nModified Linked list\n->7->5->3->1->8->0->9->2->6\n", "TESTCASE_4": "10\n1 3 5 7 8 0 9 2 6 4\n4\n###---###SEPERATOR---###---\n\n\nGiven linked list\n->1->3->5->7->8->0->9->2->6->4\nModified Linked list\n->7->5->3->1->8->0->9->2->4->6\n", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}