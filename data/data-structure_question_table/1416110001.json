{"Q_ID": "1416110001", "S_NAME": "Stack Implementation", "Q_NAME": "Stack 1", "Q_DESC": "Given a stack, sort it using recursion. Use of any loop constructs like while, for..etc is not allowed. We can only use the following ADT functions on Stack S .This problem is mainly a variant of Reverse stack using recursion.\n\nThe idea of the solution is to hold all values in Function Call Stack until the stack becomes empty. When the stack becomes empty, insert all held items one by one in sorted order. Here sorted order is important.Input the number of elements and the value of the elements to be pushed into the stack .\n ", "TESTCASE_1": "5\n30 -5 18 14 -3\n###---###SEPERATOR---###---\nStack elements before sorting:\n-3 14 18 -5 30 \n\n\nStack elements after sorting:\n30 18 14 -3 -5 ", "TESTCASE_2": "4\n8 0 2 4\n###---###SEPERATOR---###---\nStack elements before sorting:\n4 2 0 8 \n\n\nStack elements after sorting:\n8 4 2 0 ", "TESTCASE_3": "6\n4 -3 -6 9 5 2\n###---###SEPERATOR---###---\nStack elements before sorting:\n2 5 9 -6 -3 4 \n\n\nStack elements after sorting:\n9 5 4 2 -3 -6 \n", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}