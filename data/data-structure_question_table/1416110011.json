{"Q_ID": "1416110011", "S_NAME": "Stack Implementation", "Q_NAME": "Stack 11", "Q_DESC": "Implement two stacks in an array\nCreate a data structure twoStacks that represents two stacks. Implementation of twoStacks should use only one array, i.e., both stacks should use the same array for storing elements. Following functions must be supported by twoStacks.\n\npush1(int x)  pushes x to first stack\npush2(int x)  pushes x to second stack\n\npop1()  pops an element from first stack and return the popped element\npop2()  pops an element from second stack and return the popped element\n\nImplementation of twoStack should be space efficient.\nINPUT:\nThe first line of the input must contain number of elements in the array used for stack implementation. \nThe second line of input must contain elements to be present in first stack\nThe third line of input must contain elements to be present in second stack\nOUTPUT:\npop out the top element from first stack\npop out the top element from second stack", "TESTCASE_1": "3\n3 5 2\n6 1 9\n\n###---###SEPERATOR---###---\nPopped element from stack1 is 2\nPopped element from stack2 is 9", "TESTCASE_2": "3\n4 1 2 \n8 5 3 \n###---###SEPERATOR---###---\nPopped element from stack1 is 2\nPopped element from stack2 is 3", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}