{"Q_ID": "1416110016", "S_NAME": "Stack Implementation", "Q_NAME": "Stack 15", "Q_DESC": "The major problem with the stack implemented using array is, it works only for fixed number of data values. That means the amount of data must be specified at the beginning of the implementation itself. Stack implemented using array is not suitable, when we don't know the size of data which we are going to use. A stack data structure can be implemented by using linked list data structure. The stack implemented using linked list can work for unlimited number of values. That means, stack implemented using linked list works for variable size of data. So, there is no need to fix the size at the beginning of the implementation. The Stack implemented using linked list can organize as many data values as we want. \n\nIn linked list implementation of a stack, every new element is inserted as 'top' element. That means every newly inserted element is pointed by 'top'. Whenever we want to remove an element from the stack, simply remove the node which is pointed by 'top' by moving 'top' to its next node in the list. The next field of the first element must be always NULL. \nEXAMPLE:\ninitial stack : 2->3->5->!!\npushing element 9 : 9->2->3->5->!!\npopping element 9: 2->3->5->!!\nINPUT:\nfirst line of input must initialize the stack and hence top element value  must be input here.\nsecond line of input must contain user's choice on whether to push or pop or display the stack.\nthird line of input must contain the element to be pushed if choice entered by user was to push the element (optional and depends on second line of input)\nfourth line of input must contain the user's reply to  if he/she wants to continue further operation on stack or not. \n", "TESTCASE_1": "4\n1\n3\ny\n1\n6\ny\n1\n8\ny\n1\n2\ny\n2\ny\n3\nn\n###---###SEPERATOR---###---\ndeleted element is 2\nstatus of the stack is\n8->6->3->4->!", "TESTCASE_2": "8\n1\n0\ny\n1\n2\ny\n1\n7\ny\n2\ny\n1\n3\ny\n3\ny\n2\ny\n3\nn\n###---###SEPERATOR---###---\ndeleted element is 7\nstatus of the stack is\n3->2->0->8->!deleted element is 3\nstatus of the stack is\n2->0->8->!", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}