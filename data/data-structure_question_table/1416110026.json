{"Q_ID": "1416110026", "S_NAME": "Stack Implementation", "Q_NAME": "Stack 25", "Q_DESC": "Iterative Postorder Traversal (Using One Stack):\nThe idea is to move down to leftmost node using left pointer. While moving down, push root and roots right child to stack. Once we reach leftmost node, print it if it doesnt have a right child. If it has a right child, then change root so that the right child is processed before.\nINPUT :\nthe first and only line of input contains the value of root node using which the values of other child nodes is appointed in a consecutive fashion depending upon the input value in this line.", "TESTCASE_1": "1\n###---###SEPERATOR---###---\nPost order traversal of binary tree is :\n[4 5 2 6 7 3 1 ]", "TESTCASE_2": "3\n###---###SEPERATOR---###---\nPost order traversal of binary tree is :\n[6 7 4 8 9 5 3 ]", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}