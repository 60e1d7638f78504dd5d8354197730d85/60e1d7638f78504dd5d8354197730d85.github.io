{"Q_ID": "1416310009", "S_NAME": "Stack Implementation", "Q_NAME": "Stack 53", "Q_DESC": "Sam and sanu are roommates .Due to preparations of Fest Sanu is got frustrated and wanted to do some task to divert his mind.He ask sam to suggest a game .\n\nSam describes the game - he give a number n to sanu. he covert it to binary form and replace 0 with '}' and 1 with' { 'in binary string.if string is closed than print Great number! otherwise print No \n\nclosed string follow this rules:\n\n1. s1=  is closed string.\n\n2. s2={s1} and s3={}s1 both of them are also closed string.\n\n3. eg. {}{{}} ,{}{}, {{}}{}{} are closed string while {}{{} , {{{{{} and {}}{{} are not closed strings.\n\nInput\nThe first line contains T i.e. the number of test cases.\n.\nT lines follow, each line containing an integer,N\n \n\nOutput\nFor each testcase ,print whether it is great number or not.\n \n\nConstraints\n1  T  10^5\n1  N  10^5", "TESTCASE_1": "3\n2\n10\n37\n###---###SEPERATOR---###---\nGreat number!\nGreat number!\nNo", "TESTCASE_2": "4\n5\n12\n26\n2\n###---###SEPERATOR---###---\nNo\nGreat number!\nNo\nGreat number!", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}