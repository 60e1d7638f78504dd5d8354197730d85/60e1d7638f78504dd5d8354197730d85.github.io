{"Q_ID": "1416310011", "S_NAME": "Stack Implementation", "Q_NAME": "Stack 55", "Q_DESC": "Chef has recently learnt about sequences of parentheses. These are special sequences that contain only the characters '(' and ')'.\n\nA regular parentheses sequence follows the following definition:\n\nAn empty sequence is regular\nIf S is a regular sequence, then (S) is also regular\nIf A and B represent two regular sequences, then their concatenation AB is also regular.\nTherefore, the sequences (), ()() and (())() are regular, while ()(, ) and ))() are non-regular.\n\nNow, you need to find the longest subsequence of the given sequence which is non-regular. Amongst all such distinct answers, output the lexicographically Kth amongst them. If the number of distinct subsequences with maximum length is less than K, please output -1 instead.\n\nInput:\nThe first line contains a single integer T, denoting the number of test cases to follow.\nEach of the test cases have exactly two lines, the first contains the parentheses sequence and the second contains the value of K.\n\nOutput:\nOutput exactly T lines, each containing answer to the corresponding query.\n\nConstraints:\n1  T  10\n1  |S|  105\n1  K  109", "TESTCASE_1": "5\n()\n2\n(()\n1\n(()\n2\n(())\n2\n(())\n3\n\n###---###SEPERATOR---###---\n)\n(()\n-1\n())\n-1", "TESTCASE_2": "3\n(()\n2\n(()))\n1\n(())\n3\n\n###---###SEPERATOR---###---\n-1\n(()))\n-1", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}