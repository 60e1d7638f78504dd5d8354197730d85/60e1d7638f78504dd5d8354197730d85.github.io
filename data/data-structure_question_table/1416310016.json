{"Q_ID": "1416310016", "S_NAME": "Stack Implementation", "Q_NAME": "Stack 59", "Q_DESC": "Boundary Traversal of binary tree\nGiven a binary tree, print boundary nodes of the binary tree Anti-Clockwise starting from the root. For example, boundary traversal of the  tree 20 8 4 12 10 14 22 25 is 20 8 4 10 14 25 22. \nWe break the problem in 3 parts:\n1. Print the left boundary in top-down manner.\n2. Print all leaf nodes from left to right, which can again be sub-divided into two sub-parts:\n..2.1 Print all leaf nodes of left sub-tree from left to right.\n..2.2 Print all leaf nodes of right subtree from left to right.\n3. Print the right boundary in bottom-up manner.\n\nWe need to take care of one thing that nodes are not printed again. e.g. The left most node is also the leaf node of the tree.\nINPUT:\nenter the value of the following :\nstruct node *root         \n    root-left                \n    root-left-left          \n    root-left-right         \n    root-left-right-left   \n    root-left-right-right  \n    root-right               \n    root-right-right        \nOUTPUT: \nFor each test case in a new line print the leaf nodes separated by space of the BST in sorted order.", "TESTCASE_1": "20 8 4 12 10 14 22 25\n###---###SEPERATOR---###---\n20 8 4 10 14 25 22", "TESTCASE_2": "50 4 1 28 24 30 36 55\n###---###SEPERATOR---###---\n50 4 1 24 30 55 36", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}