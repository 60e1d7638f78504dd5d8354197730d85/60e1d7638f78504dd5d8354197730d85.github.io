{"Q_ID": "1417110008", "S_NAME": "Queue  Implementation", "Q_NAME": "Josephus Problem using Circular Queue", "Q_DESC": "There are 'n' people standing in a circle waiting to be executed. The counting out begins at some point in the circle and proceeds around the circle in a fixed direction. In each step, a certain number of people are skipped and the next person is executed. \n\nThe elimination proceeds around the circle (which is becoming smaller and smaller as the executed people are removed), until only the last person remains, who is given freedom. Given the total number of persons n and a number k which indicates that k-1 persons are skipped and kth person is killed in circle. \n\nFor example, if n = 5 and k = 2, then the safe position is 3. \nFirstly, the person at position 2 is killed, then person at position 4 is killed, then person at position 1 is killed. Finally, the person at position 5 is killed. So the person at position 3 survives.Implement this problem by using a Circular queue.\n\nINPUT:\n\nThe first line of input contains the number of people(n) in the circle who are numbered from 1 to n and second line of input is number of passes(k) which indicates that kth person is killed in that circle .\n\nOUTPUT:\n\nThe first line of output must contain the order in which the persons get executed from first person to last one to get executed separated by spaces.The next line of output must be the last person who survives", "TESTCASE_1": "5\n2\n###---###SEPERATOR---###---\n2 4 1 5 \n3", "TESTCASE_2": "7\n3\n###---###SEPERATOR---###---\n3 6 2 7 5 1 \n4", "TESTCASE_3": "14\n2\n###---###SEPERATOR---###---\n2 4 6 8 10 12 14 3 7 11 1 9 5 \n13", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}