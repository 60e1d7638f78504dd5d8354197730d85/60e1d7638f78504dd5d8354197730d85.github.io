{"Q_ID": "1417110016", "S_NAME": "Queue  Implementation", "Q_NAME": "Minimum time required to rot all oranges", "Q_DESC": "Given a matrix of dimension m*n where each cell in the matrix can have values 0, 1 or 2 which has the following meaning:\n\n0: Empty cell\n\n1: Cells have fresh oranges\n\n2: Cells have rotten oranges \nSo we have to determine what is the minimum time required so that all the oranges become rotten. A rotten orange at index [i,j] can rot other fresh orange at indexes [i-1,j], [i+1,j], [i,j-1], [i,j+1] (up, down, left and right). If it is impossible to rot every orange then simply return -1.\nUsing queue Breadth First Search solve this problem.\n\nINPUT:\n\nThe matrix of dimension 5*3 with values 0,1 or 2 will be given as input.\n\nOUTPUT:\nTime required for all oranges to rot should be printed if all oranges can rot or else \"-1\" should be printed.", "TESTCASE_1": "2 1 0 2 1\n1 0 1 2 1\n1 0 0 2 1\n###---###SEPERATOR---###---\n2", "TESTCASE_2": "2 1 0 2 1\n0 0 1 2 1\n1 0 0 2 1\n###---###SEPERATOR---###---\n-1", "TESTCASE_3": "2 1 1 2 0\n2 2 0 0 1\n2 2 0 0 2\n###---###SEPERATOR---###---\n1", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}