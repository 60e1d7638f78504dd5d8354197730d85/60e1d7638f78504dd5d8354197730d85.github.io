{"Q_ID": "1417210013", "S_NAME": "Queue Implementation", "Q_NAME": "The Running Median using priority queue", "Q_DESC": "The median of a set of integers is the midpoint value of the data set for which an equal number of integers are less than and greater than the value. To find the median, you must first sort your set of integers in non-decreasing order, then:\n-If your set contains an odd number of elements, the median is the middle element of the sorted sample. In the sorted set{1,2,3}, 2 is the median.\n-If your set contains an even number of elements, the median is the average of the two middle elements of the sorted sample. In the sorted set {1,2,3,4}, (2+3)/2=2.5 is the median.\n\nGiven an input stream of  integers, you must perform the following task for each integer:\n-Add the  integer to a running list of integers.\n-Find the median of the updated list (i.e., for the first element through the  element).\n-Print the list's updated median on a new line. The printed value must be a double-precision number scaled 1 to decimal place (i.e.,12.3format).Using priority queue,find the running median for the given integers.\n\nINPUT:\nThe first line contains a single integer, N, denoting the number of integers in the data stream. \nEach line i of the N subsequent lines contains an integer,Ai to be added to your list.\n\nOUTPUT:\nAfter each new integer is added to the list, print the list's updated median on a new line as a single double-precision number scaled to 1 decimal place (i.e., 12.3 format).\n\nEXPLANATION:\nConsider the input to be as:\n6\n12\n4\n5\n3\n8\n7\nThere are 6 integers, so we must print the new median on a new line as each integer is added to the list,sorted and then median is found:\n1. list ={12}, median=12.0\n2. list ={12,4}, median=8.0\n3. list ={12,4,5}, median=5.0\n4. list ={12,4,5,3}, median=4.5\n5. list ={12,4,5,3,8},median=5.0\n6. list ={12,4,5,3,8,7}, median=6.0\n", "TESTCASE_1": "6\n12\n4\n5\n3\n8\n7\n###---###SEPERATOR---###---\n12.0\n8.0\n5.0\n4.5\n5.0\n6.0", "TESTCASE_2": "7\n8\n10\n2\n5\n3\n6\n9\n###---###SEPERATOR---###---\n8.0\n9.0\n8.0\n6.5\n5.0\n5.5\n6.0", "TESTCASE_3": "10\n11\n14\n5\n7\n9\n2\n3\n6\n16\n5\n###---###SEPERATOR---###---\n11.0\n12.5\n11.0\n9.0\n9.0\n8.0\n7.0\n6.5\n7.0\n6.5", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}