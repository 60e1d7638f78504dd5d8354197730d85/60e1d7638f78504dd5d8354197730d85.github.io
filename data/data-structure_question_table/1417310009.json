{"Q_ID": "1417310009", "S_NAME": "Queue Implementation", "Q_NAME": "Card Rotation", "Q_DESC": "Given a sorted deck of cards numbered 1 to N.\n1) We pick up 1 card and put it on the back of the deck.\n2) Now, we pick up another card , it turns out to be card numbered 1 , we put it outside the deck.\n3) Now we pick up 2 cards and put it on the back of the deck.\n4) Now, we pick up another card and it turns out to be card numbered 2 , we put it outside the deck. ...\nWe perform this step till the last card.If such arrangement of decks is possible, output the arrangement, if it is not possible for a particular value of N then output -1.Our goal is to come up with an arrangement of cards in our hand such that all of our cards should be placed on the deck, and none of them should be placed outside the deck. If such arrangement is not possible, output -1. \n\nExample:\nInput :\n2\n4\n5\nOutput :\n2 1 4 3\n3 1 4 5 2\n\nINPUT:\nThe first line of the input contains the number of test cases 'T', after that 'T' test cases follow. \nEach line of the test case consists of a single linecontaining an integer 'N'.\n\nOUTPUT:\nIf such arrangement of decks is possible, output the arrangement, if it is not possible for a particular value of n then output -1.\n\nEXPLANATION:\nInitial position | No. of cards picked and placed on back of hand | Resultant position | Top card in hand that will be placed on deck\n2 1 4 3 | 1 | 1 4 3 2 | 1\n4 3 2 | 2 | 2 4 3 | 2\n4 3 | 3 | 3 4 | 3\n4 | 4 | 4 | 4\nHence, with arrangement '2 1 4 3', we can place all cards on deck and that too with the required sequence of 1 2 3 4.", "TESTCASE_1": "2\n4\n5\n###---###SEPERATOR---###---\n2 1 4 3 \n3 1 4 5 2 ", "TESTCASE_2": "3\n10\n5\n3\n###---###SEPERATOR---###---\n9 1 8 5 2 4 7 6 3 10 \n3 1 4 5 2 \n3 1 2 ", "TESTCASE_3": "5\n3\n7\n2\n8\n9\n###---###SEPERATOR---###---\n3 1 2 \n5 1 3 4 2 6 7 \n2 1 \n3 1 7 5 2 6 8 4 \n7 1 8 6 2 9 4 5 3 ", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}