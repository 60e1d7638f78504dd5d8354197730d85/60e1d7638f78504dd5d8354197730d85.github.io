{"Q_ID": "1420110024", "S_NAME": "Hashing", "Q_NAME": "Find the Smallest Window in the String", "Q_DESC": "Given a string and text output the smallest window in the string which covers all the characters present in the text. Both the string and text contains small case letters. If such window doesnot exist or this task can not be done then print -1.\n\nInput:\nEach line contains 2 strings and  ( n is the main string and x is the text )\n\nOutput:\nOutput the smallest window of the string containing all the characters of the text.\n\nToday, Xsquare has a special string S consisting of lower case English letters. He can remove as many characters ( possibly zero ) as he wants from his special string S. Xsquare wants to know , if its possible to convert his string S to a double string or not. Help him in accomplishing this task.\n\nNote :\n\nOrder of the characters left in the string is preserved even after deletion of some characters.\n\nInput :\n\nFirst line of input contains a single integer T denoting the number of test cases. First and the only line of each test case contains a string S denoting Xsquare's special string.\n\nOutput :\n\nFor each test case, print \"Yes\" if it is possible to convert the given string to a double string. Print \"No\" otherwise.\n\nConstraints :\n\n1<=  T<=  100\n1 <= |S|<=  100\nString |S| consists of lower case english alphabets only.\nSubtasks :\n\nSubtask 1 : 1<=  T<=  100 , 1<=  |S| <= 26 : ( 30 pts )\nSubtask 2 : 1<=  T<=  100 , 27 <= |S|<= 100 : ( 30 pts )\nSubtask 3 : 1<=  T<=  100 , 1<=  |S|<=  100 : ( 40 pts )", "TESTCASE_1": "timetopractice\ntoc\n###---###SEPERATOR---###---\ntoprac", "TESTCASE_2": "zoomlazapzo\noza\n###---###SEPERATOR---###---\napzo", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}