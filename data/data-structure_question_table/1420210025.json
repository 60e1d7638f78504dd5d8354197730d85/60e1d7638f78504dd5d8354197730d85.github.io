{"Q_ID": "1420210025", "S_NAME": "Hashing", "Q_NAME": "Hash it out!", "Q_DESC": "Your task is to calculate the result of the hashing process in a table of 101 elements, containing keys that are strings of length at most 15 letters (ASCII codes 'A',...,'z'). Implement the following operations:\n\nfind the index of the element defined by the key (ignore, if no such element),\ninsert a new key into the table (ignore insertion of the key that already exists),\ndelete a key from the table (without moving the others), by marking the position in table as empty (ignore non-existing keys in the table)\nWhen performing find, insert and delete operations define the following function: \ninteger Hash(string key),\nwhich for a string key=a1...an returns the value:\nHash(key)=h(key) mod 101, where \nh(key)=19 *(ASCII(a1)*1+...+ASCII(an)*n).\nResolve collisions using the open addressing method, i.e. try to insert the key into the table at the first free position: (Hash(key)+j2+23*j) mod 101, for j=1,...,19. After examining of at least 20 table entries, we assume that the insert operation cannot be performed.\n\nInput\n\n\nt [the number of test cases = 100] \nn1 [the number of operations (one per line)[= 1000] \nADD:string \n[or] \nDEL:string [other test cases, without empty lines betwee series]\n\nOutput\n\nFor every test case you have to create a new table, insert or delete keys, and write to the output: \nthe number of keys in the table [first line] \nindex:key [sorted by indices]", "TESTCASE_1": "1\n11\nADD:marsz\nADD:marsz\nADD:Dabrowski\nADD:z\nADD:ziemii\nADD:wloskiej\nADD:do\nADD:Polski\nDEL:od\nDEL:do\nDEL:wloskiej\n###---###SEPERATOR---###---\n1\n11\nADD:marsz\nADD:marsz\nADD:Dabrowski\nADD:z\nADD:ziemii\nADD:wloskiej\nADD:do\nADD:Polski\nDEL:od\nDEL:do\nDEL:wloskiej", "TESTCASE_2": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}