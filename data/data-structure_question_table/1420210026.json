{"Q_ID": "1420210026", "S_NAME": "Hashing", "Q_NAME": "Simple Minded Hashing", "Q_DESC": "All of you know a bit or two about hashing. It involves mapping an element into a numerical value\nusing some mathematical function. In this problem we will consider a very simple minded hashing.\nIt involves assigning numerical value to the alphabets and summing these values of the characters.\nFor example, the string acm is mapped to 1 + 3 + 13 = 17. Unfortunately, this method does not\ngive one-to-one mapping. The string adl also maps to 17 (1 + 4 + 12). This is called collision.\nIn this problem you will have to find the number of strings of length L, which maps to an integer S,\nusing the above hash function. You have to consider strings that have only lowercase letters in strictly\nascending order.\nSuppose L = 3 and S = 10, there are 4 such strings.\n1. abg\n2. acf\n3. ade\n4. bce\nagb also produces 10 but the letters are not strictly in ascending order.\nbh also produces 10 but it has 2 letters.\n\nInput\nThere will be several cases. Each case consists of 2 integers L and S (0  L, S  10000). Input is\nterminated with 2 zeros.\n\nOutput\nFor each case, output Case#: where # is replaced by case number. Then output the result. Follow\nthe sample for exact format. The result will fit in 32 signed integers.", "TESTCASE_1": "3 10\n2 3\n0 0\n\n###---###SEPERATOR---###---\nCase 1: 4\nCase 2: 1", "TESTCASE_2": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}