{"Q_ID": "1311110083", "S_NAME": "Input and Output Statemen", "Q_NAME": "Java Stdin and Stdout I", "Q_DESC": "Most HackerRank challenges require you to read input from stdin (standard input) and write output to stdout (standard output).\n\nOne popular way to read input from stdin is by using the Scanner class and specifying the Input Stream as System.in. For example:\n\nScanner scanner = new Scanner(System.in);\nString myString = scanner.next();\nint myInt = scanner.nextInt();\nscanner.close();\n\nSystem.out.println(\"\"myString is: \"\" + myString);\nSystem.out.println(\"\"myInt is: \"\" + myInt);\nThe code above creates a Scanner object named  and uses it to read a String and an int. It then closes the Scanner object because there is no more input to read, and prints to stdout using System.out.println(String). So, if our input is:\n\nHi 5\nOur code will print:\n\nmyString is: Hi\nmyInt is: 5\nAlternatively, you can use the BufferedReader class.\n\nTask \nIn this challenge, you must read  integers from stdin and then print them to stdout. Each integer must be printed on a new line. To make the problem a little easier, a portion of the code is provided for you in the editor below.\n\nInput Format\n\nThere are  lines of input, and each line contains a single integer.\n\nOutput format\n\n Print the each input values in single line.\n\nRefer sample test case.", "TESTCASE_1": "42\n100\n125\n###---###SEPERATOR---###---\n42\n100\n125", "TESTCASE_2": "12\n23\n34\n###---###SEPERATOR---###---\n12\n23\n34", "TESTCASE_3": "56\n37\n89\n###---###SEPERATOR---###---\n56\n37\n89", "TESTCASE_4": "101\n13\n26\n###---###SEPERATOR---###---\n101\n13\n26", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}