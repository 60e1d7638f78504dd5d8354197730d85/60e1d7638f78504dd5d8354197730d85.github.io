{"Q_ID": "1311110084", "S_NAME": "Input and Output Statemen", "Q_NAME": "Java Stdin and Stdout II", "Q_DESC": "In this challenge, you must read an integer, a double, and a String from stdin, then print the values according to the instructions in the Output Format section below. To make the problem a little easier, a portion of the code is provided for you in the editor.\n\nNote: We recommend completing Java Stdin and Stdout I before attempting this challenge.\n\nInput Format:\nThere are three lines of input:\n\nThe first line contains an integer.\nThe second line contains a double.\nThe third line contains a String.\n\nOutput Format:\nThere are three lines of output:\n\nOn the first line, print String: followed by the unaltered String read from stdin.\nOn the second line, print Double: followed by the unaltered double read from stdin.\nOn the third line, print Int: followed by the unaltered integer read from stdin.\nTo make the problem easier, a portion of the code is already provided in the editor.\n\nNote: If you use the nextLine() method immediately following the nextInt() method, recall that nextInt() reads integer tokens; because of this, the last newline character for that line of integer input is still queued in the input buffer and the next nextLine() will be reading the remainder of the integer line (which is empty).\n\nSample Input\n\n42\n3.1415\nWelcome to HackerRanks Java tutorials\n\nSample Output\nString: Welcome to HackerRanks Java tutorials!\nDouble: 3.1415\nInt: 42", "TESTCASE_1": "42\n3.1415\nWelcome to HackerRank\\\\\\'s Java tutorials!\n###---###SEPERATOR---###---\nString: Welcome to HackerRank\\\\\\'s Java tutorials!\nDouble: 3.1415\nInt: 42", "TESTCASE_2": "100\n42\n42 is the answer to life, the universe, and everything!\n###---###SEPERATOR---###---\nString: 42 is the answer to life, the universe, and everything!\nDouble: 42.0\nInt: 100", "TESTCASE_3": "11\n102\njust beginning\n###---###SEPERATOR---###---\nString: just beginning\nDouble: 102.0\nInt: 11", "TESTCASE_4": "19\n21.5555\nNew line character\n###---###SEPERATOR---###---\nString: New line character\nDouble: 21.5555\nInt: 19", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}