{"Q_ID": "1311210009", "S_NAME": "Input and Output Statemen", "Q_NAME": "Extreme Encoding", "Q_DESC": "Lajuk is a little girl who loves playing with array. In her 10th birthday, she got two arrays as presents. Lets call them A and B. Both arrays have the same size n and contains integers between 0 to 30000.\n\nLajuks hard-drive is almost full of presents and she barely has any space to keep the arrays. She discovered a brilliant function to merge the array into one:\n\n\nint encodeInteger(int x, int n){\n n = n(1(1(11)));\n x = x | n;\n return x;\n}\nvoid encodeArray(int *A, int *B, int n){\n for(int i=0;in;i++) {\n         A[i] = encodeInteger(A[i], B[i]);\n }\n}\nLajuk passed A and B into the encodeArray function. After that she discarded array B and saved the modified version of array A in the hard-drive.\n\nNow in her 15th birthday Lajuk wants to play with those arrays again. She found the modified version of array A in the hard-drive but she forgot how to recover the original arrays from it. Being upset, she asked for your help. Can you help her to recover the original arrays?\n\nInput\n\nThe first line contains T (1=T=100), the number of test cases. The first line of each test cases contains n (1=n=104), the size of the array. Next n line contains n integers denoting the modified array A.\n\nOutput\n\nFor each case print the case number in the first line. In the second line, print n integers denoting the original array A. In the third line print n integers denoting the array B. Two consecutive integers should be separated by a single space.", "TESTCASE_1": "1\n4\n196613\n655370\n196620\n131079\n###---###SEPERATOR---###---\nCase 1:\n5 10 12 7 \n3 10 3 2", "TESTCASE_2": "1\n4\n200158\n456870\n131892\n10028\n###---###SEPERATOR---###---\nCase 1:\n3550 63654 820 10028 \n3 6 2 0", "TESTCASE_3": "1\n4\n655894\n712420\n506248\n111125\n###---###SEPERATOR---###---\nCase 1:\n534 57060 47496 45589 \n10 10 7 1", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}