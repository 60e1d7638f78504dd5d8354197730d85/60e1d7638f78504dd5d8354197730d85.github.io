{"Q_ID": "1311310019", "S_NAME": "Input and Output Statemen", "Q_NAME": "Subtree swapping", "Q_DESC": "You are given rooted tree with N weighted nodes numbered from 1 to N. The root of tree is node with number 1. Your goal is to handle Q queries, each of which can be one of the below three types:\n\ngetSum(u) := returns sum of values in nodes in u's subtree.\nadd(u, x) := adds x to values of every node in u's subtree (including u).\nswap(u, v) := swaps whole subtrees of u and v if and only if the subtrees are disjoint.\nInput\n\nThe first line of the input contains two space separated integers N and Q, denoting the number of nodes in the tree and the number of queries to handle, respectively.\n\nIn the second line there are N space separated integers w1, w2, ..., wN, where wi denotes the value assigned to node i at the beginning.\n\nEach of the following N-1 lines contains two space separated integers u and v denoting that there is an edge between u to v in the tree.\n\nThe i-th of the following Q lines contains a description of the i-th query. It starts with integer qtype denoting the type of the query. If qtype=1, then it is followed by a single integer denoting the parameter of the query. Otherwise, if qtype=2 or qtype=3, it is followed by two space separated integers denoting the parameters to the query.\n\nOutput\n\nFor each query of type 1, output the answer for such a query in a single line. Moreover, output -1 for each query of type 3 for which the given subtrees are not disjoint.\n\nConstraints\n\n1  v, u  N\n1  x  105\n1  wi  105", "TESTCASE_1": "10 5\n1 1 1 1 1 1 1 1 1 1\n1 2\n1 3\n1 8\n3 4\n8 9\n8 10\n4 5\n4 6\n4 7\n2 8 1\n1 3\n3 4 8\n1 3\n3 1 2\n###---###SEPERATOR---###---\n5\n7\n-1", "TESTCASE_2": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}