{"Q_ID": "1312310010", "S_NAME": "Data types and Operators", "Q_NAME": "Integer Sequences", "Q_DESC": "For a fixed integer n, let x1, x2, ..., x2n be a sequence that contains each of the 2n different n bit integers exactly once. To be precise, we say an integer is an n bit integer if it can be expressed in binary with exactly n bits (with, perhaps, some leading zeros). We say the sequence is gradual if two consecutive numbers differ in exactly one bit when written in binary and the first and last numbers also differ in exactly one bit in their binary representations.\n\nYour job is to generate such a sequence. This is normally a fairly standard exercise, but there is one extra constraint. For some reason, there are two particular n bit numbers a and b such that it is illegal to have a and b appear consecutively (in either order) in the sequence and it is illegal to have one of a or b at the start of the sequence and the other at the end.\n\nFor example, if n = 2, a = 1, and b = 3 then the sequence 0, 2, 3, 1 is not allowed since a and b are consecutive. The sequence 1, 0, 2, 3 is also not allowed since a is at the beginning and b is at the end. Finally, the sequence 0, 1, 2, 3 is also not allowed since two bits change when going from 1 to 2 and when going from 3 to 0.\n\nInput\n\nThe first line contains a single positive integer t  30 denoting the number of test cases to follow. Each test case consists of three numbers n, a, b. Here, n is the number of bits (between 1 and 15, inclusive) and a and b are distinct integers between 0 and 2n-1 (inclusive).\n\nOutput\n\nThe output for each test case is a single line consisting of a sequence of 2n integers. This should be such that the sequence is gradual according to the above description and contains all n bit integers. Furthermore, numbers a and b should not appear consecutively (in either order) nor does the start of the sequence contain one of a or b and the end contain the other. If there are many such sequences then any will do. On the other hand, if there is no such sequence then simply print a single line containing -1.", "TESTCASE_1": "3\n2 0 1\n3 1 2\n3 5 7\n###---###SEPERATOR---###---\n -1\n0 1 3 2 6 7 5 4\n1 3 7 6 2 0 4 5", "TESTCASE_2": "4\n7 0 9\n3 7 3\n8 5 8\n4 7 9\n###---###SEPERATOR---###---\n0 1 3 2 6 7 5 4 12 13 15 14 10 11 9 8 24 25 27 26 30 31 29 28 20 21 23 22 18 19 17 16 48 49 51 50 54 55 53 52 60 61 63 62 58 59 57 56 40 41 43 42 46 47 45 44 36 37 39 38 34 35 33 32 96 97 99 98 102 103 101 100 108 109 111 110 106 107 105 104 120 121 123 122 126 127 125 124 116 117 119 118 114 115 113 112 80 81 83 82 86 87 85 84 92 93 95 94 90 91 89 88 72 73 75 74 78 79 77 76 68 69 71 70 66 67 65 64\n\n0 1 3 2 6 7 5 4\n\nn\n0 1 3 2 6 7 5 4 12 13 15 14 10 11 9 8\n\n", "TESTCASE_3": "2\n2 1 2\n1 3 1\n###---###SEPERATOR---###---\n0 1 3 2\n\n-1", "TESTCASE_4": "3\n1 2 3\n4 1 6\n2 3 5\n###---###SEPERATOR---###---\n-1\n\n0 1 3 2 6 7 5 4 12 13 15 14 10 11 9 8\n\n0 1 3 2", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}