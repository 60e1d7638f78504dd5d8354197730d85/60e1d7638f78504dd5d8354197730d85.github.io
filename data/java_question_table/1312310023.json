{"Q_ID": "1312310023", "S_NAME": "Data types and Operators", "Q_NAME": "Divide Me Please", "Q_DESC": "\n\nThere are some short-cut ways to check divisibility of numbers in base 10. Here are some examples:\n\nRemember divisibility testing of 3 in base 10? It was simple, right? We need to add all the digits and then check if it is divisible by 3. Call this method \"1-sum\".\nIn case of testing of 11, we need to add all digits by alternating their signs. For example,1354379988104 = 11*123125453464 and (4-0+1-8+8-9+9-7+3-4+5-3+1) = 0, which is divisible by 11 (0 = 0*11). Lets call this method \"1-altersum\".\nIn case of 7, we need to add all 3-digit-groups by alternating their signs. For example,8618727529993 = 7*1231246789999 and (993-529+727-618+8) = 581, which is divisible by 7 (581 = 7*83). Similarly, we call this method \"3-altersum\".\nIn similar Manner, 13s checking is \"3-altersum\".\nIn this problem, we are interested to see divisibility checking of only prime numbers in base 10. For a prime P, you need to find the smallest positive integer N such that Ps divisibility testing is \"N-sum\" or \"N-altersum\".\n\nInput\n\nAt first you will be given T (T  1000), the number of test cases. Then T lines will follow. In each line there will be single integer P (P  231-1 = 2147483647), the prime number (P is a prime number NOT equal to 2 or 5).\n\nOutput\n\nFor each line of input, produce exactly one line of output like either \"Case <test-case>: <N>-sum\" or \"Case <test-case>: <N>-altersum\". Please see sample input and output for details.", "TESTCASE_1": "4\n3\n7\n11\n13\n###---###SEPERATOR---###---\n1 15 0 0\n2 5 59 50", "TESTCASE_2": "4\n1\n11\n15\n7\n###---###SEPERATOR---###---\nCase 1: 0-sum\nCase 2: 1-altersum\nCase 3: 14-sum\nCase 4: 3-altersum", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}