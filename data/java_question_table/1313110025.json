{"Q_ID": "1313110025", "S_NAME": "Control and Looping", "Q_NAME": "Julius Caesar", "Q_DESC": "Julius Caesar protected his confidential information by encrypting it in a cipher. Caesars cipher rotated every letter in a string by a fixed number,  \"K\", making it unreadable by his enemies. Given a string,  \"S\", and a number, \"K\", encrypt \"S\" and print the resulting string.\n\nNote: The cipher only encrypts letters; symbols, such as \"-\" remain unencrypted.\n\nInput Format\n\nThe first line contains an integer, \"N\" , which is the length of the unencrypted string. \n\nThe second line contains the unencrypted string, \"S\". \n\nThe third line contains the integer encryption key, \"K\" , which is the number of letters to rotate.\n\nConstraints:\n\n1 <= N <=100\n0<=K <= 100\n \nS is a valid ASCII string and does not contain any spaces.\n\nOutput Format\n\nFor each test case, print the encoded string.\n\n\nExplanation\n\nEach unencrypted letter is replaced with the letter occurring  \"K\" spaces after it when listed alphabetically. Think of the alphabet as being both case-sensitive and circular; if  \"K\" rotates past the end of the alphabet, it loops back to the beginning (i.e.: the letter after \"z\" is \"z\", and the letter after  is \"Z\" is \"A\" ).\n\nSelected Examples: \n\"m\" (ASCII 109) becomes \"o\" (ASCII 111). \n \"i\" (ASCII 105) becomes \"k\" (ASCII 107). \n \"-\" remains the same, as symbols are not encoded. \n\"O\" (ASCII 79) becomes \"Q\" (ASCII 81). \n\"z\" (ASCII 122) becomes \"b\" (ASCII 98); because  \"z\" is the last letter of the alphabet,  \"a\" (ASCII 97) is the next letter after it in lower-case rotation.", "TESTCASE_1": "11\nmiddle-Outz\n2\n###---###SEPERATOR---###---\nokffng-Qwvb", "TESTCASE_2": "20\nMiserABLE-Mohammed-m\n5\n###---###SEPERATOR---###---\nRnxjwFGQJ-Rtmfrrji-r", "TESTCASE_3": "10\nABCDEFGHIJ\n5\n###---###SEPERATOR---###---\nFGHIJKLMNO", "TESTCASE_4": "9\ndhahsjaka\n6\n###---###SEPERATOR---###---\njngnypgqg", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}