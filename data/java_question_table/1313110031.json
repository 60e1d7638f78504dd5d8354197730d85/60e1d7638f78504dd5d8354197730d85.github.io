{"Q_ID": "1313110031", "S_NAME": "Control and Looping", "Q_NAME": "Modified Kaprekar Numbers", "Q_DESC": "A modified Kaprekar number is a positive whole number n with d digits, such that when we split its square into two pieces - a right hand piece r with d digits and a left hand piece l that contains the remaining d or d-1 digits, the sum of the pieces is equal to the original number (i.e. l +r  =n )\n\nNote: r may have leading zeros.\n\nHere is an explanation from Wikipedia about the ORIGINAL Kaprekar Number (spot the difference!): In mathematics, a Kaprekar number for a given base is a non-negative integer, the representation of whose square in that base can be split into two parts that add up to the original number again. For instance, 45 is a Kaprekar number, because 45 = 2025 and 20+25 = 45.\n\nThe Task\nYou are given the two positive integers p and q, where p is lower than q. Write a program to determine how many Kaprekar numbers are there in the range between p and q (both inclusive) and display them all.\n\nInput Format\nThere will be two lines of input: p , lowest value q , highest value\n\nConstraints: \n\n0pq100000\n\nOutput Format\n\nOutput each Kaprekar number in the given range, space-separated on a single line. If no Kaprekar numbers exist in the given range, print INVALID RANGE.\n", "TESTCASE_1": "1\n100\n###---###SEPERATOR---###---\n1 9 45 55 99", "TESTCASE_2": "45000\n100000\n###---###SEPERATOR---###---\n77778 82656 95121 99999", "TESTCASE_3": "57\n999\n###---###SEPERATOR---###---\n99 297 703 999", "TESTCASE_4": "19\n202\n###---###SEPERATOR---###---\n45 55 99", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}