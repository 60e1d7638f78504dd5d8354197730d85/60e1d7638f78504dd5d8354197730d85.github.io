{"Q_ID": "1313110040", "S_NAME": "Control and Looping", "Q_NAME": "Save the Prisoner!", "Q_DESC": "A jail has N prisoners, and each prisoner has a unique id number,S , ranging from 1 to N. There are M sweets that must be distributed to the prisoners.\n\nThe jailer decides the fairest way to do this is by sitting the prisoners down in a circle (ordered by ascending S ), and then, starting with some random , distribute one candy at a time to each sequentially numbered prisoner until all M candies are distributed. \n\nFor example, if the jailer picks prisoner S=2, then his distribution order would be (2,3,4,5,...,n-1,n,1,2,3,4,..) until all M sweets are distributed.\n\nBut wait - there's a catch - the very last sweet is poisoned! Can you find and print the ID number of the last prisoner to receive a sweet so he can be warned?\n\nInput Format\n\nThe first line contains an integer,T , denoting the number of test cases. \n\nThe T subsequent lines each contain 3 space-separated integers: \n\n N (the number of prisoners), M  (the number of sweets), and  S(the prisoner ID), respectively.\n\nConstraints\n\n 1<=T<=100\n 1<=N<=10 power 9\n 1<=M<=109 power 9\n 1<=S<=109 power 9\n\nOutput Format\n\nFor each test case, print the ID number of the prisoner who receives the poisoned sweet on a new line.\n", "TESTCASE_1": "1\n5 2 1\n###---###SEPERATOR---###---\n2", "TESTCASE_2": "1\n7 3 9\n###---###SEPERATOR---###---\n4", "TESTCASE_3": "1\n9 3 3\n###---###SEPERATOR---###---\n5", "TESTCASE_4": "2\n8 3 2\n5 4 3\n###---###SEPERATOR---###---\n4\n1", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}