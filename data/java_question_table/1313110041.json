{"Q_ID": "1313110041", "S_NAME": "Control and Looping", "Q_NAME": "Minimum Distances", "Q_DESC": "Consider an array of n integers,A=[a subscript 0 ,a subscript 1,...,a subscript n-1] . The distance between two indices, i and j, is denoted by d subscript i,j = |i-j|.\n\nGiven A, find the minimum d subscript i,j such that a subscript i=a subscript j and i not equal to j. In other words, find the minimum distance between any pair of equal elements in the array. If no such value exists, print -1 .\n\nNote: |a| denotes the absolute value of a .\n\nInput Format\n\nThe first line contains an integer ,n , denoting the size of array  A. \n\nThe second line contains n space-separated integers describing the respective elements in array A .\n\nConstraints\n\n 1=n=10 power 3\n 1=a subscript i =10 power 5\n\nOutput Format\n\nPrint a single integer denoting the minimum d subscript i,j in  A; if no such value exists, print -1.\n", "TESTCASE_1": "6\n7 1 3 4 1 7\n###---###SEPERATOR---###---\n3", "TESTCASE_2": "5\n7 1 3 4 6\n###---###SEPERATOR---###---\n-1", "TESTCASE_3": "4\n7 1 3 4\n###---###SEPERATOR---###---\n-1", "TESTCASE_4": "12\n78 45 32 19 0 54 81 2 5 49 1 27\n###---###SEPERATOR---###---\n-1", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}