{"Q_ID": "1313210003", "S_NAME": "Control and Looping", "Q_NAME": "Number Classification", "Q_DESC": "\tWrite a Java program to classify Abundant, deficient and perfect number (integers) between 1 to n.\n\nIn number theory, an abundant number is a number for which the sum of its proper divisors is greater than the number itself.\nExample :\nThe first few abundant numbers are:\n12, 18, 20, 24, 30, 36, 40, 42, 48, 54, 56, 60, 66, 70, 72, 78, 80, 84, 88, 90, 96, 100, 102,\nThe integer 12 is the first abundant number. Its proper divisors are 1, 2, 3, 4 and 6 for a total of 16.\nDeficient number: In number theory, a deficient number is a number n for which the sum of divisors (n)2n, or, equivalently, the sum of proper divisors (or aliquot sum) s(n)n. The value 2n  (n) (or n  s(n)) is called the number's deficiency.\nAs an example, divisors of 21 are 1, 3 and 7, and their sum is 11. Because 11 is less than 21, the number 21 is deficient. Its deficiency is 2  21  32 = 10.\nThe first few deficient numbers are:\n1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 29, 31, 32, 33, .\nPerfect number: In number system, a perfect number is a positive integer that is equal to the sum of its proper positive divisors, that is, the sum of its positive divisors excluding the number itself.\nEquivalently, a perfect number is a number that is half the sum of all of its positive divisors (including itself) i.e. 1(n) = 2n.\nThe first perfect number is 6. Its proper divisors are 1, 2, and 3, and 1 + 2 + 3 = 6. Equivalently, the number 6 is equal to half the sum of all its positive divisors: ( 1 + 2 + 3 + 6 ) / 2 = 6. The next perfect number is 28 = 1 + 2 + 4 + 7 + 14. This is followed by the perfect numbers 496 and 8128.\n\nExpected Output :\nNumber Counting [(integers) between 1 to 10,000]: \nDeficient number: 7508 \nPerfect number: 4 \nAbundant number: 2488\t", "TESTCASE_1": "10000\n###---###SEPERATOR---###---\nDeficient number: 7508\nPerfect number: 4\nAbundant number: 2488", "TESTCASE_2": "5000\n###---###SEPERATOR---###---\nDeficient number: 3758\nPerfect number: 3\nAbundant number: 1239", "TESTCASE_3": "15000\n###---###SEPERATOR---###---\nDeficient number: 11277\nPerfect number: 4\nAbundant number: 3719", "TESTCASE_4": "2000\n###---###SEPERATOR---###---\nDeficient number: 1504\nPerfect number: 3\nAbundant number: 493", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}