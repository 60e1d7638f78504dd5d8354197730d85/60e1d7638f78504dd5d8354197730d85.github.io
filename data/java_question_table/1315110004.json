{"Q_ID": "1315110004", "S_NAME": "Classes and Objects", "Q_NAME": "Simple Statistics ", "Q_DESC": "Sergey has made N measurements. Now, he wants to know the average value of the measurements made.\n\nIn order to make the average value a better representative of the measurements, before calculating the average, he wants first to remove the highest K and the lowest K measurements. After that, he will calculate the average value among the remaining N - 2K measurements. Could you help Sergey to find the average value he will get after these manipulations?\n\nInput\n\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two space-separated integers N and K denoting the number of measurements and the number of the greatest and the lowest values that will be removed.\nThe second line contains N space-separated integers A1, A2, ..., AN denoting the measurements.\n\nOutput\n\nFor each test case, output a single line containing the average value after removing K lowest and K greatest measurements.\nYour answer will be considered correct, in case it has absolute or relative error, not exceeding 10-6.\n\n1<=T<=100\n1<=N<=104\n0<=2K< N\n-106<=Ai<=106\n\nSubtasks\nSubtask #1 (50 points): K = 0\nSubtask #2 (50 points): no additional constraints\n\nExample\nInput:\n3\n5 1\n2 9 -10 25 1\n5 0\n2 9 -10 25 1\n3 1\n1 1 1\n\nOutput:\n4.000000\n5.400000\n1.000000\n\n\nExplanation\n\nExample case 1. After removing 1 greatest and 1 lowest measurement, we get the set {2, 9, 1}. The average value in this set is (2+9+1)/3=4.\n\nExample case 2. The average value in the set {2, 9, -10, 25, 1} is (2+9-10+25+1)/5=5.4.\n\nExample case 3. After removing the 1 largest and smallest measurements, Sergey will be left with only one measurement, i.e. 1. Average of this is 1 itself.\n\nMandatory:\n\n1. Create a new class \"Sample\" and the objectname for the class should be \"objname\"\n\n2. Create two methods as follows:\n\na. Method name = getDetails() to get all inputs.\nb. Type = void\nc. Access Specifier = public\nd. Argument Type = no arguments\n\na. Method name = displayDetails()\nb. Type = void\nc. Access Specifier = public\nd. Argument Type = no arguments\n\n3. Access the methods getDetails() and displayDetails() using the object name \"objname\" from the main method\n\n4. The input details are promoted in getDetails() and the entered values are printed in displayDetails()", "TESTCASE_1": "5\n5 0\n2 9 -10 25 1\n5 1\n2 9 -10 25 1\n5 1\n2 9 -10 25 1\n5 0\n2 9 -10 25 1\n5 1\n2 9 -10 25 1\n###---###SEPERATOR---###---\n5.400000\n4.000000\n4.000000\n5.400000\n4.000000", "TESTCASE_2": "1\n5 0\n2 9 -10 25 1\n###---###SEPERATOR---###---\n5.400000", "TESTCASE_3": "3\n5 1\n2 9 -10 25 1\n5 0\n2 9 -10 25 1\n5 1\n2 9 -10 25 1\n###---###SEPERATOR---###---\n4.000000\n5.400000\n4.000000", "TESTCASE_4": "3\n5 0\n2 9 -10 25 1\n5 1\n2 9 -10 25 1\n5 1\n2 9 -10 25 1\n###---###SEPERATOR---###---\n5.400000\n4.000000\n4.000000", "TESTCASE_5": "public void getDetails()\n###---###SEPERATOR---###---\nobjname.displayDetails()"}