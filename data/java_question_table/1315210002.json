{"Q_ID": "1315210002", "S_NAME": "Classes and Objects", "Q_NAME": "A-E Hash Function", "Q_DESC": "Chef Ash and Chef Elsh invented a new hash function! Their hash function will map a binary string consisting of characters 'A' and 'E' into an integer called the hash value of the string.\n\nThe pseudocode of the hash function is as below. hash(S) is the hash value of a binary string S. |S| denotes the length of S.\n\nfunction hash(S):\n result = number of characters 'A' in S\n if |S|  1:\n  (S1, S2) = split(S)\n  result = result + max(hash(S1), hash(S2))\n end if\n return result\nend function\nThe function split in the above pseudocode takes a binary string S as the parameter and returns a pair of binary strings (S1, S2) such that:\n\n|S1| = |S2|.\nThe difference of |S1| and |S2| is at most 1.\nThe concatenation of S1 and S2 (in that order) is S.\nFor example, split(AAAEE) returns (AA, AEE), whereas split(AEAEAE) returns (AEA, EAE).\n\nYou doubt that this hash function have good distribution of different hash values. So, you wonder how many different binary strings consisting of A 'A' characters and E 'E' characters that have hash value of V.\n\nInput\n\nThe first line contains a single integer T, the number of test cases. T test cases follow. Each testcase consists of a single line consisting of three integers A, E, and V.\n\nOutput\n\nFor each test case, output a single line consisting the number of different binary strings satisfying the rule, modulo 1000000007.\n\nConstraints\n\n1  T  1000\n0  A  50\n0  E  50\n0  V  1000", "TESTCASE_1": "4\n0 0 0\n1 0 1\n3 2 6\n4 2 8\n###---###SEPERATOR---###---\n1\n1\n3\n4", "TESTCASE_2": "4\n1 0 0\n1 0 1\n3 2 5\n4 2 7\n###---###SEPERATOR---###---\n0\n1\n0\n0", "TESTCASE_3": "4\n1 0 0\n1 0 1\n3 2 44 2 7\n###---###SEPERATOR---###---\n0\n1\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}