{"Q_ID": "1315310011", "S_NAME": "Classes and Objects", "Q_NAME": "Chef and Cut", "Q_DESC": "Chef likes Graphs Theory a lot. Recently he learned about minimum cut. During his assignments, he found a problem which he couldn't solve. Can you please help him in solving the problem?\n\nYou are given an oriented weighted graph G with two chosen nodes s and t. Let's order all distinct cuts between s and t cuts between s and t by weight. You have to find the weight of k-th minimum cut. Two cuts (U1, V1) and (U2, V2) are said to be distinct if the U1 != U2 or V1 != V2. In total, there will be total 2^(n-2) such cuts.\n\nInput\n\nThere is a single test case.\n\nFirst line of the input contains three positive integers - N (number nodes of the graph) and M (number of edges) and k\n\nSecond line of the input contains two integers - s and t\n\nNext M lines contain information about edges\n\nFirst two integers of each of the next M lines denoting nodes connected by edge, third integer denoting weight of this edge c.\n\nOutput\n\nOutput a single integer in a line - weight of k-th minimum cut of graph G\n\nConstraints\n\n2  N  77\n2  M  777\n2  k  777\n1  s, t  N\n1  c  106\nIt is guaranteed that K won't exceed number of distinct cuts, i.e. 1  K  2(n-2)\nSubtasks\n\nSubtask 1: N  10. Points - 20\nSubtask 2: Original constraints. Points - 80", "TESTCASE_1": "4 8 2\n1 4\n1 2 4\n1 4 1\n2 3 4\n2 4 7\n3 2 10\n3 4 1\n4 1 7\n4 3 2\n\n###---###SEPERATOR---###---\n9", "TESTCASE_2": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}