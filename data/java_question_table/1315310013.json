{"Q_ID": "1315310013", "S_NAME": "Classes and Objects", "Q_NAME": "Lame Queen Game", "Q_DESC": "Code and Chef play a game on the set of all points with positive integer coordinates of the usual coordinate plane. Initially the lame queen stands in the point with coordinates (x0, y0) or shortly: in the point (x0, y0). Players alternate moves. Code moves first. During each move the player can move the queen from the point (x, y) to the point (x - a, y), (x, y - a) or (x - a, y - a) for some positive integer a, provided that the new point has positive coordinates. But since the queen is lame she possibly can't make all diagonal moves. Namely she can move from the point (x, y) to the point (x - a, y - a) only if a is divisible by d, where d is some positive integer that is called the queen lameness. So if d = 2 the queen can move diagonally from the point (x, y) only to the points (x - 2, y - 2), (x - 4, y - 4), (x - 6, y - 6) and so on. However if d = 1 then the queen becomes the usual chess queen. The first player who can't make a valid move loses the game. Both players play optimally in their respective moves. \n\nAfter playing this game for some time Chef realizes that he loses almost always. Now he wants to know what is the probability that he wins if initial point (x0, y0) is chosen randomly from the rectangle x1 = x0 = x2, y1 = y0 = y2. But I should warn that he wants to know this for a large number of rectangles.\n\nInput\n\nThe first line contains two space separated positive integers d and T, the queen lameness and the number of rectangles for which Chef wants to know the answer. Each of the next T lines contains four space separated positive integers x1, y1, x2, y2 the coordinates of rectangle corners.\n\nOutput\n\nFor each rectangle from the input file, output a single line containing the probability in the form of an irreducible fraction that Chef wins if the initial cell is chosen randomly from this rectangle.\n\nConstraints\n\n1 = d = 20 \n1 = T = 100000 \n1 = x1 = x2 = 200000 ", "TESTCASE_1": "1 4\n1 1 4 4\n2 4 5 8\n3 7 10 10\n5 8 5 8\n###---###SEPERATOR---###---\n3/16\n1/10\n1/32\n1/1", "TESTCASE_2": "1 4\n1 1 2 24 2 5 8\n3 7 10 10\n5 8 5 8\n23\n###---###SEPERATOR---###---\n1/24\n1/7\n0/1\n1/19", "TESTCASE_3": "5 5 6 1 1 2 24 2 5 8\n3 7 10 10\n5 8 5 8\n23\n28\n44\n32\n###---###SEPERATOR---###---\n1/8\n1/42\n3/32\n0/1\n1/22", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}