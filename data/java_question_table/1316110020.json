{"Q_ID": "1316110020", "S_NAME": "Methods", "Q_NAME": "Product with same static method name and different arguments", "Q_DESC": "Write a methods that returns the product of two numbers and product of three numbers.\n\nThe method name should be same\n\nExample\n\nFor param1 = 1, param2 = 2 and param3 = 3, the output should be\nproduct(param1, param2) = 2.\nproduct(param1, param2, param3) = 6\n\n\nMandatory:\n\n1. Create two methods with same name and same type in the main class (TestClass) as follows:\n\nMethod name = productTwo\nArguments = Two arguments of type integer\nReturn type - integer\nAccess specifier - static\n\nMethod name = productTwo\nArguments = Three arguments of type integer\nReturn type - integer\nAccess specifier - static\n\n2. Get three inputs from the user in the main method with variable names as \"num1\" , \"num2\", \"num3\"  of type integer\n\n3. Call or access the methods \"productTwo(num1,num2)\" and \"productThree(num1,num2,num3)\"  from the main method using classname.methodname\n\n4.  The final returned value from the methods should be printed in the main method itself.\n\nHint for 4th Mandatory Test Case:\n\na. System.out.println(TestClass.productTwo(num1,num2))\nb. System.out.println(TestClass.productTwo(num1,num2,num3))\n", "TESTCASE_1": "4 5 12\n###---###SEPERATOR---###---\n20\n240", "TESTCASE_2": "6 3 10\n###---###SEPERATOR---###---\n18\n180", "TESTCASE_3": "8 4 11\n###---###SEPERATOR---###---\n32\n352", "TESTCASE_4": "19 10 5\n###---###SEPERATOR---###---\n190\n950", "TESTCASE_5": "System.out.println(TestClass.productTwo(num1,num2))\n###---###SEPERATOR---###---\nSystem.out.println(TestClass.productTwo(num1,num2,num3))"}