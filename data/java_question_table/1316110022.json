{"Q_ID": "1316110022", "S_NAME": "Methods", "Q_NAME": "Sum of Adjacent Elements - Method and Array", "Q_DESC": "Given an array of integers, find the pair of adjacent elements that has the largest sum and return that sum\n\nInput Format:\nAn array of integers containing at least 2 elements\n\nOutput : \nAn integer The largest sum of adjacent elements. \n\nExample\n\nFor inputArray = [3, 6, -2, -5, 7, 3], the output should be  adjacentElementsSum(inputArray) = 10.\n\n7 and 3 produce the largest sum.\n\nMandatory:\n\n1. Create a  class Sample with two following  method:\n\n2. Method Details:\n\na. Method Name = adajcentElementsSum ()\nb. Access Specifier = public\nc. Argument = Two arguments [Array elements and array length]  of type integer , In first test- case the array elements are 18,34,22,-19,31,-29,12 and array length is 7\nd. Return type = integer , It returns the largest sum of adjacent elements to the main method\n\n3. Access the  adajcentElementsSum(int arr[],int n) in Sample class from main method class (TestClass)\n\nNote: \nThe method definition should have variables as arr[] and n   public int adajcentElementsSum(int arr[],int n)\nReturn the largest sum after calculating sadjacentsum in the method to the main method", "TESTCASE_1": "7\n18 34 22 -19 31 -29 12\n###---###SEPERATOR---###---\n56", "TESTCASE_2": "8\n49 91 34 -41 -32 73 -50 45\n###---###SEPERATOR---###---\n140", "TESTCASE_3": "6\n56 23 12 52 45 37\n###---###SEPERATOR---###---\n97", "TESTCASE_4": "4\n83 12 45 17\n###---###SEPERATOR---###---\n95", "TESTCASE_5": "adajcentElementsSum(int arr[],int n)\n###---###SEPERATOR---###---\nreturn"}