{"Q_ID": "1316110025", "S_NAME": "Methods", "Q_NAME": "Shapes", "Q_DESC": "Write a program that computes the amount of paint needed to paint different objects. The hierarchy will consist of a parent class Shape with three derived classes - Sphere, Rectangle, and Cylinder. \n\nFor the purposes of this problem, the only attribute a shape will have is a name and the method of interest will be the one that computes the area of the shape (surface area in the case of three-dimensional shapes). \n\nDo the following. \n\n1.Write an abstract class \"Shape\" with the following properties:  \n\nAn instance variable \"shapeName\" of type String  \nAn abstract method area()  \nA toString method that returns the name of the shape\n\n2. Create a class \"sphere\" which is a descendant of Shape. \nA sphere has a radius and its area (surface area) is given by the formula \n     4*PI*radius^2\n\nDefine similar classes for a rectangle and a cylinder. Both the Rectangle class and the Cylinder class are descendants of the Shape class.\n \nA rectangle is defined by its length and width and its area is length times width.\n\nA cylinder is defined by a radius and height and its area (surface area) is PI*radius^2*height. Define the toString method in a way similar to that for the Sphere class.\n\n3. Create a class \"Paint\" (which has a \"coverage\" and a method to compute the amount of paint needed to paint a shape). \n\nCorrect the return statement in the amount method so the correct amount will be returned. \n\nUse the fact that the amount of paint needed is the area of the shape divided by the coverage for the paint.\n\n4. Create a class with main method that computes the amount of paint needed to paint various shapes. A paint object has been instantiated. \n\nAdd the following to complete the program: \n\nInstantiate the three shape objects: \n\ndeck to be a 20 by 35 foot rectangle,\n\nbigBall to be a sphere of radius 15, and \n\ntank to be a cylinder of radius 10 and height 30. \n\nMake the appropriate method calls to assign the correct values to the three amount variables. \nYou should see polymorphism in action as the amount method computes the amount of paint for various shapes.\n", "TESTCASE_1": "7\n###---###SEPERATOR---###---\nAmount for Rectangle of length 20.0 and width 35.0 is 100.00\nAmount for Sphere of radius 15.0 is 403.92\nAmount for Cylinder of radius 10.0 and height 30.0 is 1346.40", "TESTCASE_2": "5\n###---###SEPERATOR---###---\nAmount for Rectangle of length 20.0 and width 35.0 is 140.00\nAmount for Sphere of radius 15.0 is 565.49\nAmount for Cylinder of radius 10.0 and height 30.0 is 1884.96", "TESTCASE_3": "4\n###---###SEPERATOR---###---\nAmount for Rectangle of length 20.0 and width 35.0 is 175.00\nAmount for Sphere of radius 15.0 is 706.86\nAmount for Cylinder of radius 10.0 and height 30.0 is 2356.19", "TESTCASE_4": "15\n###---###SEPERATOR---###---\nAmount for Rectangle of length 20.0 and width 35.0 is 46.67\nAmount for Sphere of radius 15.0 is 188.50\nAmount for Cylinder of radius 10.0 and height 30.0 is 628.32", "TESTCASE_5": "class Sphere extends Shape\n###---###SEPERATOR---###---\nclass Cylinder extends Shape"}