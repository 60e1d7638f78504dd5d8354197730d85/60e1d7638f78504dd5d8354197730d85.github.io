{"Q_ID": "1319110005", "S_NAME": "Exceptional Handling", "Q_NAME": "Binary to Decimal - Userdefined Exception", "Q_DESC": "Write a Java program to convert Binary to Decimal number using User defined Exception\n\nHelp:\n\n1. Create a class \"BinaryFormatException\" extends NumberFormatException\n\n2. Create a Parameterised Constructor under \"BinaryFormatException\" class as follows\n\na. Method Name = BinaryFormatException\nb. Access Specifier = public\nc. Argument = One Argument with String type and variable name \"msg\"\nd. Use super(msg)\n\n3. In the main method get the input of binary number and call the  static method under main class (TestClass)  \n\na. Method name = binToDecimal\nb. Parameter = One argument with String type\nc. If number is not binary then throw exception message as \"Number is not Binary\"\n\nHint:\nthrow new BinaryFormatException(\"Number is not Binary\")\n\n4. Use catch block with user defined exception as  \"BinaryFormatException\"  with exception instance as \"e\"\n\n5. Print the exception message \"e\" whenever the exception is thrown from methods", "TESTCASE_1": "1111\n###---###SEPERATOR---###---\n15", "TESTCASE_2": "112411\n###---###SEPERATOR---###---\nBinaryFormatException: Number is not Binary", "TESTCASE_3": "10001\n###---###SEPERATOR---###---\n17", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "System.out.println(e)\n###---###SEPERATOR---###---\nclass BinaryFormatException extends NumberFormatException"}