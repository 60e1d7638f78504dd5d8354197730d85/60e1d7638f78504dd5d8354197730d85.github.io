{"Q_ID": "1319110008", "S_NAME": "Exceptional Handling", "Q_NAME": "User Defined Exception", "Q_DESC": "In TestClass the class should have the following fields:\n\n1. The \"description\" field is a String object that holds a brief description of the item.\n\n2. The \"unitsOnHand\" field is an int variable that holds the number of units currently in inventory.\n\n3. The \"price\" field is a double that holds the items retail price.\n\nCreate a member method which reads the above three details and stores them in the corresponding fields.\n\n1. Write an exception class named \"NegativePriceException\" that can be instantiated and thrown when a negative number is given for the price. \nFor negative price, display the error message \"Price cannot be Negative\". \nHint: throw new NegativePriceException()\n\n2. Write another exception class named \"NegativeHandException\" that can be instantiated and thrown when a negative number is given for the units on hand.\nHint: throw new NegativeHandException()\n\nFor negative units on hand, display the error message \"Units on hand cannot be Negative\"\n\nCreate two class \"NegativeHandException\" that extends Exception class and \"NegativePriceException\" that extends Exception class with default constructor", "TESTCASE_1": "Shirt\n10\n50.25\n###---###SEPERATOR---###---\nDetails stored successfully", "TESTCASE_2": "Soap\n-20\n10.22\n###---###SEPERATOR---###---\nUnits on hand cannot be Negative", "TESTCASE_3": "Soap\n20\n-10.25\n###---###SEPERATOR---###---\nPrice cannot be Negative", "TESTCASE_4": "Soap\n20\n10.22\n###---###SEPERATOR---###---\nDetails stored successfully", "TESTCASE_5": "class NegativeHandException extends Exception\n###---###SEPERATOR---###---\nclass NegativePriceException extends Exception"}