{"Q_ID": "1319310008", "S_NAME": "Exceptional Handling", "Q_NAME": "Unusual Games", "Q_DESC": "Recently Chef invented a two player game. The game is played on a horizontal strip consisting of n cells that are numbered from left to right with consecutive integers from 1 to n. At the beginning of the game, a pawn is placed at the cell numbered x. The players make moves alternately, i.e. the first player makes all odd numbered moves (1st, 3rd, 5th and so on) and the second player all even numbered moves (2nd, 4th, 6th and so on). During the k-th move the player should move the pawn either exactly k cells to the left or exactly k cells to the right (provided the pawn doesn't land outside the strip). For example, in the k-th move, if the pawn is located at cell p before the move, it can be moved to either (p - k) or (p + k) if the appropriate cells are part of the strip . The player who is not able to make a move (i.e. both the above choices lead to cells outside of the strip) loses the game. Assume that both the players play optimally.\n\nBefore trying to play the game himself, Chef wants to understand the game more. So, he wants to find the outcome of m such games, where in the i-th game the initial location of pawn is xi. Can you please help Chef in this?\n\nInput\n\nThe first line of the input contains an integer T denoting the number of test cases.\n\nFor each test case, the first line of input contains two space separated integers  n and m.\n\nThe second line contains m space separated integers  x1, x2, ..., xm.\n\nOutput\n\nFor each test case, output a single line containing m space separated integers  i-th of them should be an integer either 1 or 2, corresponding to the player that will win if the game starts with the pawn located at cell xi.\n\nConstraints\n\n1  T  300\n1  the sum of n over all test cases  106\n1  m  50\n1  xi  n", "TESTCASE_1": "2\n3 2\n2 3\n4 2\n2 4\n###---###SEPERATOR---###---\n2 1\n1 1", "TESTCASE_2": "4\n3 2\n2 3\n2 2\n2 2\n3 2\n2 3\n2 2\n2 2\n3 2\n3 2\n2 2\n2 2\n###---###SEPERATOR---###---\n2 1\n\n1 1\n\n2 1\n\n1 1", "TESTCASE_3": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_4": "0\n###---###SEPERATOR---###---\n0", "TESTCASE_5": "0\n###---###SEPERATOR---###---\n0"}